<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>The purpose of JavaScript UI libraries/frameworks</title>
      <link href="/2020/04/07/2020-4-7-ui-library-framework-purpose/"/>
      <url>/2020/04/07/2020-4-7-ui-library-framework-purpose/</url>
      
        <content type="html"><![CDATA[<h3 id="What-is-the-purpose-of-JavaScript-UI-libraries-frameworks-like-React-Vue-Angular-Hyperapp-etc"><a href="#What-is-the-purpose-of-JavaScript-UI-libraries-frameworks-like-React-Vue-Angular-Hyperapp-etc" class="headerlink" title="What is the purpose of JavaScript UI libraries/frameworks like React, Vue, Angular, Hyperapp, etc?"></a>What is the purpose of JavaScript UI libraries/frameworks like React, Vue, Angular, Hyperapp, etc?</h3><h4 id="Answer"><a href="#Answer" class="headerlink" title="Answer"></a>Answer</h4><p>The main purpose is to avoid manipulating the DOM directly and keep the state of an application<br>in sync with the UI easily. Additionally, they provide the ability to create components that can be reused when they have similar functionality with minor differences, avoiding duplication which would require multiple changes whenever the structure of a component which is reused in multiple places needs to be updated.</p><p>When working with DOM manipulation libraries like jQuery, the data of an application is generally kept in the DOM itself, often as class names or <code>data</code> attributes. Manipulating the DOM to update the UI involves many extra steps and can introduce subtle bugs over time. Keeping the state separate and letting a framework handle the UI updates when the state changes reduces cognitive load. Saying you want the UI to look a certain way when the state is a certain value is the declarative way of creating an application, instead of the imperative way of manually updating the UI to reflect the new state.</p><h4 id="Good-to-hear"><a href="#Good-to-hear" class="headerlink" title="Good to hear"></a>Good to hear</h4><ul><li>The virtual DOM is a representation of the real DOM tree in the form of plain objects, which allows a library to write code as if the entire document is thrown away and rebuilt on each change, while the real DOM only updates what needs to be changed. Comparing the new virtual DOM against the previous one leads to high efficiency as changing real DOM nodes is costly compared to recalculating the virtual DOM.</li><li>JSX is an extension to JavaScript that provides XML-like syntax to create virtual DOM objects which is transformed to function calls by a transpiler. It simplifies control flow (if statements/ternary expressions) compared to tagged template literals.</li></ul><h5 id="Additional-links"><a href="#Additional-links" class="headerlink" title="Additional links"></a>Additional links</h5><ul><li><a href="https://github.com/hyperapp/hyperapp#view" target="_blank" rel="noopener">Virtual DOM in Hyperapp</a></li></ul><!-- tags: (javascript) --><!-- expertise: (2) -->]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> 基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>virtual DOM</title>
      <link href="/2020/04/06/2020-4-6-virtual-dom/"/>
      <url>/2020/04/06/2020-4-6-virtual-dom/</url>
      
        <content type="html"><![CDATA[<h3 id="What-is-a-virtual-DOM-and-why-is-it-used-in-libraries-frameworks"><a href="#What-is-a-virtual-DOM-and-why-is-it-used-in-libraries-frameworks" class="headerlink" title="What is a virtual DOM and why is it used in libraries/frameworks?"></a>What is a virtual DOM and why is it used in libraries/frameworks?</h3><h4 id="Answer"><a href="#Answer" class="headerlink" title="Answer"></a>Answer</h4><p>The virtual DOM (VDOM) is a representation of the real DOM in the form of plain JavaScript objects. These objects have properties to describe the real DOM nodes they represent: the node name, its attributes, and child nodes.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"counter"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>0<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>The above markup’s virtual DOM representation might look like this:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  nodeName: <span class="string">"div"</span>,</span><br><span class="line">  attributes: &#123; <span class="attr">class</span>: <span class="string">"counter"</span> &#125;,</span><br><span class="line">  children: [</span><br><span class="line">    &#123;</span><br><span class="line">      nodeName: <span class="string">"h1"</span>,</span><br><span class="line">      attributes: &#123;&#125;,</span><br><span class="line">      children: [<span class="number">0</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      nodeName: <span class="string">"button"</span>,</span><br><span class="line">      attributes: &#123;&#125;,</span><br><span class="line">      children: [<span class="string">"-"</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      nodeName: <span class="string">"button"</span>,</span><br><span class="line">      attributes: &#123;&#125;,</span><br><span class="line">      children: [<span class="string">"+"</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The library/framework uses the virtual DOM as a means to improve performance. When the state of an application changes, the real DOM needs to be updated to reflect it. However, changing real DOM nodes is costly compared to recalculating the virtual DOM. The previous virtual DOM can be compared to the new virtual DOM very quickly in comparison.</p><p>Once the changes between the old VDOM and new VDOM have been calculated by the diffing engine of the framework, the real DOM can be patched efficiently in the least time possible to match the new state of the application.</p><h4 id="Good-to-hear"><a href="#Good-to-hear" class="headerlink" title="Good to hear"></a>Good to hear</h4><ul><li>Why accessing the DOM can be so costly.</li></ul><h5 id="Additional-links"><a href="#Additional-links" class="headerlink" title="Additional links"></a>Additional links</h5><!-- Whenever possible, link a more detailed explanation. --><ul><li><a href="http://reactkungfu.com/2015/10/the-difference-between-virtual-dom-and-dom/" target="_blank" rel="noopener">The difference between Virtual DOM and DOM</a></li></ul><!-- tags: (javascript) --><!-- expertise: (2) -->]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> 基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>var, let and const</title>
      <link href="/2020/04/05/2020-4-5-var-let-const/"/>
      <url>/2020/04/05/2020-4-5-var-let-const/</url>
      
        <content type="html"><![CDATA[<h3 id="What-are-the-differences-between-var-let-const-and-no-keyword-statements"><a href="#What-are-the-differences-between-var-let-const-and-no-keyword-statements" class="headerlink" title="What are the differences between var, let, const and no keyword statements?"></a>What are the differences between <code>var</code>, <code>let</code>, <code>const</code> and no keyword statements?</h3><h4 id="Answer"><a href="#Answer" class="headerlink" title="Answer"></a>Answer</h4><h5 id="No-keyword"><a href="#No-keyword" class="headerlink" title="No keyword"></a>No keyword</h5><p>When no keyword exists before a variable assignment, it is either assigning a global variable if one does not exist, or reassigns an already declared variable. In non-strict mode, if the variable has not yet been declared, it will assign the variable as a property of the global object (<code>window</code> in browsers). In strict mode, it will throw an error to prevent unwanted global variables from being created.</p><h5 id="var"><a href="#var" class="headerlink" title="var"></a>var</h5><p><code>var</code> was the default statement to declare a variable until ES2015. It creates a function-scoped variable that can be reassigned and redeclared. However, due to its lack of block scoping, it can cause issues if the variable is being reused in a loop that contains an asynchronous callback because the variable will continue to exist outside of the block scope.</p><p>Below, by the time the the <code>setTimeout</code> callback executes, the loop has already finished and the <code>i</code> variable is <code>10</code>, so all ten callbacks reference the same variable available in the function scope.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// logs `10` ten times</span></span><br><span class="line">    <span class="built_in">console</span>.log(i)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Solutions with `var` */</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  <span class="comment">// Passed as an argument will use the value as-is in</span></span><br><span class="line">  <span class="comment">// that point in time</span></span><br><span class="line">  setTimeout(<span class="built_in">console</span>.log, <span class="number">0</span>, i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  <span class="comment">// Create a new function scope that will use the value</span></span><br><span class="line">  <span class="comment">// as-is in that point in time</span></span><br><span class="line">  ;(<span class="function"><span class="params">i</span> =&gt;</span> &#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(i)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)(i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="let"><a href="#let" class="headerlink" title="let"></a>let</h5><p><code>let</code> was introduced in ES2015 and is the new preferred way to declare variables that will be reassigned later. Trying to redeclare a variable again will throw an error. It is block-scoped so that using it in a loop will keep it scoped to the iteration.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// logs 0, 1, 2, 3, ...</span></span><br><span class="line">    <span class="built_in">console</span>.log(i)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="const"><a href="#const" class="headerlink" title="const"></a>const</h5><p><code>const</code> was introduced in ES2015 and is the new preferred default way to declare all variables if they won’t be reassigned later, even for objects that will be mutated (as long as the reference to the object does not change). It is block-scoped and cannot be reassigned.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> myObject = &#123;&#125;</span><br><span class="line">myObject.prop = <span class="string">"hello!"</span> <span class="comment">// No error</span></span><br><span class="line">myObject = <span class="string">"hello"</span> <span class="comment">// Error</span></span><br></pre></td></tr></table></figure><h4 id="Good-to-hear"><a href="#Good-to-hear" class="headerlink" title="Good to hear"></a>Good to hear</h4><ul><li>All declarations are hoisted to the top of their scope.</li><li>However, with <code>let</code> and <code>const</code> there is a concept called the temporal dead zone (TDZ). While the declarations are still hoisted, there is a period between entering scope and being declared where they cannot be accessed.</li><li>Show a common issue with using <code>var</code> and how <code>let</code> can solve it, as well as a solution that keeps <code>var</code>.</li><li><code>var</code> should be avoided whenever possible and prefer <code>const</code> as the default declaration statement for all variables unless they will be reassigned later, then use <code>let</code> if so.</li></ul><h5 id="Additional-links"><a href="#Additional-links" class="headerlink" title="Additional links"></a>Additional links</h5><ul><li><a href="https://wesbos.com/let-vs-const/" target="_blank" rel="noopener"><code>let</code> vs <code>const</code></a></li></ul><!-- tags: (javascript) --><!-- expertise: (1) -->]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> 基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>use strict in JavaScript</title>
      <link href="/2020/04/04/2020-4-4-use-strict/"/>
      <url>/2020/04/04/2020-4-4-use-strict/</url>
      
        <content type="html"><![CDATA[<h3 id="What-does-39-use-strict-39-do-and-what-are-some-of-the-key-benefits-to-using-it"><a href="#What-does-39-use-strict-39-do-and-what-are-some-of-the-key-benefits-to-using-it" class="headerlink" title="What does &#39;use strict&#39; do and what are some of the key benefits to using it?"></a>What does <code>&#39;use strict&#39;</code> do and what are some of the key benefits to using it?</h3><h4 id="Answer"><a href="#Answer" class="headerlink" title="Answer"></a>Answer</h4><p>Including <code>&#39;use strict&#39;</code> at the beginning of your JavaScript source file enables strict mode, which enforces more strict parsing and error handling of JavaScript code. It is considered a good practice and offers a lot of benefits, such as:</p><ul><li>Easier debugging due to eliminating silent errors.</li><li>Disallows variable redefinition.</li><li>Prevents accidental global variables.</li><li>Oftentimes provides increased performance over identical code that is not running in strict mode.</li><li>Simplifies <code>eval()</code> and <code>arguments</code>.</li><li>Helps make JavaScript more secure.</li></ul><h4 id="Good-to-hear"><a href="#Good-to-hear" class="headerlink" title="Good to hear"></a>Good to hear</h4><ul><li>Eliminates <code>this</code> coercion, throwing an error when <code>this</code> references a value of <code>null</code> or <code>undefined</code>.</li><li>Throws an error on invalid usage of <code>delete</code>.</li><li>Prohibits some syntax likely to be defined in future versions of ECMAScript</li></ul><h5 id="Additional-links"><a href="#Additional-links" class="headerlink" title="Additional links"></a>Additional links</h5><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode" target="_blank" rel="noopener">MDN docs for strict mode</a></li></ul><!-- tags: (javascript) --><!-- expertise: (2) -->]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> 基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The typeof typeof</title>
      <link href="/2020/04/03/2020-4-3-typeof-typeof/"/>
      <url>/2020/04/03/2020-4-3-typeof-typeof/</url>
      
        <content type="html"><![CDATA[<h3 id="What-does-the-following-code-evaluate-to"><a href="#What-does-the-following-code-evaluate-to" class="headerlink" title="What does the following code evaluate to?"></a>What does the following code evaluate to?</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typeof</span> <span class="keyword">typeof</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h4 id="Answer"><a href="#Answer" class="headerlink" title="Answer"></a>Answer</h4><p>It evaluates to <code>&quot;string&quot;</code>.</p><p><code>typeof 0</code> evaluates to the string <code>&quot;number&quot;</code> and therefore <code>typeof &quot;number&quot;</code> evaluates to <code>&quot;string&quot;</code>.</p><h4 id="Good-to-hear"><a href="#Good-to-hear" class="headerlink" title="Good to hear"></a>Good to hear</h4><h5 id="Additional-links"><a href="#Additional-links" class="headerlink" title="Additional links"></a>Additional links</h5><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof" target="_blank" rel="noopener">MDN docs for typeof</a></li></ul><!-- tags: (javascript) --><!-- expertise: (1) -->]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> 基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript data types</title>
      <link href="/2020/04/02/2020-4-2-types/"/>
      <url>/2020/04/02/2020-4-2-types/</url>
      
        <content type="html"><![CDATA[<h3 id="What-are-JavaScript-data-types"><a href="#What-are-JavaScript-data-types" class="headerlink" title="What are JavaScript data types?"></a>What are JavaScript data types?</h3><h4 id="Answer"><a href="#Answer" class="headerlink" title="Answer"></a>Answer</h4><p>The latest ECMAScript standard defines seven data types, six of them being primitive: <code>Boolean</code>, <code>Null</code>, <code>Undefined</code>, <code>Number</code>, <code>String</code>, <code>Symbol</code> and one non-primitive data type: <code>Object</code>.</p><h4 id="Good-to-hear"><a href="#Good-to-hear" class="headerlink" title="Good to hear"></a>Good to hear</h4><ul><li>Mention of newly added <code>Symbol</code> data type</li><li><code>Array</code>, <code>Date</code> and <code>function</code> are all of type <code>object</code></li><li>Functions in JavaScript are objects with the capability of being callable</li></ul><h5 id="Additional-links"><a href="#Additional-links" class="headerlink" title="Additional links"></a>Additional links</h5><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures" target="_blank" rel="noopener">MDN docs for data types and data structures</a></li><li><a href="https://www.digitalocean.com/community/tutorials/understanding-data-types-in-javascript" target="_blank" rel="noopener">Understanding Data Types in JavaScript</a></li></ul><!-- tags: (javascript) --><!-- expertise: (1) -->]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> 基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>this in JavaScript</title>
      <link href="/2020/04/01/2020-4-1-this/"/>
      <url>/2020/04/01/2020-4-1-this/</url>
      
        <content type="html"><![CDATA[<h3 id="What-is-the-this-keyword-and-how-does-it-work"><a href="#What-is-the-this-keyword-and-how-does-it-work" class="headerlink" title="What is the this keyword and how does it work?"></a>What is the <code>this</code> keyword and how does it work?</h3><h4 id="Answer"><a href="#Answer" class="headerlink" title="Answer"></a>Answer</h4><p>The <code>this</code> keyword is an object that represents the context of an executing function. Regular functions can have their <code>this</code> value changed with the methods <code>call()</code>, <code>apply()</code> and <code>bind()</code>. Arrow functions implicitly bind <code>this</code> so that it refers to the context of its lexical environment, regardless of whether or not its context is set explicitly with <code>call()</code>.</p><p>Here are some common examples of how <code>this</code> works:</p><h5 id="Object-literals"><a href="#Object-literals" class="headerlink" title="Object literals"></a>Object literals</h5><p><code>this</code> refers to the object itself inside regular functions if the object precedes the invocation of the function.</p><p>Properties set as <code>this</code> do not refer to the object.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myObject = &#123;</span><br><span class="line">  property: <span class="keyword">this</span>,</span><br><span class="line">  regularFunction: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span></span><br><span class="line">  &#125;,</span><br><span class="line">  arrowFunction: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span></span><br><span class="line">  &#125;,</span><br><span class="line">  iife: (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span></span><br><span class="line">  &#125;)()</span><br><span class="line">&#125;</span><br><span class="line">myObject.regularFunction() <span class="comment">// myObject</span></span><br><span class="line">myObject[<span class="string">"regularFunction"</span>]() <span class="comment">// my Object</span></span><br><span class="line"></span><br><span class="line">myObject.property <span class="comment">// NOT myObject; lexical `this`</span></span><br><span class="line">myObject.arrowFunction() <span class="comment">// NOT myObject; lexical `this`</span></span><br><span class="line">myObject.iife <span class="comment">// NOT myObject; lexical `this`</span></span><br><span class="line"><span class="keyword">const</span> regularFunction = myObject.regularFunction</span><br><span class="line">regularFunction() <span class="comment">// NOT myObject; lexical `this`</span></span><br></pre></td></tr></table></figure><h5 id="Event-listeners"><a href="#Event-listeners" class="headerlink" title="Event listeners"></a>Event listeners</h5><p><code>this</code> refers to the element listening to the event.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.body.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>) <span class="comment">// document.body</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="Constructors"><a href="#Constructors" class="headerlink" title="Constructors"></a>Constructors</h5><p><code>this</code> refers to the newly created object.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>() &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>) <span class="comment">// myExample</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> myExample = <span class="keyword">new</span> Example()</span><br></pre></td></tr></table></figure><h5 id="Manual"><a href="#Manual" class="headerlink" title="Manual"></a>Manual</h5><p>With <code>call()</code> and <code>apply()</code>, <code>this</code> refers to the object passed as the first argument.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myFunction = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span></span><br><span class="line">&#125;</span><br><span class="line">myFunction.call(&#123; <span class="attr">customThis</span>: <span class="literal">true</span> &#125;) <span class="comment">// &#123; customThis: true &#125;</span></span><br></pre></td></tr></table></figure><h5 id="Unwanted-this"><a href="#Unwanted-this" class="headerlink" title="Unwanted this"></a>Unwanted <code>this</code></h5><p>Because <code>this</code> can change depending on the scope, it can have unexpected values when using regular functions.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  arr: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">  doubleArr() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.arr.map(<span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// this is now this.arr</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.double(value)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  double() &#123;</span><br><span class="line">    <span class="keyword">return</span> value * <span class="number">2</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">obj.doubleArr() <span class="comment">// Uncaught TypeError: this.double is not a function</span></span><br></pre></td></tr></table></figure><h4 id="Good-to-hear"><a href="#Good-to-hear" class="headerlink" title="Good to hear"></a>Good to hear</h4><ul><li>In non-strict mode, global <code>this</code> is the global object (<code>window</code> in browsers), while in strict mode global <code>this</code> is <code>undefined</code>.</li><li><code>Function.prototype.call</code> and <code>Function.prototype.apply</code> set the <code>this</code> context of an executing function as the first argument, with <code>call</code> accepting a variadic number of arguments thereafter, and <code>apply</code> accepting an array as the second argument which are fed to the function in a variadic manner.</li><li><code>Function.prototype.bind</code> returns a new function that enforces the <code>this</code> context as the first argument which cannot be changed by other functions.</li><li>If a function requires its <code>this</code> context to be changed based on how it is called, you must use the <code>function</code> keyword. Use arrow functions when you want <code>this</code> to be the surrounding (lexical) context.</li></ul><h5 id="Additional-links"><a href="#Additional-links" class="headerlink" title="Additional links"></a>Additional links</h5><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this" target="_blank" rel="noopener"><code>this</code> on MDN</a></li></ul><!-- tags: (javascript) --><!-- expertise: (2) -->]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> 基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Compare two objects in JavaScript</title>
      <link href="/2020/03/31/2020-3-31-xss/"/>
      <url>/2020/03/31/2020-3-31-xss/</url>
      
        <content type="html"><![CDATA[<h3 id="What-is-a-cross-site-scripting-attack-XSS-and-how-do-you-prevent-it"><a href="#What-is-a-cross-site-scripting-attack-XSS-and-how-do-you-prevent-it" class="headerlink" title="What is a cross-site scripting attack (XSS) and how do you prevent it?"></a>What is a cross-site scripting attack (XSS) and how do you prevent it?</h3><h4 id="Answer"><a href="#Answer" class="headerlink" title="Answer"></a>Answer</h4><p>XSS refers to client-side code injection where the attacker injects malicious scripts into a legitimate website or web application. This is often achieved when the application does not validate user input and freely injects dynamic HTML content.</p><p>For example, a comment system will be at risk if it does not validate or escape user input. If the comment contains unescaped HTML, the comment can inject a <code>&lt;script&gt;</code> tag into the website that other users will execute against their knowledge.</p><ul><li>The malicious script has access to cookies which are often used to store session tokens. If an attacker can obtain a user’s session cookie, they can impersonate the user.</li><li>The script can arbitrarily manipulate the DOM of the page the script is executing in, allowing the attacker to insert pieces of content that appear to be a real part of the website.</li><li>The script can use AJAX to send HTTP requests with arbitrary content to arbitrary destinations.</li></ul><h4 id="Good-to-hear"><a href="#Good-to-hear" class="headerlink" title="Good to hear"></a>Good to hear</h4><ul><li>On the client, using <code>textContent</code> instead of <code>innerHTML</code> prevents the browser from running the string through the HTML parser which would execute scripts in it.</li><li>On the server, escaping HTML tags will prevent the browser from parsing the user input as actual HTML and therefore won’t execute the script.</li></ul><h5 id="Additional-links"><a href="#Additional-links" class="headerlink" title="Additional links"></a>Additional links</h5><!-- Whenever possible, link a more detailed explanation. --><ul><li><a href="https://www.acunetix.com/websitesecurity/cross-site-scripting/" target="_blank" rel="noopener">Cross-Site Scripting Attack (XSS)</a></li></ul><!-- tags: (security,javascript) --><!-- expertise: (1) -->]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> 基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Browser or Node?</title>
      <link href="/2020/03/30/2020-3-30-tool-functions%20-%20Copy/"/>
      <url>/2020/03/30/2020-3-30-tool-functions%20-%20Copy/</url>
      
        <content type="html"><![CDATA[<h2 id="isBrowser"><a href="#isBrowser" class="headerlink" title="isBrowser"></a>isBrowser</h2><p>Determines if the current runtime environment is a browser so that front-end modules can run on the server (Node) without throwing errors.</p><p>Use <code>Array.prototype.includes()</code> on the typeof values of both window and document (globals usually only available in a browser environment unless they were explicitly defined), which will return true if one of them is <code>undefined. typeof</code> allows globals to be checked for existence without throwing a <code>ReferenceError</code>. If both of them are not undefined, then the current environment is assumed to be a browser.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> isBrowser = <span class="function"><span class="params">()</span> =&gt;</span> ![<span class="keyword">typeof</span> <span class="built_in">window</span>, <span class="keyword">typeof</span> <span class="built_in">document</span>].includes(<span class="string">'undefined'</span>);</span><br><span class="line">isBrowser(); <span class="comment">// true (browser)</span></span><br><span class="line">isBrowser(); <span class="comment">// false (Node)</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Compare two objects in JavaScript</title>
      <link href="/2020/03/29/2020-3-29-compare-two-objects-in-js/"/>
      <url>/2020/03/29/2020-3-29-compare-two-objects-in-js/</url>
      
        <content type="html"><![CDATA[<h2 id="How-do-you-compare-two-objects-in-JavaScript"><a href="#How-do-you-compare-two-objects-in-JavaScript" class="headerlink" title="How do you compare two objects in JavaScript?"></a>How do you compare two objects in JavaScript?</h2><h3 id="Answer"><a href="#Answer" class="headerlink" title="Answer"></a>Answer</h3><p>Even though two different objects can have the same properties with equal values, they are not considered equal when compared using == or ===. This is because they are being compared by their reference (location in memory), unlike primitive values which are compared by value.</p><p>In order to test if two objects are equal in structure, a helper function is required. It will iterate through the own properties of each object to test if they have the same values, including nested objects. Optionally, the prototypes of the objects may also be tested for equivalence by passing true as the 3rd argument.</p><p>Note: this technique does not attempt to test equivalence of data structures other than plain objects, arrays, functions, dates and primitive values.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isDeepEqual</span>(<span class="params">obj1, obj2, testPrototypes = false</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (obj1 === obj2) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> obj1 === <span class="string">"function"</span> &amp;&amp; <span class="keyword">typeof</span> obj2 === <span class="string">"function"</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> obj1.toString() === obj2.toString()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (obj1 <span class="keyword">instanceof</span> <span class="built_in">Date</span> &amp;&amp; obj2 <span class="keyword">instanceof</span> <span class="built_in">Date</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> obj1.getTime() === obj2.getTime()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (</span><br><span class="line">    <span class="built_in">Object</span>.prototype.toString.call(obj1) !==</span><br><span class="line">      <span class="built_in">Object</span>.prototype.toString.call(obj2) ||</span><br><span class="line">    <span class="keyword">typeof</span> obj1 !== <span class="string">"object"</span></span><br><span class="line">  ) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> prototypesAreEqual = testPrototypes</span><br><span class="line">    ? isDeepEqual(</span><br><span class="line">        <span class="built_in">Object</span>.getPrototypeOf(obj1),</span><br><span class="line">        <span class="built_in">Object</span>.getPrototypeOf(obj2),</span><br><span class="line">        <span class="literal">true</span></span><br><span class="line">      )</span><br><span class="line">    : <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> obj1Props = <span class="built_in">Object</span>.getOwnPropertyNames(obj1)</span><br><span class="line">  <span class="keyword">const</span> obj2Props = <span class="built_in">Object</span>.getOwnPropertyNames(obj2)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    obj1Props.length === obj2Props.length &amp;&amp;</span><br><span class="line">    prototypesAreEqual &amp;&amp;</span><br><span class="line">    obj1Props.every(<span class="function"><span class="params">prop</span> =&gt;</span> isDeepEqual(obj1[prop], obj2[prop]))</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Good-to-hear"><a href="#Good-to-hear" class="headerlink" title="Good to hear"></a>Good to hear</h3><ul><li>Primitives like strings and numbers are compared by their value</li><li>Objects on the other hand are compared by their reference (location in memory)</li></ul><h3 id="Additional-links"><a href="#Additional-links" class="headerlink" title="Additional links"></a>Additional links</h3><ul><li><a href="http://adripofjavascript.com/blog/drips/object-equality-in-javascript.html" target="_blank" rel="noopener">Object Equality in JavaScript</a></li><li><a href="https://30secondsofcode.org/object#equals" target="_blank" rel="noopener">Deep comparison between two values</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> 基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tool functions</title>
      <link href="/2020/03/28/2020-3-28-tool-functions/"/>
      <url>/2020/03/28/2020-3-28-tool-functions/</url>
      
        <content type="html"><![CDATA[<h3 id="Smooth-scrolling"><a href="#Smooth-scrolling" class="headerlink" title="Smooth scrolling"></a>Smooth scrolling</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> smoothScroll = <span class="function"><span class="params">element</span> =&gt;</span></span><br><span class="line">    <span class="built_in">document</span>.querySelector(element).scrollIntoView(&#123;</span><br><span class="line">        behavior: <span class="string">'smooth'</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">smoothScroll(<span class="string">'#fooBar'</span>); <span class="comment">// scrolls smoothly to the element with the id fooBar</span></span><br><span class="line">smoothScroll(<span class="string">'.fooBar'</span>); <span class="comment">// scrolls smoothly to the first element with a class of fooBar</span></span><br></pre></td></tr></table></figure><h3 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createXHR</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> xhr;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        xhr = <span class="keyword">new</span> ActiveXObject(<span class="string">"Msxml2.XMLHTTP"</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            xhr = <span class="keyword">new</span> ActiveObject(<span class="string">"Microsoft.XMLHTTP"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">            xhr = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!xhr &amp;&amp; <span class="keyword">typeof</span> XMLHttpRequest != <span class="string">'undefined'</span>) &#123;</span><br><span class="line">        xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> xhr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajax_send</span>(<span class="params">val, callback</span>) </span>&#123;</span><br><span class="line">    xhr = createXHR();</span><br><span class="line">    <span class="keyword">if</span> (xhr) &#123;</span><br><span class="line">        xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span> &amp;&amp; xhr.status == <span class="number">200</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> returnValue = xhr.responseText;</span><br><span class="line">                <span class="keyword">if</span> (callback) &#123;</span><br><span class="line">                    callback(returnValue);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        xhr.open(<span class="string">"GET"</span>, val);</span><br><span class="line">        xhr.send(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetCookie</span>(<span class="params">c_name</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> c_start, c_end;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.cookie.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        c_start = <span class="built_in">document</span>.cookie.indexOf(c_name + <span class="string">"="</span>);</span><br><span class="line">        <span class="keyword">if</span> (c_start != <span class="number">-1</span>) &#123;</span><br><span class="line">            c_start = c_start + c_name.length + <span class="number">1</span>;</span><br><span class="line">            c_end = <span class="built_in">document</span>.cookie.indexOf(<span class="string">";"</span>, c_start);</span><br><span class="line">            <span class="keyword">if</span> (c_end == <span class="number">-1</span>) &#123;</span><br><span class="line">                c_end = <span class="built_in">document</span>.cookie.length;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">unescape</span>(<span class="built_in">document</span>.cookie.substring(c_start, c_end));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">SetCookie</span>(<span class="params">name, value, cookiePath</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> expire;</span><br><span class="line">    <span class="keyword">var</span> isIE = !-[<span class="number">1</span>, ]; <span class="comment">//判断是否是ie核心浏览器  </span></span><br><span class="line">    <span class="keyword">if</span> (isIE) &#123;</span><br><span class="line">        expire = <span class="string">"; expires=At the end of the Session"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        expire = <span class="string">"; expires=Session"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> path = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">if</span> (cookiePath != <span class="literal">null</span>) &#123;</span><br><span class="line">         path = <span class="string">"; path="</span> + cookiePath;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">document</span>.cookie = name + <span class="string">"="</span> + <span class="built_in">escape</span>(value) + expire + path;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Minwidth-Resize"><a href="#Minwidth-Resize" class="headerlink" title="Minwidth, Resize"></a>Minwidth, Resize</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetMinWidth</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.ceil((<span class="built_in">window</span>.screen.width - <span class="number">160</span>) * <span class="number">0.55</span>) - <span class="number">6</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Resize</span>(<span class="params">Obj</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> MinWidth = GetMinWidth();</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.document.body.offsetWidth &gt; MinWidth) &#123;</span><br><span class="line">        Obj.autoWidth.style.width = <span class="string">"100%"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Obj.autoWidth.style.width = MinWidth;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ini-to-JSON"><a href="#ini-to-JSON" class="headerlink" title="ini to JSON"></a>ini to JSON</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ini2json</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i;</span><br><span class="line">    <span class="keyword">var</span> len;</span><br><span class="line">    <span class="keyword">var</span> line;</span><br><span class="line">    <span class="keyword">var</span> regex = &#123;</span><br><span class="line">        section: <span class="regexp">/^\s*\[\s*([^\]]*)\s*\]\s*$/</span>,</span><br><span class="line">        param: <span class="regexp">/^\s*([\w\.\-\_]+)\s*=\s*(.*?)\s*$/</span>,</span><br><span class="line">        comment: <span class="regexp">/^\s*;.*$/</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">var</span> value = &#123;&#125;;</span><br><span class="line">    <span class="keyword">var</span> lines = data.split(<span class="regexp">/\r\n|\r|\n/</span>);</span><br><span class="line">    <span class="keyword">var</span> section = <span class="literal">null</span>;</span><br><span class="line">    len = lines.length;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        line = lines[i];</span><br><span class="line">        <span class="keyword">if</span> (regex.comment.test(line)) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (regex.param.test(line)) &#123;</span><br><span class="line">            <span class="keyword">var</span> match = line.match(regex.param);</span><br><span class="line">            <span class="keyword">if</span> (section) &#123;</span><br><span class="line">                value[section][match[<span class="number">1</span>]] = match[<span class="number">2</span>];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                value[match[<span class="number">1</span>]] = match[<span class="number">2</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (regex.section.test(line)) &#123;</span><br><span class="line">            <span class="keyword">var</span> match = line.match(regex.section);</span><br><span class="line">            value[match[<span class="number">1</span>]] = &#123;&#125;;</span><br><span class="line">            section = match[<span class="number">1</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (line.length == <span class="number">0</span> &amp;&amp; section) &#123;</span><br><span class="line">            section = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="RegExp"><a href="#RegExp" class="headerlink" title="RegExp"></a>RegExp</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_apha_number</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> reg = <span class="regexp">/^[0-9a-zA-Z]*$/g</span>;</span><br><span class="line">    <span class="keyword">return</span> reg.test(str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkip</span>(<span class="params">ip</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> reg = <span class="regexp">/^(\d&#123;1,2&#125;|1\d\d|2[0-4]\d|25[0-5])\.(\d&#123;1,2&#125;|1\d\d|2[0-4]\d|25[0-5])\.(\d&#123;1,2&#125;|1\d\d|2[0-4]\d|25[0-5])\.(\d&#123;1,2&#125;|1\d\d|2[0-4]\d|25[0-5])$/</span></span><br><span class="line">    <span class="keyword">return</span> reg.test(ip);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkport</span>(<span class="params">port</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (!<span class="built_in">isNaN</span>(port) &amp;&amp; port &gt; <span class="number">0</span> &amp;&amp; port &lt; <span class="number">65536</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS specificity</title>
      <link href="/2020/03/27/2020-3-27-css-specificity/"/>
      <url>/2020/03/27/2020-3-27-css-specificity/</url>
      
        <content type="html"><![CDATA[<h3 id="Can-you-describe-how-CSS-specificity-works"><a href="#Can-you-describe-how-CSS-specificity-works" class="headerlink" title="Can you describe how CSS specificity works?"></a>Can you describe how CSS specificity works?</h3><h4 id="Answer"><a href="#Answer" class="headerlink" title="Answer"></a>Answer</h4><p>Assuming the browser has already determined the set of rules for an element, each rule is assigned a matrix of values, which correspond to the following from highest to lowest specificity:</p><ul><li>Inline rules (binary - 1 or 0)</li><li>Number of id selectors</li><li>Number of class, pseudo-class and attribute selectors</li><li>Number of tags and pseudo-element selectors</li></ul><p>When two selectors are compared, the comparison is made on a per-column basis (e.g. an id selector will always be higher than any amount of class selectors, as ids have higher specificity than classes). In cases of equal specificity between multiple rules, the rules that comes last in the page’s style sheet is deemed more specific and therefore applied to the element.</p><h4 id="Good-to-hear"><a href="#Good-to-hear" class="headerlink" title="Good to hear"></a>Good to hear</h4><ul><li>Specificity matrix: [inline, id, class/pseudo-class/attribute, tag/pseudo-element]</li><li>In cases of equal specificity, last rule is applied</li></ul><h5 id="Additional-links"><a href="#Additional-links" class="headerlink" title="Additional links"></a>Additional links</h5><ul><li><a href="https://www.smashingmagazine.com/2007/07/css-specificity-things-you-should-know/" target="_blank" rel="noopener">CSS Specificity</a></li></ul><!-- tags: (css) --><!-- expertise: (2) -->]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS sibling selectors</title>
      <link href="/2020/03/26/2020-3-26-css-sibling-selectors/"/>
      <url>/2020/03/26/2020-3-26-css-sibling-selectors/</url>
      
        <content type="html"><![CDATA[<h3 id="What-is-the-difference-between-‘-’-and-‘-’-sibling-selectors"><a href="#What-is-the-difference-between-‘-’-and-‘-’-sibling-selectors" class="headerlink" title="What is the difference between ‘+’ and ‘~’ sibling selectors?."></a>What is the difference between ‘+’ and ‘~’ sibling selectors?.</h3><h4 id="Answer"><a href="#Answer" class="headerlink" title="Answer"></a>Answer</h4><p>The General Sibling Selector <code>~</code> selects all elements that are siblings of a specified element.</p><p>The following example selects all <code>&lt;p&gt;</code> elements that are siblings of <code>&lt;div&gt;</code> elements:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> ~ <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The Adjacent Sibling Selector <code>+</code> selects all elements that are the adjacent siblings of a specified element.</p><p>The following example will select all <code>&lt;p&gt;</code> elements that are placed immediately after <code>&lt;div&gt;</code> elements:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> + <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Good-to-hear"><a href="#Good-to-hear" class="headerlink" title="Good to hear"></a>Good to hear</h4><h5 id="Additional-links"><a href="#Additional-links" class="headerlink" title="Additional links"></a>Additional links</h5><ul><li><a href="https://www.w3schools.com/css/css_combinators.asp" target="_blank" rel="noopener">W3School’s CSS Combinators Page</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Combinators_and_multiple_selectors" target="_blank" rel="noopener">Mozilla’s Combinators and groups of selectors page</a></li></ul><!-- tags: (css) --><!-- expertise: (2) -->]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS preprocessors</title>
      <link href="/2020/03/25/2020-3-25-css-preprocessors/"/>
      <url>/2020/03/25/2020-3-25-css-preprocessors/</url>
      
        <content type="html"><![CDATA[<h3 id="What-are-the-advantages-of-using-CSS-preprocessors"><a href="#What-are-the-advantages-of-using-CSS-preprocessors" class="headerlink" title="What are the advantages of using CSS preprocessors?"></a>What are the advantages of using CSS preprocessors?</h3><h4 id="Answer"><a href="#Answer" class="headerlink" title="Answer"></a>Answer</h4><p>CSS preprocessors add useful functionality that native CSS does not have, and generally make CSS neater and more maintainable by enabling DRY (Don’t Repeat Yourself) principles. Their terse syntax for nested selectors cuts down on repeated code. They provide variables for consistent theming (however, CSS variables have largely replaced this functionality) and additional tools like color functions (<code>lighten</code>, <code>darken</code>, <code>transparentize</code>, etc), mixins, and loops that make CSS more like a real programming language and gives the developer more power to generate complex CSS.</p><h4 id="Good-to-hear"><a href="#Good-to-hear" class="headerlink" title="Good to hear"></a>Good to hear</h4><ul><li>They allow us to write more maintainable and scalable CSS</li><li>Some disadvantages of using CSS preprocessors (setup, re-compilation time can be slow etc.)</li></ul><h5 id="Additional-links"><a href="#Additional-links" class="headerlink" title="Additional links"></a>Additional links</h5><ul><li><a href="https://medium.com/@garyfagan/css-preprocessors-6f226fa16f27" target="_blank" rel="noopener">CSS Preprocessors</a></li></ul><!-- tags: (css) --><!-- expertise: (0) -->]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS Box Model</title>
      <link href="/2020/03/24/2020-3-24-css-box-model/"/>
      <url>/2020/03/24/2020-3-24-css-box-model/</url>
      
        <content type="html"><![CDATA[<h3 id="Describe-the-layout-of-the-CSS-Box-Model-and-briefly-describe-each-component"><a href="#Describe-the-layout-of-the-CSS-Box-Model-and-briefly-describe-each-component" class="headerlink" title="Describe the layout of the CSS Box Model and briefly describe each component."></a>Describe the layout of the CSS Box Model and briefly describe each component.</h3><h4 id="Answer"><a href="#Answer" class="headerlink" title="Answer"></a>Answer</h4><!-- Your answer goes here. --><p><code>Content</code>: The inner-most part of the box filled with content, such as text, an image, or video player. It has the dimensions <code>content-box width</code> and <code>content-box height</code>.</p><p><code>Padding</code>: The transparent area surrounding the content. It has dimensions <code>padding-box width</code> and <code>padding-box height</code>.</p><p><code>Border</code>: The area surrounding the padding (if any) and content. It has dimensions <code>border-box width</code> and <code>border-box height</code>.</p><p><em>Margin</em>: The transparent outer-most layer that surrounds the border. It separates the element from other elements in the DOM. It has dimensions <code>margin-box width</code> and <code>margin-box height</code>.</p><p><img src="https://www.washington.edu/accesscomputing/webd2/student/unit3/images/boxmodel.gif" alt="alt text"></p><h4 id="Good-to-hear"><a href="#Good-to-hear" class="headerlink" title="Good to hear"></a>Good to hear</h4><ul><li>This is a very common question asked during front-end interviews and while it may seem easy, it is critical you know it well!</li><li>Shows a solid understanding of spacing and the DOM</li></ul><h5 id="Additional-links"><a href="#Additional-links" class="headerlink" title="Additional links"></a>Additional links</h5><ul><li><a href="https://www.w3schools.com/Css/css_boxmodel.asp" target="_blank" rel="noopener">W3School’s CSS Box Model Page</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Introduction_to_the_CSS_box_model" target="_blank" rel="noopener">Mozilla’s Intro to the CSS Box Model</a></li></ul><!-- tags: (css) --><!-- expertise: (1) -->]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mastering The Developer Tools Console</title>
      <link href="/2020/03/23/2020-3-23-Mastering-The-Developer-Tools-Console/"/>
      <url>/2020/03/23/2020-3-23-Mastering-The-Developer-Tools-Console/</url>
      
        <content type="html"><![CDATA[<p>The developer tools console is one of the most powerful tools available to you when it comes to debugging your front-end web applications. The console has an API that provides a number of methods that make debugging easier. It’s not uncommon to see developers using <code>console.log()</code> or <code>console.dir()</code> to investigate problems; but the developer tools console has a lot more to offer.</p><p>In this blog post you’re going to learn how to debug your web applications using the methods provided by the <code>console</code> API. Some browsers support more functionality than others so I’ll be pointing out any compatibility issues as we go.</p><p>Lets get started!</p><h3 id="Using-the-Developer-Tools-Console"><a href="#Using-the-Developer-Tools-Console" class="headerlink" title="Using the Developer Tools Console"></a>Using the Developer Tools Console</h3><p>If you haven’t used the developer tools console before, don’t worry. In this section I’m going to show you how to access and use the console. If you’re already familiar this, feel free to skip to the next section.</p><p>There are a number of different ways that you can open your browser’s developer tools. The simplest is to just right-click somewhere on the page and then select ‘Inspect Element’ in the context-menu that appears.</p><p>You can also launch the developer tools using a keyboard shortcut. The shortcut for most browsers on Mac is <code>Alt</code> + <code>Command</code> + <code>I</code>, for Windows you can use <code>Ctrl</code> + <code>Shift</code> + <code>I</code>.</p><p><img src="https://3wga6448744j404mpt11pbx4-wpengine.netdna-ssl.com/wp-content/uploads/2014/01/dev-tools-console.png" alt="The developer tools console in Chrome."></p><p>The developer tools console in Chrome.</p><p>Once you have the developer tools open you can switch to the console by clicking the Console tab at the top of the window.</p><p><img src="https://3wga6448744j404mpt11pbx4-wpengine.netdna-ssl.com/wp-content/uploads/2014/01/dev-tools-icon.png" alt="The ‘Elements’ tab with a console pane at the bottom."></p><p>The ‘Elements’ tab with a console pane at the bottom.</p><p>In Chrome, you can also launch a console below any of the other tabs by clicking on the console icon in the top right of the developer tools window.</p><hr><p><strong>Note</strong>: In this article we will be using the default developer tools that ship with browsers. There are many great browser extensions that can provide similar tools. Firefox users may wish to install Firebug, as the Firebug console supports some methods that the default Firefox console does not.</p><hr><p>Now that you’ve got the console open, lets execute a simple statement.</p><p>Type the following into the console and press Enter:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">'Hello World!'</span>);</span><br></pre></td></tr></table></figure><p>You should see that the test <em>Hello World!</em> is printed in the console (as shown below).</p><p><img src="https://3wga6448744j404mpt11pbx4-wpengine.netdna-ssl.com/wp-content/uploads/2014/01/console-log-hello-world.png" alt="Using console.log() in the Chrome Dev Tools Console."></p><p>Using console.log() in the Chrome Dev Tools Console.</p><p>Great! Now that you’re up-to-speed with how to use the <code>console</code>, lets take a look at all the <code>console</code> methods that you can use to debug your applications.</p><h3 id="console-log-object-object-…"><a href="#console-log-object-object-…" class="headerlink" title="console.log(object [, object, …])"></a>console.log(object [, object, …])</h3><p>Lets start by looking at one of the most commonly used console methods, <code>console.log()</code>. This method simply outputs an object to the <code>console</code>.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">'Hello Treehouse'</span>);</span><br></pre></td></tr></table></figure><p>If you list multiple objects they will be concatenated into a single, space-delimited string, which is then output to the console.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">'This is a string'</span>, &#123; <span class="attr">foo</span>: <span class="string">'bar'</span> &#125;, &#123; <span class="attr">bar</span>: <span class="string">'foo'</span> &#125;);</span><br></pre></td></tr></table></figure><p><img src="https://3wga6448744j404mpt11pbx4-wpengine.netdna-ssl.com/wp-content/uploads/2014/01/console-log-multi-object.png" alt="Using console.log() with multiple objects."></p><p>Using console.log() with multiple objects.</p><p>The first parameter can contain format specifiers that allow you to define the format and positioning, of the subsequent objects.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> number = <span class="number">11</span> * <span class="number">9</span>;</span><br><span class="line"><span class="keyword">var</span> color = <span class="string">'red'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'%d %s balloons'</span>, number, color);</span><br></pre></td></tr></table></figure><p><img src="https://3wga6448744j404mpt11pbx4-wpengine.netdna-ssl.com/wp-content/uploads/2014/01/console-log-format-specifiers.png" alt="Using console.log() with format specifiers."></p><p>Using console.log() with format specifiers.</p><p>The following format specifiers are supported in the dev tools console.</p><table><thead><tr><th>FORMAT SPECIFIER</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td>%s</td><td>String</td></tr><tr><td>%d or %i</td><td>Interger</td></tr><tr><td>%f</td><td>Floating point value</td></tr><tr><td>%o</td><td>Expandable DOM element (as displayed in the ‘Elements’ tab of the dev tools)</td></tr><tr><td>%O</td><td>Expandable JavaScript object</td></tr><tr><td>%c</td><td>Formats the output using the CSS style you provide</td></tr></tbody></table><p>Using the <code>%c</code> format specifier allows you to style the console output.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">'%cThis text is styled!'</span>, <span class="string">'color: #86CC00; background-color: blue; font-size: 20px; padding: 3px;'</span>)</span><br></pre></td></tr></table></figure><p><img src="https://3wga6448744j404mpt11pbx4-wpengine.netdna-ssl.com/wp-content/uploads/2014/01/console-log-styled.png" alt="Using console.log() with styled output."></p><p>Using console.log() with styled output.</p><h3 id="console-assert-expression-object"><a href="#console-assert-expression-object" class="headerlink" title="console.assert(expression, object)"></a>console.assert(expression, object)</h3><p>The <em>console.assert()</em> method takes two parameters, a boolean expression, and an object. If the result of the expression is <code>false</code> the object will be printed in the console.</p><p>You will usually want to use a string object as the second parameter but the method will work with any valid JavaScript object.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> count = <span class="number">5</span>;</span><br><span class="line"><span class="built_in">console</span>.assert(count &gt; <span class="number">10</span>, <span class="string">'count is not larger than 10'</span>);</span><br></pre></td></tr></table></figure><p>The expression here checks to see if the count variable is larger than 10. If it’s not, the message ‘count is not larger than 10’ is printed in the console.</p><p><img src="https://3wga6448744j404mpt11pbx4-wpengine.netdna-ssl.com/wp-content/uploads/2014/01/console-assert.png" alt="Using console.assert()"></p><p>Using console.assert()</p><h3 id="console-clear"><a href="#console-clear" class="headerlink" title="console.clear()"></a>console.clear()</h3><p>The <code>console.clear()</code> method clears any output in the console window.</p><hr><p><strong>Note</strong>: This method is not supported by the default Firefox developer tools, but is supported in the Firebug console.</p><hr><h3 id="console-count-label"><a href="#console-count-label" class="headerlink" title="console.count(label)"></a>console.count(label)</h3><p>The <code>onsole.count()</code> method will output the number of times that the <code>count()</code> method has been called. You will only get an accurate count if this method is called at the same line, with the same label each time.</p><p>This method can be useful for finding out how many times a function is being called in your code.</p><hr><p><strong>ProTip!</strong> You can enter multi-line expressions in the console by using <em>Shift + Enter</em> to create a new line.</p><hr><p>You can test that this works by using a for loop in the console.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickHandler</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.count(<span class="string">'Click handler called'</span>);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">    clickHandler();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This code will call the clickHandler() method three times.</p><p><img src="https://3wga6448744j404mpt11pbx4-wpengine.netdna-ssl.com/wp-content/uploads/2014/01/console-count.png" alt="Using console.count() to count function calls."></p><p>Using console.count() to count function calls.</p><hr><p><strong>Note</strong>: This method is not supported by the default Firefox developer tools. Instead use the Firebug console.</p><hr><h3 id="console-dir-object"><a href="#console-dir-object" class="headerlink" title="console.dir(object)"></a>console.dir(object)</h3><p>The <code>console.dir()</code> method will print a JavaScript representation of the supplied object to the console. This method is especially useful for examining HTML elements, as it will display the DOM representation of the element rather than the XML representation displayed when using <code>console.log()</code>*.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.dir(<span class="built_in">document</span>.body);</span><br></pre></td></tr></table></figure><p><img src="https://3wga6448744j404mpt11pbx4-wpengine.netdna-ssl.com/wp-content/uploads/2014/01/console-dir.png" alt="Using console.dir() to examine an HTML element."></p><p>Using console.dir() to examine an HTML element.</p><h3 id="console-dirxml-object"><a href="#console-dirxml-object" class="headerlink" title="console.dirxml(object)"></a>console.dirxml(object)</h3><p>The <code>console.dirxml()</code> method prints the XML representation of on a object.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.dirxml(<span class="built_in">document</span>.body);</span><br></pre></td></tr></table></figure><p>When used with a HTML element, the output is equivalent to using <code>console.log()</code>.</p><p><img src="https://3wga6448744j404mpt11pbx4-wpengine.netdna-ssl.com/wp-content/uploads/2014/01/console-dirxml.png" alt="Using console.dirxml()"></p><p>Using console.dirxml()</p><hr><p><strong>Note</strong>: This method is not supported by the default Firefox developer tools. Instead use the Firebug console.</p><hr><h3 id="console-error-object-object-…"><a href="#console-error-object-object-…" class="headerlink" title="console.error(object [, object, …])"></a>console.error(object [, object, …])</h3><p>The <code>console.error()</code> method takes one or more objects and prints them to the console. This method is similar to <code>console.log()</code> however <code>console.error()</code> will also print a stack trace from where the method was called. The output will also be flagged as an error in the console.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.error(<span class="string">'Page not found (404)'</span>);</span><br></pre></td></tr></table></figure><p>This method is really useful when writing error handlers.</p><p><img src="https://3wga6448744j404mpt11pbx4-wpengine.netdna-ssl.com/wp-content/uploads/2014/01/console-error.png" alt="Logging console errors with console.error()"></p><p>Logging console errors with console.error()</p><h3 id="console-group-object-object-…-amp-console-groupEnd"><a href="#console-group-object-object-…-amp-console-groupEnd" class="headerlink" title="console.group(object[, object, …]) &amp; console.groupEnd()"></a>console.group(object[, object, …]) &amp; console.groupEnd()</h3><p>The <code>console.group()</code> method is used to group together a series of log messages. Once this method is called, any further log messages will be added to the group until <code>onsole.groupEnd()</code> is executed to close the group.</p><p>You can specify an optional title to make it easier to find the group in the console.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.group(<span class="string">'Fetching Data'</span>);</span><br></pre></td></tr></table></figure><p><img src="https://3wga6448744j404mpt11pbx4-wpengine.netdna-ssl.com/wp-content/uploads/2014/01/console-group.png" alt="Grouping console messages with console.group()"></p><p>Grouping console messages with console.group()</p><p>It is possible to nest multiple groups within one another.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.group(<span class="string">'Group One'</span>);</span><br><span class="line"><span class="built_in">console</span>.group(<span class="string">'Group Two'</span>);</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.groupEnd(); <span class="comment">// Close group two</span></span><br><span class="line"><span class="built_in">console</span>.groupEnd(); <span class="comment">// Close group one</span></span><br></pre></td></tr></table></figure><h3 id="console-groupCollapsed-object-object-…"><a href="#console-groupCollapsed-object-object-…" class="headerlink" title="console.groupCollapsed(object[, object, …])"></a>console.groupCollapsed(object[, object, …])</h3><p>The <code>console.groupCollapsed()</code> method is essentially the same as <code>console.group()</code> except that the group is initially displayed collapsed rather than open in the console.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.groupCollapsed(<span class="string">'Fetching Data'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'Request Sent'</span>);</span><br><span class="line"><span class="built_in">console</span>.error(<span class="string">'Error: Server not responding (500)'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.groupEnd();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'Continuing...'</span>);</span><br></pre></td></tr></table></figure><p><img src="https://3wga6448744j404mpt11pbx4-wpengine.netdna-ssl.com/wp-content/uploads/2014/01/console-group-collapsed.png" alt="Grouping log messages with console.groupCollapsed()"></p><p>Grouping log messages with console.groupCollapsed()</p><h3 id="console-info-object-object-…"><a href="#console-info-object-object-…" class="headerlink" title="console.info(object [, object, …])"></a>console.info(object [, object, …])</h3><p>The <code>console.info()</code> method functions in the same way as <code>console.log()</code> with the exception that log messages are given the info flag. This can be handy as the developer tools console has a feature that allows you to filter log messages using flags.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.info(<span class="string">'Hello Treehouse'</span>);</span><br></pre></td></tr></table></figure><p>Note the blue info icon to the left of the log message in the image below.</p><p><img src="https://3wga6448744j404mpt11pbx4-wpengine.netdna-ssl.com/wp-content/uploads/2014/01/console-info.png" alt="Logging info messages with console.info()"></p><p>Logging info messages with console.info()</p><h3 id="console-profile-profile-amp-console-profileEnd"><a href="#console-profile-profile-amp-console-profileEnd" class="headerlink" title="console.profile([profile]) &amp; console.profileEnd()"></a>console.profile([profile]) &amp; console.profileEnd()</h3><p>The <code>console.profile()</code> method will start a new JavaScript CPU profile if the developer tools are open. You have the option to specify a label for the profile if you wish.</p><p>The <code>console.profileEnd()</code> method will complete the profile.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animationUI</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.profile(<span class="string">'Animating'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Animate something...</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.profileEnd();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This example shows how you might use the <code>profile()</code> method to create a new CPU profile for the <code>animateUI()</code> function.</p><p><img src="https://3wga6448744j404mpt11pbx4-wpengine.netdna-ssl.com/wp-content/uploads/2014/01/console-profile.png" alt="Creating a JavaScript CPU Profile with console.profile()"></p><p>Creating a JavaScript CPU Profile with console.profile()</p><h3 id="console-table-data"><a href="#console-table-data" class="headerlink" title="console.table(data)"></a>console.table(data)</h3><p>The <code>console.table()</code> method allows you to output structured data as an interactive table in the console.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> data = [</span><br><span class="line">    &#123;<span class="attr">first_name</span>: <span class="string">'Matt'</span>, <span class="attr">last_name</span>: <span class="string">'West'</span>, <span class="attr">occupation</span>: <span class="string">'Programmer'</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">first_name</span>: <span class="string">'Vince'</span>, <span class="attr">last_name</span>: <span class="string">'Vaughn'</span>, <span class="attr">occupation</span>: <span class="string">'Actor'</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">first_name</span>: <span class="string">'Larry'</span>, <span class="attr">last_name</span>: <span class="string">'Page'</span>, <span class="attr">occupation</span>: <span class="string">'CEO'</span>&#125;  </span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.table(data);</span><br></pre></td></tr></table></figure><p><img src="https://3wga6448744j404mpt11pbx4-wpengine.netdna-ssl.com/wp-content/uploads/2014/01/console-table.png" alt="Creating interactive tables with console.table()"></p><p>Creating interactive tables with console.table()</p><p>This method can be really handy for examining data returned by an AJAX call.</p><hr><p><strong>Note</strong>: This method is not supported by the default Firefox developer tools. Instead use the Firebug console.</p><hr><h3 id="console-time-label-amp-console-timeEnd-label"><a href="#console-time-label-amp-console-timeEnd-label" class="headerlink" title="console.time(label) &amp; console.timeEnd(label)"></a>console.time(label) &amp; console.timeEnd(label)</h3><p>The <code>console.time()</code> and <code>console.timeEnd()</code> methods give you a way of timing how long it takes for a piece of code to execute. Both the <code>time()</code> and <code>timeEnd()</code> methods should be passed the same label parameter.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.time(<span class="string">'Draw frame'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Execute some code...</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.timeEnd(<span class="string">'Draw frame'</span>);</span><br></pre></td></tr></table></figure><p><img src="https://3wga6448744j404mpt11pbx4-wpengine.netdna-ssl.com/wp-content/uploads/2014/01/console-time.png" alt="Timing code execution with console.time()"></p><p>Timing code execution with console.time()</p><h3 id="console-timeline-label-amp-console-timelineEnd-label"><a href="#console-timeline-label-amp-console-timelineEnd-label" class="headerlink" title="console.timeline(label) &amp; console.timelineEnd(label)"></a>console.timeline(label) &amp; console.timelineEnd(label)</h3><p>The <code>console.timeline()</code> and <code>console.timelineEnd()</code> methods allow you to make a new timeline recording in the Chrome developer tools.</p><p>You have the option to specify a label for the new timeline. As with <code>console.time()</code>, this label must be the same in the calls to <code>console.timeline()</code> and <code>console.timelineEnd()</code>.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.timeline(<span class="string">'Google Search'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Do some work.</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.timelineEnd(<span class="string">'Google Search'</span>);</span><br></pre></td></tr></table></figure><p><img src="https://3wga6448744j404mpt11pbx4-wpengine.netdna-ssl.com/wp-content/uploads/2014/01/console-timeline.png" alt="Creating timelines in Chrome with console.timeline()"></p><p>Creating timelines in Chrome with console.timeline()</p><hr><p><strong>Note</strong>: The timeline methods are only available in the Chrome developer tools.</p><hr><h3 id="console-timeStamp-label"><a href="#console-timeStamp-label" class="headerlink" title="console.timeStamp(label)"></a>console.timeStamp(label)</h3><p>You can manually add events to the timeline using the <code>console.timeStamp()</code> method. This method can be passed a label to help you identify the marker in the developer tools.</p><p><img src="https://3wga6448744j404mpt11pbx4-wpengine.netdna-ssl.com/wp-content/uploads/2014/01/console-timestamp.png" alt="Creating timeline markers with console.timeStamp()"></p><p>Creating timeline markers with console.timeStamp()</p><hr><p><strong>Note</strong>: This method is only supported in Chrome. It was previously called <code>console.markTimeline()</code>.</p><hr><h3 id="console-trace"><a href="#console-trace" class="headerlink" title="console.trace()"></a>console.trace()</h3><p>The <code>console.trace()</code> method will print a stack trace for the point at which the method was called.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.trace();</span><br></pre></td></tr></table></figure><p><img src="https://3wga6448744j404mpt11pbx4-wpengine.netdna-ssl.com/wp-content/uploads/2014/01/console-trace.png" alt="Using console.trace() to print a stack trace."></p><p>Using console.trace() to print a stack trace.</p><h3 id="console-warn-object-object-…"><a href="#console-warn-object-object-…" class="headerlink" title="console.warn(object [, object, …])"></a>console.warn(object [, object, …])</h3><p>Finally, the <code>console.warn()</code> method will log a message to the console with a warning flag.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.warn(‘This is a warning.’);</span><br></pre></td></tr></table></figure><p><img src="https://3wga6448744j404mpt11pbx4-wpengine.netdna-ssl.com/wp-content/uploads/2014/01/console-warn.png" alt="Logging warning messages with console.warn()"></p><p>Logging warning messages with console.warn()</p><h3 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h3><p>In this post you’ve learned about the various <code>console</code> methods that you can use to debug your web applications. You’ll find that you use some of these methods more than others, but it’s certainly useful to understand what can be achieved through the developer tools console.</p><p>I recommend that you check out some of the links in the <em>Further Reading</em> section below, especially <a href="https://developers.google.com/chrome-developer-tools/docs/tips-and-tricks" target="_blank" rel="noopener">dev tools tips and tricks</a> from the <strong>Google Developers</strong> website.</p><p>What tools do you like to use when debugging your front-end web applications? Share your favorites in the comments below.</p><h3 id="Further-Reading"><a href="#Further-Reading" class="headerlink" title="Further Reading"></a>Further Reading</h3><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/console" target="_blank" rel="noopener">MDN: Console Documentation</a></li><li><a href="https://developers.google.com/chrome-developer-tools/docs/console-api" target="_blank" rel="noopener">Google Developers: Console API Reference</a></li><li><a href="https://developers.google.com/chrome-developer-tools/docs/tips-and-tricks" target="_blank" rel="noopener">Google Developers: Dev Tools Tips and Tricks</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> Chrome </category>
          
          <category> Debug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Chrome </tag>
            
            <tag> Debug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Returns a function that always returns the given value.</title>
      <link href="/2020/03/23/2020-3-23-always/"/>
      <url>/2020/03/23/2020-3-23-always/</url>
      
        <content type="html"><![CDATA[<h3 id="always"><a href="#always" class="headerlink" title="always"></a>always</h3><blockquote><p>a → (* → a)</p></blockquote><p>Returns a function that always returns the given value. Note that for non-primitives the value returned is a reference to the original value.</p><p>This function is known as const, constant, or <code>K (for K combinator)</code> in other languages and libraries.</p><p><code>Example</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> t = R.always(<span class="string">'Tee'</span>);</span><br><span class="line"></span><br><span class="line">t(); <span class="comment">//=&gt; 'Tee'</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> Ramda </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Ramda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Returns true for a given list of arguments if every one of the provided predicates is satisfied by those arguments</title>
      <link href="/2020/03/22/2020-3-22-allPass/"/>
      <url>/2020/03/22/2020-3-22-allPass/</url>
      
        <content type="html"><![CDATA[<h3 id="allPass"><a href="#allPass" class="headerlink" title="allPass"></a>allPass</h3><blockquote><p>[(<em>… → Boolean)] → (</em>… → Boolean)</p></blockquote><p>Takes a list of predicates and returns a predicate that returns true for a given list of arguments if every one of the provided predicates is satisfied by those arguments.</p><p>The function returned is a curried function whose arity matches that of the highest-arity predicate.</p><p><code>Example</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> isQueen = R.propEq(<span class="string">'rank'</span>, <span class="string">'Q'</span>);</span><br><span class="line"><span class="keyword">const</span> isSpade = R.propEq(<span class="string">'suit'</span>, <span class="string">'♠︎'</span>);</span><br><span class="line"><span class="keyword">const</span> isQueenOfSpades = R.allPass([isQueen, isSpade]);</span><br><span class="line"></span><br><span class="line">isQueenOfSpades(&#123;<span class="attr">rank</span>: <span class="string">'Q'</span>, <span class="attr">suit</span>: <span class="string">'♣︎'</span>&#125;); <span class="comment">//=&gt; false</span></span><br><span class="line">isQueenOfSpades(&#123;<span class="attr">rank</span>: <span class="string">'Q'</span>, <span class="attr">suit</span>: <span class="string">'♠︎'</span>&#125;); <span class="comment">//=&gt; true</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> Ramda </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Ramda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Returns true if all elements of the list match the predicate, false if there are any that don&#39;t</title>
      <link href="/2020/03/21/2020-3-21-all/"/>
      <url>/2020/03/21/2020-3-21-all/</url>
      
        <content type="html"><![CDATA[<h3 id="all"><a href="#all" class="headerlink" title="all"></a>all</h3><blockquote><p>(a → Boolean) → [a] → Boolean</p></blockquote><p>Returns <code>true</code> if all elements of the list match the predicate, <code>false</code> if there are any that don’t.</p><p>Dispatches to the all method of the second argument, if present.</p><p>Acts as a transducer if a transformer is given in list position.</p><p><code>Example</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> equals3 = R.equals(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">R.all(equals3)([<span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>]); <span class="comment">//=&gt; true</span></span><br><span class="line">R.all(equals3)([<span class="number">3</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">3</span>]); <span class="comment">//=&gt; false</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> Ramda </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Ramda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Adjust the value at the given index of an array</title>
      <link href="/2020/03/20/2020-3-20-adjust/"/>
      <url>/2020/03/20/2020-3-20-adjust/</url>
      
        <content type="html"><![CDATA[<h3 id="adjust"><a href="#adjust" class="headerlink" title="adjust"></a>adjust</h3><blockquote><p>Number → (a → a) → [a] → [a]</p></blockquote><p>Applies a function to the value at the given index of an array, returning a new copy of the array with the element at the given index replaced with the result of the function application.</p><p><code>Example</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">R.adjust(<span class="number">1</span>, R.toUpper, [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>]);   <span class="comment">//=&gt; ['a', 'B', 'c', 'd']</span></span><br><span class="line">R.adjust(<span class="number">-1</span>, R.toUpper, [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>]);  <span class="comment">//=&gt; ['a', 'b', 'c', 'D']</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> Ramda </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Ramda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Creates a new list iteration function from an existing one by adding two new parameters to its callback function</title>
      <link href="/2020/03/19/2020-3-19-add-Index/"/>
      <url>/2020/03/19/2020-3-19-add-Index/</url>
      
        <content type="html"><![CDATA[<h3 id="addIndex"><a href="#addIndex" class="headerlink" title="addIndex"></a>addIndex</h3><blockquote><p>((a … → b) … → [a] -→ *) → ((a …, Int, [a] → b) … → [a] → *)</p></blockquote><p>Creates a new list iteration function from an existing one by adding two new parameters to its callback function: the current index, and the entire list.</p><p>This would turn, for instance, <code>R.map</code> function into one that more closely resembles <code>Array.prototype.map</code>. Note that this will only work for functions in which the iteration callback function is the first parameter, and where the list is the last parameter. (This latter might be unimportant if the list parameter is not used.)</p><p><code>Example</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mapIndexed = R.addIndex(R.map);</span><br><span class="line"></span><br><span class="line">mapIndexed(<span class="function">(<span class="params">val, idx</span>) =&gt;</span> idx + <span class="string">'-'</span> + val, [<span class="string">'f'</span>, <span class="string">'o'</span>, <span class="string">'o'</span>, <span class="string">'b'</span>, <span class="string">'a'</span>, <span class="string">'r'</span>]);</span><br><span class="line"><span class="comment">//=&gt; ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> Ramda </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Ramda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Adds two values</title>
      <link href="/2020/03/18/2020-3-18-add/"/>
      <url>/2020/03/18/2020-3-18-add/</url>
      
        <content type="html"><![CDATA[<h3 id="add"><a href="#add" class="headerlink" title="add"></a>add</h3><blockquote><p>Number -&gt; Number -&gt; Number</p></blockquote><p>Adds two values.</p><p><code>Example</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">R.add(<span class="number">2</span>, <span class="number">3</span>);  <span class="comment">//=&gt;  5</span></span><br><span class="line">R.add(<span class="number">7</span>)(<span class="number">10</span>); <span class="comment">//=&gt; 17</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> Ramda </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Ramda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>混合对象-类</title>
      <link href="/2020/03/17/2020-3-17-mixin-class-in-js/"/>
      <url>/2020/03/17/2020-3-17-mixin-class-in-js/</url>
      
        <content type="html"><![CDATA[<h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><ul><li>类是一种设计模式, JavaScript 中可以用一些方法实现类的功能</li><li>类意味着复制</li><li>传统的类被实例化时, 它的行为会被复制到实例中.</li><li>类被继承时, 行为也会被复制到子类中</li><li>多态看起来似乎是从子类引用父类, 但本质上引用的其实是复制的结果</li><li>JavaScript 的对象机制不会自动执行复制行为, 即 JavaScript 中只有对象, 不存在可以被实例化的”类”, 一个对象不会被复制到其他对象, 它们会被关联起来</li><li>混入(mixin): 模拟类的复制行为, 但会让代码难以读懂且难以维护</li></ul><h3 id="显式混入"><a href="#显式混入" class="headerlink" title="显式混入"></a>显式混入</h3><ul><li>伪多态会导致代码更复杂, 难以阅读且难以维护, 应尽量避免使用显式伪多态</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mixin</span>(<span class="params">sourceObj, targetObj</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> sourceObj) &#123;</span><br><span class="line">    <span class="comment">//不存在则复制</span></span><br><span class="line">    <span class="keyword">if</span> (!(key <span class="keyword">in</span> targetObj)) &#123;</span><br><span class="line">      targetObj[key] = sourceObj[key];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> targetObj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Vehicle = &#123;</span><br><span class="line">  engines: <span class="number">1</span>,</span><br><span class="line">  ignition: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Start engine."</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  drive: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.ignition();</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Go go go!"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Car = mixin(Vehicle, &#123;</span><br><span class="line">  wheels: <span class="number">4</span>,</span><br><span class="line">  drive: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    Vehicle.drive.call(<span class="keyword">this</span>); <span class="comment">//显式多态, call(this)确保this绑定至Car而不是Vehicle</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Rolling on all"</span> + <span class="keyword">this</span>.wheels + <span class="string">" wheels!"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>寄生继承</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//传统的JavaScript类Vehicle</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Vehicle</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.engines = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">Vehicle.prototype.ignition = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"Start engine"</span>);</span><br><span class="line">&#125;;</span><br><span class="line">Vehicle.prototype.drive = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.ignition();</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"Go go go!"</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//寄生类</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Car</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> car = <span class="keyword">new</span> Vehicle();</span><br><span class="line">  car.wheels = <span class="number">4</span>;</span><br><span class="line">  <span class="keyword">var</span> vehDrive = car.drive();</span><br><span class="line">  car.drive = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    vehDrive.call(<span class="keyword">this</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Rolling on all"</span> + <span class="keyword">this</span>.wheels + <span class="string">" wheels!"</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> car;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myCar = <span class="keyword">new</span> Car();</span><br><span class="line">myCar.drive();</span><br><span class="line"><span class="comment">//"Start engine"</span></span><br><span class="line"><span class="comment">//"Go go go!"</span></span><br><span class="line"><span class="comment">//"Rolling on all 4 wheels!"</span></span><br></pre></td></tr></table></figure><h3 id="隐式混入"><a href="#隐式混入" class="headerlink" title="隐式混入"></a>隐式混入</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Something = &#123;</span><br><span class="line">  cool: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.greeting = <span class="string">"Hello"</span>;</span><br><span class="line">    <span class="keyword">this</span>.count = <span class="keyword">this</span>.count ? <span class="keyword">this</span>.count + <span class="number">1</span> : <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Something.cool();</span><br><span class="line">Something.greeting; <span class="comment">//"Hello"</span></span><br><span class="line">Something.count; <span class="comment">//1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Another = &#123;</span><br><span class="line">  cool: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    Something.cool.call(<span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Another.cool();</span><br><span class="line">Another.greeting; <span class="comment">//"Hello"</span></span><br><span class="line">Another.count; <span class="comment">//1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//利用了this的重绑定功能, 应尽量避免使用这样的结构, 以保持代码的整洁和可维护性</span></span><br></pre></td></tr></table></figure><ul><li>总之, 在 JavaScript 中模拟类是得不偿失的</li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> 基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Object in JavaScript</title>
      <link href="/2020/03/17/2020-3-17-object/"/>
      <url>/2020/03/17/2020-3-17-object/</url>
      
        <content type="html"><![CDATA[<h2 id="对象两种形式"><a href="#对象两种形式" class="headerlink" title="对象两种形式:"></a>对象两种形式:</h2><ul><li>声明(文字)形式</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myObj = &#123;</span><br><span class="line">    key: value,</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>构造形式</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myObj = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">myObj.key = value;</span><br></pre></td></tr></table></figure><h2 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h2><h3 id="JavaScript基础类型"><a href="#JavaScript基础类型" class="headerlink" title="JavaScript基础类型"></a>JavaScript基础类型</h3><ol><li><code>string</code></li><li><code>number</code></li><li><code>boolean</code></li><li><code>null</code></li><li><code>undefined</code></li><li><code>object</code></li></ol><blockquote><p>简单基本类型<code>(string, number, boolean, null, undefined)</code>本身并不是对象, 但是<code>typeof null</code>会返回<code>object</code>, 这是语言本身的一个错误</p></blockquote><h3 id="内置对象-JavaScript中对象子类型"><a href="#内置对象-JavaScript中对象子类型" class="headerlink" title="内置对象(JavaScript中对象子类型)"></a>内置对象(JavaScript中对象子类型)</h3><ol><li><code>String</code></li><li><code>Number</code></li><li><code>Boolean</code></li><li><code>Object</code></li><li><code>Function</code></li><li><code>Array</code></li><li><code>Date</code></li><li><code>RegExp</code></li><li><code>Error</code></li></ol><blockquote><p>它们实际上只是一些内置函数, 这些内置函数可以作为构造函数使用</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">"I am a string"</span>;</span><br><span class="line"><span class="keyword">typeof</span> str; <span class="comment">//"string";</span></span><br><span class="line">string <span class="keyword">instanceof</span> <span class="built_in">String</span>; <span class="comment">//false</span></span><br><span class="line"><span class="comment">//str原始值"I am a string"不是一个对象,只是一个字面量,而且不可变</span></span><br><span class="line"><span class="comment">//如果要对其操作,如获取长度,访问其中某个字符等,需要将其转换为String对象</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> strObject = <span class="keyword">new</span> <span class="built_in">String</span>(<span class="string">"I am a string"</span>);</span><br><span class="line"><span class="keyword">typeof</span> strObject; <span class="comment">//"object"</span></span><br><span class="line">strOject <span class="keyword">instanceof</span> <span class="built_in">String</span>; <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.prototype.toString.call(strObject); <span class="comment">//[object object]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(str.length); <span class="comment">//13</span></span><br><span class="line"><span class="built_in">console</span>.log(str.charAt(<span class="number">3</span>)); <span class="comment">//"m"</span></span><br><span class="line"><span class="comment">//操作时, JavaScript引擎会自动把string字面量转换为String对象</span></span><br><span class="line"><span class="comment">//同理, 使用42.359.toFixed(2)方法时,</span></span><br><span class="line"><span class="comment">//引擎会把42转换为new Number(42)</span></span><br></pre></td></tr></table></figure><ul><li><code>null</code>和<code>undefined</code>没有构造形式, 只有文字形式</li><li><code>Date</code>只有构造形式, 没有文字形式</li><li><code>Object</code>, <code>Array</code>, <code>Function</code>, <code>RegExp</code> 无论使用文字还是构造形式, 它们都是对象, 不是字面量</li><li><code>Error</code>很少在代码中显示创建, 一般是抛出异常时自动创建, 也可以使用<code>new Error(...)</code>创建</li></ul><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><blockquote><p>对象的内容是由一些存储在特定命名位置的值组成, 即属性. 属性的名称就像指针, 指向这些值真正的储存位置</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myObject = &#123;</span><br><span class="line">    a:<span class="number">2</span></span><br><span class="line">&#125;;</span><br><span class="line">myObject.a; <span class="comment">//2</span></span><br><span class="line"><span class="comment">//"属性访问": 属性名需满足命名规范</span></span><br><span class="line"></span><br><span class="line">myObject[<span class="string">"a"</span>]; <span class="comment">//2</span></span><br><span class="line"><span class="comment">//"键访问": 支持任意UTF-8/Unicode字符串</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果要引用名为"Super-Fun!"的属性, 就必须使用["Super-Fun!"]访问</span></span><br></pre></td></tr></table></figure><ul><li>对象中, 属性名永远都是字符串</li><li>如果使用<code>string</code>以外的其他值作为属性名, 它也会首先被转换为字符串</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myObject = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">myObject[<span class="literal">true</span>] = <span class="string">"foo"</span>;</span><br><span class="line">myObject[<span class="number">3</span>] = <span class="string">"bar"</span>;</span><br><span class="line">myObject[myObject] = <span class="string">"baz"</span>;</span><br><span class="line"></span><br><span class="line">myObject[<span class="string">"true"</span>]; <span class="comment">//"foo"</span></span><br><span class="line">myObject[<span class="string">"3"</span>]; <span class="comment">//"bar"</span></span><br><span class="line">myObject[<span class="string">"[object object]"</span>]; <span class="comment">//"baz"</span></span><br></pre></td></tr></table></figure><h3 id="可计算属性名"><a href="#可计算属性名" class="headerlink" title="可计算属性名"></a>可计算属性名</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> prefix = <span class="string">"foo"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myObject = &#123;</span><br><span class="line">    [prefix + <span class="string">"bar"</span>]: <span class="string">"hello"</span>,</span><br><span class="line">    [prefix + <span class="string">"baz"</span>]: <span class="string">"world"</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">myObject[<span class="string">"foobar"</span>]; <span class="comment">//hello</span></span><br><span class="line">myObject[<span class="string">"foobaz"</span>]; <span class="comment">//world</span></span><br></pre></td></tr></table></figure><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><blockquote><p>数组也是对象, 可以给数组添加属性</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myArray = [<span class="string">"foo"</span>, <span class="number">42</span>, <span class="string">"bar"</span>];</span><br><span class="line"></span><br><span class="line">myArray.baz = <span class="string">"baz"</span>;</span><br><span class="line">myArray.length; <span class="comment">//3</span></span><br><span class="line">myArray.baz; <span class="comment">//"baz"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//虽然给数组添加了命名属性, 但是数组的length没变化</span></span><br><span class="line"></span><br><span class="line">myArray[<span class="string">"3"</span>] = <span class="string">"bazz"</span>;</span><br><span class="line">myArray.length; <span class="comment">//4</span></span><br><span class="line">myArray[<span class="number">3</span>]; <span class="comment">//"bazz"</span></span><br><span class="line"><span class="comment">//如果添加的属性名"看起来"像一个数字, 那么它就会变成一个数值下标</span></span><br></pre></td></tr></table></figure><h3 id="复制对象"><a href="#复制对象" class="headerlink" title="复制对象"></a>复制对象</h3><blockquote><p>对于JSON安全的对象来说, 可以用如下方法复制对象:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> newObj = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(someObj));</span><br></pre></td></tr></table></figure><blockquote><p>浅复制对象</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myObject = &#123;</span><br><span class="line">    a:<span class="number">2</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> newObj = <span class="built_in">Object</span>.assign(&#123;&#125;, myObject);</span><br><span class="line"><span class="comment">//第一个参数是目标对象, 之后为一个或多个源对象</span></span><br><span class="line"></span><br><span class="line">newObj.a; <span class="comment">//2</span></span><br></pre></td></tr></table></figure><h3 id="属性描述符"><a href="#属性描述符" class="headerlink" title="属性描述符"></a>属性描述符</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myObject = &#123;</span><br><span class="line">    a:<span class="number">2</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.getOwnPropertyDescriptor(myObject, <span class="string">"a"</span>);  <span class="comment">//查看属性描述符</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        value: 2,            //属性的值</span></span><br><span class="line"><span class="comment">        writable: true,      //是否可修改属性的值</span></span><br><span class="line"><span class="comment">        configurable: true,  //属性是否可配置, 将其设置为false是单向操作,无法撤销</span></span><br><span class="line"><span class="comment">                             //configurable: false还会禁止删除此属性</span></span><br><span class="line"><span class="comment">                             //delete只是删除对象的属性操作, 不会释放内存</span></span><br><span class="line"><span class="comment">        enumerable: true     //控制属性是否会出现在对象的属性枚举中, 如 for..in</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//配置指定属性的描述符</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(myObject, <span class="string">"a"</span>, &#123;</span><br><span class="line">    value: <span class="number">2</span>,</span><br><span class="line">    writable: <span class="literal">false</span>,</span><br><span class="line">    configurable: <span class="literal">true</span>,</span><br><span class="line">    enumerable: <span class="literal">true</span> </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="不变性-不可变级别由低到高"><a href="#不变性-不可变级别由低到高" class="headerlink" title="不变性(不可变级别由低到高)"></a>不变性(不可变级别由低到高)</h3><ol><li>对象常量(不可修改, 重定义或删除)</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">writable</span>: <span class="literal">false</span>, <span class="attr">configurable</span>: <span class="literal">false</span>&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>禁止扩展(禁止添加新属性, 且保留已有属性)</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.preventExtensions(myObject);</span><br></pre></td></tr></table></figure><ol start="3"><li>密封(禁止添加新属性, 也不可重定义或删除)</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.seal(myObject);</span><br><span class="line"><span class="comment">//preventExtensions(...) + configurable: false</span></span><br></pre></td></tr></table></figure><ol start="4"><li>冻结(禁止添加新属性, 也不可修改, 重定义或删除)</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.freeze(myObject);</span><br><span class="line"><span class="comment">//preventExtensions(...) + writable: false + configurable: false</span></span><br></pre></td></tr></table></figure><h3 id="Getter-Setter"><a href="#Getter-Setter" class="headerlink" title="Getter, Setter"></a>Getter, Setter</h3><blockquote><p>给属性定义getter, setter时, JavaScript会忽略它们的value和writable特性, 只关心get, set, configurable和enumerable</p></blockquote><blockquote><p>getter和setter通常是成对出现的</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myObj = &#123;</span><br><span class="line">    <span class="keyword">get</span> a() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>._a_;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">set</span> a(val) &#123;</span><br><span class="line">        <span class="keyword">this</span>._a_ = val*<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">myObj.a = <span class="number">2</span>;</span><br><span class="line">myObj.a; <span class="comment">//4</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(myObj, <span class="string">"b"</span>, &#123;</span><br><span class="line">   <span class="keyword">get</span>: function() &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">this</span>._a_ * <span class="number">3</span>;</span><br><span class="line">   &#125;,</span><br><span class="line">   enumerable: <span class="literal">true</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">myObj.b; <span class="comment">//12</span></span><br></pre></td></tr></table></figure><h3 id="存在性"><a href="#存在性" class="headerlink" title="存在性"></a>存在性</h3><ul><li>判断属性是否存在:</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myObj = &#123;</span><br><span class="line">    a:<span class="number">2</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">(<span class="string">"a"</span> <span class="keyword">in</span> myObj); <span class="comment">//true</span></span><br><span class="line">(<span class="string">"b"</span> <span class="keyword">in</span> myObj); <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">myObject.hasOwnProperty(<span class="string">"a"</span>); <span class="comment">//true</span></span><br><span class="line">myObject.hasOwnProperty(<span class="string">"b"</span>); <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.prototype.hasOwnProperty.call(myObj, <span class="string">"a"</span>); <span class="comment">//true</span></span><br></pre></td></tr></table></figure><ul><li>枚举</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myObj = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(myObj, <span class="string">"a"</span>, &#123;</span><br><span class="line">    enumerable: <span class="literal">true</span>,</span><br><span class="line">    value: <span class="number">2</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(myObj, <span class="string">"b"</span>, &#123;</span><br><span class="line">    enumerable: <span class="literal">false</span>,</span><br><span class="line">    value: <span class="number">4</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//属性是否可枚举</span></span><br><span class="line">myObj.propertyIsEnumerable(<span class="string">"a"</span>); <span class="comment">//true</span></span><br><span class="line">myObj.propertyIsEnumerable(<span class="string">"b"</span>); <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.keys(myObj); <span class="comment">//["a"] 对象中可枚举的属性名数组</span></span><br><span class="line"><span class="built_in">Object</span>.getOwnPropertyNames(myObj); <span class="comment">//["a", "b"] 对象中所有属性名数组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> k <span class="keyword">in</span> myObj) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(k, myObj[k]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//"a" 2 不可枚举的元素不参与遍历</span></span><br></pre></td></tr></table></figure><h3 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h3><blockquote><p>迭代器: <code>for...in</code>, <code>forEach(...)</code>, <code>every(...)</code>, <code>some(....)</code></p></blockquote><ul><li><code>for...</code>in会遍历所有可枚举属性, 但是无法直接获取属性值, 需要手动获取</li><li><code>forEach(...)</code>会遍历数组中所有值且<em>忽略</em>回调函数的返回值</li><li><code>every(...)</code>会一直运行到回调函数返回false时停止</li><li><code>some(...)</code>会一直运行到回调函数返回true时停止</li><li><code>every(...)</code>和<code>some(...)</code>中特殊的返回值, 类型<code>for</code>中的<code>break</code>, 会提前终止遍历</li><li>遍历数组下标时采用的是数字顺序, 但遍历对象的顺序是不确定的, 而且不同的JavaScript引擎不一样, 当对顺序有要求时, 一定不要相信任何直接观察到的顺序, 它们是不可靠的</li><li>数组遍历</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ES6中遍历数组的值还可以这样操作 for...of</span></span><br><span class="line"><span class="keyword">var</span> myArray = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> v <span class="keyword">of</span> myArray) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//1 2 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//数组内置的@@iterator属性</span></span><br><span class="line"><span class="keyword">var</span> it = myArray[<span class="built_in">Symbol</span>.iterator](); <span class="comment">//Symbol.iterator用来获取@@iterator</span></span><br><span class="line">it.next(); <span class="comment">//&#123;value:1, done:false&#125;</span></span><br><span class="line">it.next(); <span class="comment">//&#123;value:2, done:false&#125;</span></span><br><span class="line">it.next(); <span class="comment">//&#123;value:3, done:false&#125;</span></span><br><span class="line">it.next(); <span class="comment">//&#123;done:true&#125;</span></span><br><span class="line"><span class="comment">//value是当前遍历的值, done表示遍历是否完成</span></span><br></pre></td></tr></table></figure><ul><li>普通对象没有内置<code>@@iterator</code>属性, 但我们可以自定义一个</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myObj = &#123;</span><br><span class="line">    a: <span class="number">2</span>,</span><br><span class="line">    b: <span class="number">3</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义@@iterator属性</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(myObj, <span class="built_in">Symbol</span>.iterator, &#123;</span><br><span class="line">    enumerable: <span class="literal">false</span>,</span><br><span class="line">    writable: <span class="literal">false</span>,</span><br><span class="line">    configurable: <span class="literal">true</span>,</span><br><span class="line">    value: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> o = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">var</span> idx = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> ks = <span class="built_in">Object</span>.keys(o);</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            next: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> &#123;</span><br><span class="line">                    value: o[ks[idx++]],</span><br><span class="line">                    done: (idx &gt; ks.length)</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用方法与数组相同</span></span><br><span class="line"><span class="keyword">var</span> it = myObj[<span class="built_in">Symbol</span>.iterator]();</span><br><span class="line">it.next(); <span class="comment">//&#123;value:2, done:false&#125;</span></span><br><span class="line">it.next(); <span class="comment">//&#123;value:3, done:false&#125;</span></span><br><span class="line">it.next(); <span class="comment">//&#123;value:undefined, done:true&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//现在也可以使用for...of了!!</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> v <span class="keyword">of</span> myObj) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//只要next()调用会返回&#123;value: ...&#125;和&#123;done: true&#125;, ES6的for...of就可以遍历它</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//无限迭代器</span></span><br><span class="line"><span class="keyword">var</span> randoms = &#123;</span><br><span class="line">    [<span class="built_in">Symbol</span>.iterator]: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            next: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> &#123;<span class="attr">value</span>: <span class="built_in">Math</span>.random()&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> randoms_pool = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> n <span class="keyword">of</span> randoms) &#123;</span><br><span class="line">    randoms_pool.push(n);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//防止无限运行!</span></span><br><span class="line">    <span class="keyword">if</span> (randoms_pool.length === <span class="number">100</span>) &#123;</span><br><span class="line">       <span class="keyword">break</span>; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> 基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Chunks a list into smaller lists of a specified size</title>
      <link href="/2020/03/16/2020-3-16-chunk/"/>
      <url>/2020/03/16/2020-3-16-chunk/</url>
      
        <content type="html"><![CDATA[<h3 id="chunk"><a href="#chunk" class="headerlink" title="chunk"></a>chunk</h3><p>Chunks a list into smaller lists of a specified size.</p><p>Use <code>range</code> to create a list of desired size. Then use <code>map</code> on this list and fill it with splices of <code>lst</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> ceil</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">chunk</span><span class="params">(lst, size)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> list(</span><br><span class="line">        map(<span class="keyword">lambda</span> x: lst[x * size:x * size + size],</span><br><span class="line">            list(range(<span class="number">0</span>, ceil(len(lst) / size)))))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chunk([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>],<span class="number">2</span>) <span class="comment"># [[1,2],[3,4],5]</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Removes falsey values from a list</title>
      <link href="/2020/03/15/2020-3-15-compact/"/>
      <url>/2020/03/15/2020-3-15-compact/</url>
      
        <content type="html"><![CDATA[<h3 id="compact"><a href="#compact" class="headerlink" title="compact"></a>compact</h3><p>Removes falsey values from a list.</p><p>Use <code>filter()</code> to filter out falsey values (False, None, 0, and “”).</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">compact</span><span class="params">(lst)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> list(filter(bool, lst))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compact([<span class="number">0</span>, <span class="number">1</span>, <span class="literal">False</span>, <span class="number">2</span>, <span class="string">''</span>, <span class="number">3</span>, <span class="string">'a'</span>, <span class="string">'s'</span>, <span class="number">34</span>]) <span class="comment"># [ 1, 2, 3, 'a', 's', 34 ]</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Closure in JavaScript</title>
      <link href="/2020/03/14/2020-3-14-closure-in-javascript/"/>
      <url>/2020/03/14/2020-3-14-closure-in-javascript/</url>
      
        <content type="html"><![CDATA[<h2 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h2><blockquote><p>当函数可以记住并访问所在的词法作用域, 即使函数是在当前词法作用域之外执行, 这时就产生了<em>闭包</em></p></blockquote><blockquote><p>JavaScript中闭包无处不在, 只需要能够识别并拥抱它.</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">2</span>;</span><br><span class="line">     </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(a);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> bar; <span class="comment">//将bar引用的函数对象本身当作返回值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> baz = foo();</span><br><span class="line"></span><br><span class="line">baz(); <span class="comment">//2 --这就是闭包</span></span><br></pre></td></tr></table></figure><p>拜bar()所声明的位置所赐, 它拥有涵盖foo()内部作用域的闭包, 使得该作用域能够一直存活, 一共bar()在之后任何时间进行引用. </p><blockquote><p>闭包使得函数可以继续访问定义时的词法作用域</p></blockquote><blockquote><p>只要使用了<em>回调函数</em>, 实际上就是使用闭包!</p></blockquote><ul><li>错误循环</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">1</span>; i&lt;=<span class="number">5</span>; i++) &#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span> <span class="title">timer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(i);</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//以每秒一次的频率输出1~5</span></span><br><span class="line"><span class="comment">//循环终止时,i==6;</span></span><br><span class="line"><span class="comment">//延迟函数的回调会在循环全部结束时才执行, 因此每次都会输出一个6</span></span><br></pre></td></tr></table></figure><ul><li>正确示范</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方法一:</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">1</span>; i&lt;=<span class="number">5</span>; i++) &#123;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params">j</span>) </span>&#123;</span><br><span class="line">        setTimeout(<span class="function"><span class="keyword">function</span> <span class="title">timer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(j);</span><br><span class="line">        &#125;, <span class="number">1000</span>);</span><br><span class="line">    &#125;)(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//以每秒一次的频率分别输出1~5</span></span><br><span class="line"><span class="comment">//IIFE为每个迭代都生成新的作用域, 使得延迟函数的回调可以将新的作用域封闭在每个迭代内部, 访问正确的变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//方法二:</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i=<span class="number">1</span>; i&lt;=<span class="number">5</span>; i++) &#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span> <span class="title">timer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(i);</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//块作用域和闭包,天下无敌!</span></span><br></pre></td></tr></table></figure><h2 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CoolModule</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> somthing = <span class="string">"cool"</span>;</span><br><span class="line">    <span class="keyword">var</span> another = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">doSomething</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(something);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">doAnother</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.llog(another.join(<span class="string">"!"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        doSomething: doSomething,</span><br><span class="line">        doAnother: doAnother</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> foo = CoolModule();</span><br><span class="line"></span><br><span class="line">foo.doSomething(); <span class="comment">//cool</span></span><br><span class="line">foo.doAnother(); <span class="comment">//1!2!3</span></span><br></pre></td></tr></table></figure><h3 id="模块模式必备条件"><a href="#模块模式必备条件" class="headerlink" title="模块模式必备条件:"></a>模块模式必备条件:</h3><ol><li>必须有外部的封闭函数, 该函数必须至少调用一次(每次调用都会创建一个新的模块实例)</li><li>封闭函数必须返回至少一个内部函数, 这样内部函数才能在私有作用域中形成闭包, 并且可以访问或者修改私有的状态</li></ol><h3 id="现代模块"><a href="#现代模块" class="headerlink" title="现代模块"></a>现代模块</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> MyModules = (<span class="function"><span class="keyword">function</span> <span class="title">Manager</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> modules = &#123;&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">define</span>(<span class="params">name, deps, impl</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;deps.length; i++) &#123;</span><br><span class="line">            deps[i] = modules[deps[i]];</span><br><span class="line">        &#125;</span><br><span class="line">        modules[name] = impl.apply(impl, deps);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> modules[name];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        define: define,</span><br><span class="line">        <span class="keyword">get</span>: <span class="keyword">get</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line">MyModules.define("bar", [], function()&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params">who</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Let me introduce: "</span> + who;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        hello: hello</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">MyModules.define(<span class="string">"foo"</span>, [<span class="string">"bar"</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> hungry = <span class="string">"hippo"</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">awesome</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(bar.hello(hungry).toUpperCase());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        awesome: awesome</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> bar = MyModules.get(<span class="string">"bar"</span>);</span><br><span class="line"><span class="keyword">var</span> foo = MyModules.get(<span class="string">"foo"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(bar.hello(<span class="string">"hippo"</span>)); <span class="comment">//Let me introduce: hippo</span></span><br><span class="line">foo.awesome(); <span class="comment">//LET ME INTRODUCE: HIPPO</span></span><br></pre></td></tr></table></figure><h3 id="未来模块"><a href="#未来模块" class="headerlink" title="未来模块"></a>未来模块</h3><ul><li>bar.js</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params">who</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"Let me introduce: "</span> + who;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> hello;</span><br></pre></td></tr></table></figure><ul><li>foo.js</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hello <span class="keyword">from</span> <span class="string">"bar"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> hungry = <span class="string">"hippo"</span>;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">awesome</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(hello(hungry).toUpperCase());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> awesome;</span><br></pre></td></tr></table></figure><ul><li>baz.js</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span> foo <span class="keyword">from</span> <span class="string">"foo"</span>;</span><br><span class="line"><span class="built_in">module</span> bar <span class="keyword">from</span> <span class="string">"bar"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(bar.hello(<span class="string">"rhino"</span>)); <span class="comment">//Let me introduce: rhino</span></span><br><span class="line">foo.awesome(); <span class="comment">//LET ME INTRODUCE: HIPPO</span></span><br></pre></td></tr></table></figure><ol><li>import可以将一个模块中的一个或多个API导入到当前作用域中, 并分别绑定在一个变量上, 如hello</li><li>module会将整个模块的API导入并绑定在一个变量上, 如foo和bar</li><li>export会将当前模块的一个标识符(变量, 函数)导出为公共函数</li></ol>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> 基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascript作用域</title>
      <link href="/2020/03/13/2020-3-13-scope-of-javascript/"/>
      <url>/2020/03/13/2020-3-13-scope-of-javascript/</url>
      
        <content type="html"><![CDATA[<blockquote><p>JavaScript 是一门编译语言, 编译就发生在执行前几微秒(甚至更短!)</p></blockquote><h2 id="编译步骤"><a href="#编译步骤" class="headerlink" title="编译步骤:"></a>编译步骤:</h2><ol><li>分词/词法分析</li><li>解析/语法分析</li><li>代码生成</li></ol><h2 id="变量的赋值"><a href="#变量的赋值" class="headerlink" title="变量的赋值:"></a>变量的赋值:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">LHS:在当前作用域声明变量--&gt;RHS:在作用域中查找该变量并赋值</span><br></pre></td></tr></table></figure><p>在当前作用域无法找到某个变量时, 引擎就会在外层嵌套的作用域中继续查找, 直到找到该变量, 或者抵达最外层的作用域(即全局作用域)为止 (从内到外查找)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a + b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> b = <span class="number">2</span>;</span><br><span class="line">foo(<span class="number">2</span>); <span class="comment">//4</span></span><br></pre></td></tr></table></figure><ul><li><p>RHS查询在所有作用域中都找不到变量时, 就会抛出ReferenceError</p></li><li><p>LHS在<em>非严格模式</em>下查找不到变量时,会在全局作用域自动创建该名称的变量</p></li><li><p>LHS在<em>严格模式</em>下查找不到变量时, 也会抛出ReferenceError</p></li><li><p>作用域查找会在找到<em>第一个<em>匹配的标识符时停止, 多层嵌套的作用域中, 同名标识符会产生”</em>遮蔽效应</em>“, 内层会遮蔽外层</p></li><li><p>全局变量被遮蔽时, 可用<em>window.a</em>这种方法访问</p></li><li><p>非全局变量被遮蔽后, 则无论如何都没法访问到</p></li><li><p>eval(…)可以将字符串转换为代码, 很危险!! 禁止使用!!!</p></li><li><p>with为重复引用同一对象中多个属性的快捷方式, 也禁止使用!!!</p></li></ul><h2 id="函数中的作用域"><a href="#函数中的作用域" class="headerlink" title="函数中的作用域"></a>函数中的作用域</h2><h3 id="函数内容私有化"><a href="#函数内容私有化" class="headerlink" title="函数内容私有化"></a>函数内容私有化</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> b;</span><br><span class="line">    b = a + bar(a*<span class="number">2</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(b*<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line">foo(<span class="number">2</span>); <span class="comment">//15</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//b和bar都无法从外部访问</span></span><br></pre></td></tr></table></figure><h3 id="规避冲突"><a href="#规避冲突" class="headerlink" title="规避冲突"></a>规避冲突</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> MyReallyCoolLib = &#123;</span><br><span class="line">    awesome: <span class="string">"stuff"</span>,</span><br><span class="line">    foo: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    &#125;,</span><br><span class="line">    bar: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    &#125;,</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>如果function是声明中的第一个词, 那么就是一个函数声明, 否则就是函数表达式</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//函数表达式</span></span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><blockquote><p>始终给函数表达式命名是一个最佳实践!!</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(<span class="function"><span class="keyword">function</span> <span class="title">timeoutHandler</span>(<span class="params"></span>)</span>&#123; <span class="comment">//&lt;--有名字</span></span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><blockquote><p>立即执行表达式IIFE (function foo(){…})(), 第一个()将函数变为表达式, 第二个()立即执行这个函数</p></blockquote><h3 id="let"><a href="#let" class="headerlink" title="let"></a>let</h3><ul><li>只要声明有效, 在声明的人员位置都可以使用{…}来为let创建用于绑定的块</li><li>使用let进行的声明不会在块作用域中提升, 声明的代码运行前, 声明并不存在</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(bar); <span class="comment">//ReferenceError!</span></span><br><span class="line">    <span class="keyword">let</span> bar = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>回收垃圾</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">process</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这个块中的内容完事可以自动销毁!</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> someReallyBigData = &#123;...&#125;;</span><br><span class="line">    process(someReallyBigData);</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="const"><a href="#const" class="headerlink" title="const"></a>const</h3><ul><li>不能修改的块级常量</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> foo = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (foo) &#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">const</span> b = <span class="number">3</span>;</span><br><span class="line">    </span><br><span class="line">    a = <span class="number">3</span>; <span class="comment">//正常!</span></span><br><span class="line">    b = <span class="number">4</span>; <span class="comment">//错误!</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">//3</span></span><br><span class="line"><span class="built_in">console</span>.log(b); <span class="comment">//ReferenceError!</span></span><br></pre></td></tr></table></figure><h2 id="提升"><a href="#提升" class="headerlink" title="提升:"></a>提升:</h2><ul><li>包括变量和函数在内的所有声明都会在任何代码执行之前首先处理</li><li><em>先有蛋(声明)后有鸡(赋值)</em></li><li>只有声明本身会提升, 而赋值或其他运行逻辑会留在原地</li><li>函数声明会提升, 但是函数表达式不会被提升</li><li>函数首先被提升, 然后才是变量</li><li>避免重复声明</li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> 基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>About this in Javascript</title>
      <link href="/2020/03/13/2020-3-13-about-this-in-javascript/"/>
      <url>/2020/03/13/2020-3-13-about-this-in-javascript/</url>
      
        <content type="html"><![CDATA[<blockquote><h4 id="this提供了一种优雅的方式来隐式”传递”对象引用-有助于将API设计的更加简洁且易于复用"><a href="#this提供了一种优雅的方式来隐式”传递”对象引用-有助于将API设计的更加简洁且易于复用" class="headerlink" title="this提供了一种优雅的方式来隐式”传递”对象引用, 有助于将API设计的更加简洁且易于复用"></a>this提供了一种优雅的方式来隐式”传递”对象引用, 有助于将API设计的更加简洁且易于复用</h4></blockquote><h4 id="1-What-is-”this”"><a href="#1-What-is-”this”" class="headerlink" title="1. What is *”this”* ?"></a>1. What is *”this”* ?</h4><ul><li>当函数被调用时,会创建一个活动记录(执行上下文), 这个记录包含函数在哪里被调用(调用栈),调用方式, 传入的参数等信息. this就是这个记录的一个属性.</li><li>this实际上就是在函数<em>调用时发生的绑定</em>, 它指向什么完全取决于函数<em>在哪里被调用</em></li></ul><h4 id="2-绑定规则"><a href="#2-绑定规则" class="headerlink" title="2. 绑定规则"></a>2. 绑定规则</h4><ol><li>默认绑定</li></ol><ul><li>foo()直接调用时, 只能使用默认绑定, this指向全局对象;</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a=<span class="number">2</span>;</span><br><span class="line">foo(); <span class="comment">//2</span></span><br></pre></td></tr></table></figure><ul><li>foo()本身使用strict mode时, 不能使用默认绑定, this为undefined;</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="meta">    "use strict"</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a=<span class="number">2</span>;</span><br><span class="line">foo(); <span class="comment">//TypeError: this is undefined</span></span><br></pre></td></tr></table></figure><ul><li>在strict mode下调用foo(), 不影响默认绑定</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="meta">    "use strict"</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a=<span class="number">2</span>;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="meta">    "use strict"</span>;</span><br><span class="line">    foo(); <span class="comment">//2</span></span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><ol start="2"><li>隐式绑定</li></ol><ul><li>函数引用有上下文对象时, 隐式绑定规则会将this绑定到上下文对象</li><li>对象属性引用链只在最后一层调用位置中起作用</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj2 = &#123;</span><br><span class="line">    a: <span class="number">42</span>,</span><br><span class="line">    foo: foo</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> obj1 = &#123;</span><br><span class="line">    a: <span class="number">2</span>,</span><br><span class="line">    obj2: obj2</span><br><span class="line">&#125;;</span><br><span class="line">obj1.obj2.foo(); <span class="comment">//42</span></span><br></pre></td></tr></table></figure><ul><li>隐式丢失</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    a:<span class="number">2</span>,</span><br><span class="line">    foo: foo</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> bar = obj.foo; <span class="comment">//bar引用的是foo函数本身</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="string">"oops, global"</span>; <span class="comment">//全局属性</span></span><br><span class="line">bar(); <span class="comment">//"oops, global"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//bar()此时就是一个不带任何修饰的函数调用,因此使用默认绑定</span></span><br><span class="line"></span><br><span class="line">setTimeout(obj.foo, <span class="number">100</span>); <span class="comment">//"oops, global"</span></span><br><span class="line"><span class="comment">//setTimeout相当于下述代码, 会把回调函数的this强制绑定到触发事件的DOM元素上</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    function setTimeout(fn, delay)&#123;</span></span><br><span class="line"><span class="comment">        //等待delay毫秒</span></span><br><span class="line"><span class="comment">        fn(); //调用函数</span></span><br><span class="line"><span class="comment">    &#125; </span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ol start="3"><li>显示绑定</li></ol><ul><li>使用call(…)和apply(…)强制绑定</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    a:<span class="number">2</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> bar = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    foo.call(obj); <span class="comment">//this被硬绑定至obj</span></span><br><span class="line">&#125;;</span><br><span class="line">bar(); <span class="comment">//2</span></span><br><span class="line">setTimeout(bar, <span class="number">100</span>); <span class="comment">//2</span></span><br><span class="line">bar.call(<span class="built_in">window</span>); <span class="comment">//2 硬绑定的bar不能再修改它的this</span></span><br></pre></td></tr></table></figure><ul><li>可复用的辅助绑定函数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bind</span>(<span class="params">fn, obj</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fn.apply(obj, <span class="built_in">arguments</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">sth</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.a, sth);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.a + sth;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    a:<span class="number">2</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> bar = bind(foo, obj);</span><br><span class="line"><span class="keyword">var</span> b = bar(<span class="number">3</span>); <span class="comment">//2, 3</span></span><br><span class="line"><span class="built_in">console</span>.log(b); <span class="comment">//5</span></span><br></pre></td></tr></table></figure><ul><li>API调用的上下文</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">el</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(el, <span class="keyword">this</span>.id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    id: <span class="string">"awesome"</span></span><br><span class="line">&#125;;</span><br><span class="line">[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>].forEach(foo, obj); <span class="comment">//1 awesome 2 awesome 3 awesome</span></span><br></pre></td></tr></table></figure><ol start="4"><li>new绑定</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.a = a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> bar = <span class="keyword">new</span> foo(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">console</span>.log(bar.a); <span class="comment">//2</span></span><br></pre></td></tr></table></figure><h4 id="3-绑定优先级"><a href="#3-绑定优先级" class="headerlink" title="3. 绑定优先级"></a>3. 绑定优先级</h4><ol><li>是否在new中调用?　        是的话, this绑定至新创建的对象</li><li>是否通过call, apply调用?  是的话, this绑定至指定的对象</li><li>是否通过上下文隐式绑定?   是的话, this绑定至新创建的对象</li><li>上述都不是的话, 严格模式下, this绑定至undefined, 否则绑定至全局对象</li></ol><h4 id="4-绑定例外"><a href="#4-绑定例外" class="headerlink" title="4. 绑定例外"></a>4. 绑定例外</h4><ul><li>被忽略的this</li></ul><p>如果把null或undefined作为this的绑定对象传入call, apply, bind, 在调用的时候会被忽略</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a=<span class="number">2</span>;</span><br><span class="line">foo.call(<span class="literal">null</span>); <span class="comment">//2</span></span><br></pre></td></tr></table></figure><p>安全的做法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">a,b</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"a:"</span> + a + <span class="string">", b:"</span> + b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//DMZ空对象</span></span><br><span class="line"><span class="keyword">var</span> ф = <span class="built_in">Object</span>.create(<span class="literal">null</span>);</span><br><span class="line">foo.apply(ф, [<span class="number">2</span>, <span class="number">3</span>]); <span class="comment">//a:2, b:3</span></span><br><span class="line"><span class="keyword">var</span> bar = foo.bind(ф, <span class="number">2</span>);</span><br><span class="line">bar(<span class="number">3</span>); <span class="comment">//a:2, b:3</span></span><br></pre></td></tr></table></figure><p>使用变量名ф不仅让函数更安全, 而且能提高代码可读性, 因为ф表示”我希望this是空”, 这比null含义更清晰</p><ul><li>间接引用</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">var</span> o = &#123; <span class="attr">a</span>:<span class="number">3</span>, <span class="attr">foo</span>:foo &#125;;</span><br><span class="line"><span class="keyword">var</span> p = &#123; <span class="attr">a</span>:<span class="number">4</span> &#125;;</span><br><span class="line">o.foo(); <span class="comment">//3</span></span><br><span class="line">(p.foo = o.foo)(); <span class="comment">//2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//p.foo = o.foo的返回值是目标函数的引用,因此调用位置是foo()而不是p.foo()或o.foo(), 因此为默认绑定</span></span><br></pre></td></tr></table></figure><ul><li>软绑定</li></ul><p>如果给默认绑定指定一个全局对象和undefined以外的值, 可以实现和硬绑定相同的效果, 同时保留隐式绑定或者显示绑定修改this的能力</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!<span class="built_in">Function</span>.prototype.softBind) &#123;</span><br><span class="line">    <span class="built_in">Function</span>.prototype.softBind = <span class="function"><span class="keyword">function</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> fn = <span class="keyword">this</span>;</span><br><span class="line">        <span class="comment">//捕获所有curried参数</span></span><br><span class="line">        <span class="keyword">var</span> curried = [].slice.call(<span class="built_in">arguments</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">var</span> bound = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> fn.apply(</span><br><span class="line">                (!<span class="keyword">this</span> || <span class="keyword">this</span> === (<span class="built_in">window</span> || global)) ?</span><br><span class="line">                    obj: <span class="keyword">this</span>,</span><br><span class="line">                curried.concat.apply(curried, <span class="built_in">arguments</span>)</span><br><span class="line">            );</span><br><span class="line">        &#125;;</span><br><span class="line">        bound.prototype = <span class="built_in">Object</span>.create(fn.prototype);</span><br><span class="line">        <span class="keyword">return</span> bound;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>软绑定使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"name: "</span> + <span class="keyword">this</span>.name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">name</span>: <span class="string">"obj"</span>&#125;,</span><br><span class="line">    obj2 = &#123;<span class="attr">name</span>: <span class="string">"obj2"</span>&#125;,</span><br><span class="line">    obj3 = &#123;<span class="attr">name</span>: <span class="string">"obj3"</span>&#125;;</span><br><span class="line"><span class="keyword">var</span> fooOBJ = foo.softBind(obj);</span><br><span class="line"></span><br><span class="line">fooOBJ(); <span class="comment">//name: obj</span></span><br><span class="line"></span><br><span class="line">obj2.foo = foo.softBind(obj);</span><br><span class="line">obj2.foo(); <span class="comment">//name: obj2</span></span><br><span class="line"></span><br><span class="line">fooOBJ.call(obj3); <span class="comment">//name: obj3</span></span><br><span class="line"></span><br><span class="line">setTimeout(obj2.foo, <span class="number">10</span>); <span class="comment">//name: obj &lt;-- 应用软绑定</span></span><br></pre></td></tr></table></figure><h4 id="5-箭头函数"><a href="#5-箭头函数" class="headerlink" title="5. 箭头函数"></a>5. 箭头函数</h4><p>++箭头函数不使用上述this的四种标准规则, 而是根据外层(函数或全局)作用域来决定this(无论this绑定到什么)++</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//返回箭头函数</span></span><br><span class="line">    <span class="keyword">return</span> <span class="function">(<span class="params">a</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">//this继承自foo()</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.a);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj1 = &#123;<span class="attr">a</span>:<span class="number">2</span>&#125;;</span><br><span class="line"><span class="keyword">var</span> obj2 = &#123;<span class="attr">a</span>:<span class="number">3</span>&#125;;</span><br><span class="line"><span class="keyword">var</span> bar = foo.cal(obj1);</span><br><span class="line">bar.call(obj2); <span class="comment">//2, 不是3!</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//foo()的this已经绑定至obj1, bar的this也绑定至obj1, 箭头函数的绑定无法修改</span></span><br></pre></td></tr></table></figure><p>箭头函数常用于回调函数中, 可以像bind(…)一样确保this绑定至指定对象上</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">//这里的this继承自foo()</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.a);</span><br><span class="line">    &#125;, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">a</span>:<span class="number">2</span>&#125;;</span><br><span class="line">foo.call(obj); <span class="comment">//2</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> 基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Capitalizes the first letter of every word in a string</title>
      <link href="/2020/03/12/2020-3-12-capitalize_every_word/"/>
      <url>/2020/03/12/2020-3-12-capitalize_every_word/</url>
      
        <content type="html"><![CDATA[<h3 id="capitalize-every-word"><a href="#capitalize-every-word" class="headerlink" title="capitalize_every_word"></a>capitalize_every_word</h3><p>Capitalizes the first letter of every word in a string.</p><p>Uses <code>str.title</code> to capitalize the first letter of every word in the string.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">capitalize_every_word</span><span class="params">(string)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> string.title()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">capitalize_every_word(<span class="string">'hello world!'</span>) <span class="comment"># 'Hello World!'</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Capitalizes the first letter of a string</title>
      <link href="/2020/03/11/2020-3-11-capitalize/"/>
      <url>/2020/03/11/2020-3-11-capitalize/</url>
      
        <content type="html"><![CDATA[<h3 id="capitalize"><a href="#capitalize" class="headerlink" title="capitalize"></a>capitalize</h3><p>Capitalizes the first letter of a string.</p><p>Capitalizes the fist letter of the sring and then adds it with rest of the string. Omit the <code>lower_rest</code> parameter to keep the rest of the string intact, or set it to <code>true</code> to convert to lowercase.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">capitalize</span><span class="params">(string, lower_rest=False)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> string[:<span class="number">1</span>].upper() + (string[<span class="number">1</span>:].lower() <span class="keyword">if</span> lower_rest <span class="keyword">else</span> string[<span class="number">1</span>:])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">capitalize(<span class="string">'fooBar'</span>) <span class="comment"># 'FooBar'</span></span><br><span class="line">capitalize(<span class="string">'fooBar'</span>, <span class="literal">True</span>) <span class="comment"># 'Foobar'</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Returns the length of a string in bytes</title>
      <link href="/2020/03/10/2020-3-10-byte_size/"/>
      <url>/2020/03/10/2020-3-10-byte_size/</url>
      
        <content type="html"><![CDATA[<h3 id="byte-size"><a href="#byte-size" class="headerlink" title="byte_size"></a>byte_size</h3><p>Returns the length of a string in bytes.</p><p><code>utf-8</code> encodes a given string and find its length.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">byte_size</span><span class="params">(string)</span>:</span></span><br><span class="line">    <span class="keyword">return</span>(len(string.encode(<span class="string">'utf-8'</span>)))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">byte_size(<span class="string">'😀'</span>) <span class="comment"># 4</span></span><br><span class="line">byte_size(<span class="string">'Hello World'</span>) <span class="comment"># 11</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Comparing and Swapping</title>
      <link href="/2020/03/09/2020-3-9-bubble_sort/"/>
      <url>/2020/03/09/2020-3-9-bubble_sort/</url>
      
        <content type="html"><![CDATA[<h3 id="bubble-sort"><a href="#bubble-sort" class="headerlink" title="bubble_sort"></a>bubble_sort</h3><p>Bubble_sort uses the technique of comparing and swapping</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bubble_sort</span><span class="params">(lst)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> passnum <span class="keyword">in</span> range(len(lst) - <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(passnum):</span><br><span class="line">            <span class="keyword">if</span> lst[i] &gt; lst[i + <span class="number">1</span>]:</span><br><span class="line">                temp = lst[i]</span><br><span class="line">                lst[i] = lst[i + <span class="number">1</span>]</span><br><span class="line">                lst[i + <span class="number">1</span>] = temp</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lst = [<span class="number">54</span>,<span class="number">26</span>,<span class="number">93</span>,<span class="number">17</span>,<span class="number">77</span>,<span class="number">31</span>,<span class="number">44</span>,<span class="number">55</span>,<span class="number">20</span>]</span><br><span class="line">bubble_sort(lst)</span><br><span class="line">print(<span class="string">"sorted %s"</span> %lst) <span class="comment"># [17,20,26,31,44,54,55,77,91]</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Returns the average of two or more numbers</title>
      <link href="/2020/03/08/2020-3-8-average/"/>
      <url>/2020/03/08/2020-3-8-average/</url>
      
        <content type="html"><![CDATA[<h3 id="average"><a href="#average" class="headerlink" title="average"></a>average</h3><p>Returns the average of two or more numbers.</p><p>Takes the sum of all the <code>args</code> and divides it by <code>len(args)</code>. The second argument <code>0.0</code> in sum is to handle floating point division in <code>python3</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">average</span><span class="params">(*args)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> sum(args, <span class="number">0.0</span>) / len(args)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">average(*[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]) <span class="comment"># 2.0</span></span><br><span class="line">average(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>) <span class="comment"># 2.0</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Checks a flat list for all unique values</title>
      <link href="/2020/03/07/2020-3-7-all_unique/"/>
      <url>/2020/03/07/2020-3-7-all_unique/</url>
      
        <content type="html"><![CDATA[<h3 id="all-unique"><a href="#all-unique" class="headerlink" title="all_unique"></a>all_unique</h3><p>Checks a flat list for all unique values. Returns True if list values are all unique and False if list values aren’t all unique.</p><p>This function compares the length of the list with length of the set() of the list. set() removes duplicate values from the list.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">all_unique</span><span class="params">(lst)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> len(lst) == len(set(lst))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line">y = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">all_unique(x) <span class="comment"># True</span></span><br><span class="line">all_unique(y) <span class="comment"># False</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>What are `defer` and `async` attributes on a `script` tag?</title>
      <link href="/2020/03/06/2020-3-6-async-defer-attributes/"/>
      <url>/2020/03/06/2020-3-6-async-defer-attributes/</url>
      
        <content type="html"><![CDATA[<h3 id="What-are-defer-and-async-attributes-on-a-lt-script-gt-tag"><a href="#What-are-defer-and-async-attributes-on-a-lt-script-gt-tag" class="headerlink" title="What are defer and async attributes on a &lt;script&gt; tag?"></a>What are <code>defer</code> and <code>async</code> attributes on a <code>&lt;script&gt;</code> tag?</h3><h4 id="Answer"><a href="#Answer" class="headerlink" title="Answer"></a>Answer</h4><p>If neither attribute is present, the script is downloaded and executed synchronously, and will halt parsing of the document until it has finished executing (default behavior). Scripts are downloaded and executed in the order<br>they are encountered.</p><p>The <code>defer</code> attribute downloads the script while the document is still parsing but waits until the document has finished parsing before executing it, equivalent to executing inside a <code>DOMContentLoaded</code> event listener. <code>defer</code> scripts will execute in order.</p><p>The <code>async</code> attribute downloads the script during parsing the document but will pause the parser to execute the script before it has fully finished parsing. <code>async</code> scripts will not necessarily execute in order.</p><p>Note: both attributes must only be used if the script has a <code>src</code> attribute (i.e. not an inline script).</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"myscript.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"myscript.js"</span> <span class="attr">defer</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"myscript.js"</span> <span class="attr">async</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Good-to-hear"><a href="#Good-to-hear" class="headerlink" title="Good to hear"></a>Good to hear</h4><ul><li>Placing a <code>defer</code> script in the <code>&lt;head&gt;</code> allows the browser to download the script while the page is still parsing, and is therefore a better option than placing the script before the end of the body.</li><li>If the scripts rely on each other, use <code>defer</code>.</li><li>If the script is independent, use <code>async</code>.</li><li>Use <code>defer</code> if the DOM must be ready and the contents are not placed within a <code>DOMContentLoaded</code> listener.</li></ul><h5 id="Additional-links"><a href="#Additional-links" class="headerlink" title="Additional links"></a>Additional links</h5><!-- Whenever possible, link a more detailed explanation. --><ul><li><a href="http://www.growingwiththeweb.com/2014/02/async-vs-defer-attributes.html" target="_blank" rel="noopener">async vs defer attributes</a></li></ul><!-- tags: (html) --><!-- expertise: (1) -->]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> 基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>What is the purpose of the `alt` attribute on images?</title>
      <link href="/2020/03/05/2020-3-5-alt-attribute/"/>
      <url>/2020/03/05/2020-3-5-alt-attribute/</url>
      
        <content type="html"><![CDATA[<h3 id="What-is-the-purpose-of-the-alt-attribute-on-images"><a href="#What-is-the-purpose-of-the-alt-attribute-on-images" class="headerlink" title="What is the purpose of the alt attribute on images?"></a>What is the purpose of the <code>alt</code> attribute on images?</h3><h4 id="Answer"><a href="#Answer" class="headerlink" title="Answer"></a>Answer</h4><p>The <code>alt</code> attribute provides alternative information for an image if a user cannot view it. The <code>alt</code> attribute should be used to describe any images except those which only serve a decorative purposes, in which case it should be left empty.</p><h4 id="Good-to-hear"><a href="#Good-to-hear" class="headerlink" title="Good to hear"></a>Good to hear</h4><ul><li>Decorative images should have an empty <code>alt</code> attribute.</li><li>Web crawlers use <code>alt</code> tags to understand image content, so they are considered important for Search Engine Optimization (SEO).</li><li>Put the <code>.</code> at the end of <code>alt</code> tag to improve accessibility.</li></ul><h5 id="Additional-links"><a href="#Additional-links" class="headerlink" title="Additional links"></a>Additional links</h5><ul><li><a href="https://developer.mozilla.org/en-US/docs/Learn/Accessibility/HTML" target="_blank" rel="noopener">A good basis for accessibility</a></li></ul><!-- tags: (html) --><!-- expertise: (0) -->]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> 基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CORS</title>
      <link href="/2020/03/04/2020-3-4-CORS/"/>
      <url>/2020/03/04/2020-3-4-CORS/</url>
      
        <content type="html"><![CDATA[<h2 id="What-is-CORS"><a href="#What-is-CORS" class="headerlink" title="What is CORS?"></a>What is CORS?</h2><h3 id="Answer"><a href="#Answer" class="headerlink" title="Answer"></a>Answer</h3><ul><li>Cross-Origin Resource Sharing or CORS is a mechanism that uses additional HTTP headers to grant a browser permission to access resources from a server at an origin different from the website origin.</li><li>An example of a cross-origin request is a web application served from <a href="http://mydomain.com" target="_blank" rel="noopener">http://mydomain.com</a> that uses AJAX to make a request for <a href="http://yourdomain.com" target="_blank" rel="noopener">http://yourdomain.com</a>.</li><li>For security reasons, browsers restrict cross-origin HTTP requests initiated by JavaScript. XMLHttpRequest and fetch follow the same-origin policy, meaning a web application using those APIs can only request HTTP resources from the same origin the application was accessed, unless the response from the other origin includes the correct CORS headers.</li></ul><h3 id="Good-to-hear"><a href="#Good-to-hear" class="headerlink" title="Good to hear"></a>Good to hear</h3><ul><li>CORS behavior is not an error,  it’s a security mechanism to protect users.</li><li>CORS is designed to prevent a malicious website that a user may unintentionally visit from making a request to a legitimate website to read their personal data or perform actions against their will.</li></ul><h3 id="Additional-links"><a href="#Additional-links" class="headerlink" title="Additional links"></a>Additional links</h3><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS" target="_blank" rel="noopener">MDN docs for CORS</a></p>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
            <tag> CORS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS Circle</title>
      <link href="/2020/03/03/2020-3-3-CSS-Circle/"/>
      <url>/2020/03/03/2020-3-3-CSS-Circle/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"circle"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.circle</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">2rem</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">2rem</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Explanation"><a href="#Explanation" class="headerlink" title="Explanation"></a>Explanation</h2><ul><li>border-radius: 50% curves the borders of an element to create a circle.</li><li>Since a circle has the same radius at any given point, the width and height must be the same. Differing values will create an ellipse.</li></ul>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bind()辅助函数</title>
      <link href="/2020/03/02/2020-3-2-Bind-function/"/>
      <url>/2020/03/02/2020-3-2-Bind-function/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">somethine</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.a, something);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.a + something;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//bind辅助函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bind</span>(<span class="params">fn, obj</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fn.apply(obj, <span class="built_in">arguments</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    a:<span class="number">2</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> bar = bind(foo, obj);</span><br><span class="line"><span class="keyword">var</span> b = bar(<span class="number">3</span>); <span class="comment">//2+3</span></span><br><span class="line"><span class="built_in">console</span>.log(b); <span class="comment">//5</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cookie</title>
      <link href="/2020/03/01/2020-3-1-Cookie/"/>
      <url>/2020/03/01/2020-3-1-Cookie/</url>
      
        <content type="html"><![CDATA[<h1 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h1><p>HTTP Cookie（也叫Web Cookie或浏览器Cookie）是服务器发送到用户浏览器并保存在本地的一小块数据，它会在浏览器下次向同一服务器再发起请求时被携带并发送到服务器上。通常，它用于告知服务端两个请求是否来自同一浏览器，如保持用户的登录状态。Cookie使基于无状态的HTTP协议记录稳定的状态信息成为了可能。</p><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>Cookie总是保存在客户端中（早期Java中经常会将Cookie与Session作为存储技术进行比较，Session是将数据保存在服务器端，大量的数据存储会增加服务器的负担），按在客户端中的存储位置，可分为内存Cookie和硬盘Cookie。内存Cookie由浏览器维护，保存在内存中，浏览器关闭后就消失了，其存在时间是短暂的。硬盘Cookie保存在硬盘里，有一个过期时间，除非用户手工清理或到了过期时间，硬盘Cookie不会被删除，其存在时间是长期的。所以，按存在时间，可分为非持久Cookie和持久Cookie。</p><h3 id="创建Cookie"><a href="#创建Cookie" class="headerlink" title="创建Cookie"></a>创建Cookie</h3><p>Set-Cookie响应头部和Cookie请求头部节服务器使用Set-Cookie响应头部向用户代理（一般是浏览器）发送Cookie信息。一个简单的Cookie可能像这样：Set-Cookie: &lt;cookie名&gt;=&lt;cookie值&gt;服务器通过该头部告知客户端保存Cookie信息浏览器环境下获取非HttpOnly标记的 cookie</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> cookies = <span class="built_in">document</span>.cookie;</span><br></pre></td></tr></table></figure><h3 id="Cookie的缺点"><a href="#Cookie的缺点" class="headerlink" title="Cookie的缺点"></a>Cookie的缺点</h3><p>Cookie会被附加在每个HTTP请求中，所以无形中增加了流量。由于在HTTP请求中的Cookie是明文传递的，所以安全性成问题，除非用HTTPS。Cookie的大小限制在4KB左右，对于复杂的存储需求来说是不够用的。</p><h3 id="Cookie的简单封装"><a href="#Cookie的简单封装" class="headerlink" title="Cookie的简单封装"></a>Cookie的简单封装</h3><p>设置Cookie时一般会将路径和过期时间一并设置，注意过期时间需要转换成GMT或者UTC</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> <span class="title">IIFE</span>(<span class="params">root</span>)</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getCookie</span>(<span class="params">cname, defaultValue</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> value = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'(^|;| )'</span>+cname+<span class="string">'=([^;]*?)(;|$)'</span>, <span class="string">'g'</span>).exec(<span class="built_in">document</span>.cookie);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'value:'</span>, value);</span><br><span class="line">        <span class="keyword">if</span>(!value) <span class="keyword">return</span> defaultValue;</span><br><span class="line">        <span class="keyword">return</span> value[<span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setCookie</span>(<span class="params">cname, cvalue, day, path</span>)</span>&#123;</span><br><span class="line">        day = day || <span class="number">1</span>;</span><br><span class="line">        path = path || <span class="string">'/'</span>;</span><br><span class="line">        <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">        date.setTime(date.getTime() + day * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>);</span><br><span class="line">        <span class="built_in">document</span>.cookie = cname+<span class="string">'='</span>+cvalue+<span class="string">'; expires='</span> + date.toGMTString() + <span class="string">'; path='</span>+path+<span class="string">'; '</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">deleteCookie</span>(<span class="params">cname</span>)</span>&#123;</span><br><span class="line">        setCookie(cname, <span class="literal">null</span>, <span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    root.Util = &#123;</span><br><span class="line">        getCookie: getCookie,</span><br><span class="line">        setCookie: setCookie,</span><br><span class="line">        deleteCookie: deleteCookie,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)(<span class="built_in">window</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> Cookie </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CreateRequest</title>
      <link href="/2020/02/29/2020-2-29-CreateRequest/"/>
      <url>/2020/02/29/2020-2-29-CreateRequest/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createRequest</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        request = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (tryMS)&#123;</span><br><span class="line">       <span class="keyword">try</span>&#123;</span><br><span class="line">           request = <span class="keyword">new</span> ActiveXObject(<span class="string">"Msxm12.XMLHTTP"</span>);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (otherMS)&#123;</span><br><span class="line">           <span class="keyword">try</span>&#123;</span><br><span class="line">               request = <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</span><br><span class="line">           &#125; <span class="keyword">catch</span> (failed)&#123;</span><br><span class="line">               request = <span class="literal">null</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">    &#125; </span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> request;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS Reset</title>
      <link href="/2020/02/28/2020-2-28-CSS-Reset/"/>
      <url>/2020/02/28/2020-2-28-CSS-Reset/</url>
      
        <content type="html"><![CDATA[<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* http://meyerweb.com/eric/tools/css/reset/ </span></span><br><span class="line"><span class="comment">   v2.0 | 20110126</span></span><br><span class="line"><span class="comment">   License: none (public domain)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@viewport</span>&#123;</span><br><span class="line">    <span class="selector-tag">width</span><span class="selector-pseudo">:device-width</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">-moz-box-sizing</span>:border-box;</span><br><span class="line">    <span class="attribute">box-sizing</span>:border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span>, <span class="selector-tag">body</span>, <span class="selector-tag">div</span>, <span class="selector-tag">span</span>, <span class="selector-tag">applet</span>, <span class="selector-tag">object</span>, <span class="selector-tag">iframe</span>, <span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span>, </span><br><span class="line"><span class="selector-tag">p</span>, <span class="selector-tag">blockquote</span>, <span class="selector-tag">pre</span>, <span class="selector-tag">a</span>, <span class="selector-tag">abbr</span>, <span class="selector-tag">acronym</span>, <span class="selector-tag">address</span>, <span class="selector-tag">big</span>, <span class="selector-tag">cite</span>, <span class="selector-tag">code</span>, <span class="selector-tag">del</span>, <span class="selector-tag">dfn</span>, </span><br><span class="line"><span class="selector-tag">em</span>, <span class="selector-tag">img</span>, <span class="selector-tag">ins</span>, <span class="selector-tag">kbd</span>, <span class="selector-tag">q</span>, <span class="selector-tag">s</span>, <span class="selector-tag">samp</span>, <span class="selector-tag">small</span>, <span class="selector-tag">strike</span>, <span class="selector-tag">strong</span>, <span class="selector-tag">sub</span>, <span class="selector-tag">sup</span>, <span class="selector-tag">tt</span>, <span class="selector-tag">var</span>, <span class="selector-tag">b</span>, </span><br><span class="line"><span class="selector-tag">u</span>, <span class="selector-tag">i</span>, <span class="selector-tag">center</span>, <span class="selector-tag">dl</span>, <span class="selector-tag">dt</span>, <span class="selector-tag">dd</span>, <span class="selector-tag">ol</span>, <span class="selector-tag">ul</span>, <span class="selector-tag">li</span>, <span class="selector-tag">fieldset</span>, <span class="selector-tag">form</span>, <span class="selector-tag">label</span>, <span class="selector-tag">legend</span>, <span class="selector-tag">table</span>,</span><br><span class="line"><span class="selector-tag">caption</span>, <span class="selector-tag">tbody</span>, <span class="selector-tag">tfoot</span>, <span class="selector-tag">thead</span>, <span class="selector-tag">tr</span>, <span class="selector-tag">th</span>, <span class="selector-tag">td</span>, <span class="selector-tag">article</span>, <span class="selector-tag">aside</span>, <span class="selector-tag">canvas</span>, <span class="selector-tag">details</span>, </span><br><span class="line"><span class="selector-tag">embed</span>, <span class="selector-tag">figure</span>, <span class="selector-tag">figcaption</span>, <span class="selector-tag">footer</span>, <span class="selector-tag">header</span>, <span class="selector-tag">hgroup</span>, <span class="selector-tag">menu</span>, <span class="selector-tag">nav</span>, <span class="selector-tag">output</span>, <span class="selector-tag">ruby</span>, </span><br><span class="line"><span class="selector-tag">section</span>, <span class="selector-tag">summary</span>, <span class="selector-tag">time</span>, <span class="selector-tag">mark</span>, <span class="selector-tag">audio</span>, <span class="selector-tag">video</span> &#123;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">font</span>: inherit;</span><br><span class="line"><span class="attribute">vertical-align</span>: baseline;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* HTML5 display-role reset for older browsers */</span></span><br><span class="line"><span class="selector-tag">article</span>, <span class="selector-tag">aside</span>, <span class="selector-tag">details</span>, <span class="selector-tag">figcaption</span>, <span class="selector-tag">figure</span>, <span class="selector-tag">footer</span>, <span class="selector-tag">header</span>, <span class="selector-tag">hgroup</span>, <span class="selector-tag">menu</span>, <span class="selector-tag">nav</span>, <span class="selector-tag">section</span> &#123;</span><br><span class="line"><span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">1.2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line"><span class="attribute">border-collapse</span>: collapse;</span><br><span class="line"><span class="attribute">border-spacing</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ol</span>, <span class="selector-tag">ul</span>&#123;</span><br><span class="line">    <span class="attribute">padding-left</span>:<span class="number">1.4em</span>;</span><br><span class="line"><span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">blockquote</span>, <span class="selector-tag">q</span> &#123;</span><br><span class="line"><span class="attribute">quotes</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">blockquote</span><span class="selector-pseudo">:before</span>, <span class="selector-tag">blockquote</span><span class="selector-pseudo">:after</span>, <span class="selector-tag">q</span><span class="selector-pseudo">:before</span>, <span class="selector-tag">q</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line"><span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line"><span class="attribute">content</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span>, <span class="selector-tag">video</span>, <span class="selector-tag">embed</span>, <span class="selector-tag">object</span>&#123;</span><br><span class="line">    <span class="attribute">max-width</span>:<span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*end reset browser styles*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Div容器凸起放大显示效果</title>
      <link href="/2020/02/27/2020-2-27-Div-CSS/"/>
      <url>/2020/02/27/2020-2-27-Div-CSS/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span> </span><br><span class="line"><span class="css">        <span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">margin-left</span><span class="selector-pseudo">:20px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span><span class="selector-pseudo">:300px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">height</span><span class="selector-pseudo">:100px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border</span><span class="selector-pseudo">:thin</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>:<span class="selector-id">#ff9900</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">-moz-box-shadow</span>: 0<span class="selector-tag">px</span> 0<span class="selector-tag">px</span> 10<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(34, 25, 25, 0<span class="selector-class">.8</span>); <span class="comment">/* 老的 Firefox */</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">box-shadow</span>: 0<span class="selector-tag">px</span> 0<span class="selector-tag">px</span> 10<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(34, 25, 25, 0<span class="selector-class">.8</span>);</span></span><br><span class="line"><span class="css">            <span class="selector-tag">transform</span><span class="selector-pseudo">:scale(1.1</span>,1<span class="selector-class">.1</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">        div &#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">margin-left</span><span class="selector-pseudo">:20px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border</span><span class="selector-pseudo">:thin</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span><span class="selector-pseudo">:300px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">height</span><span class="selector-pseudo">:100px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>:<span class="selector-id">#ff9900</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">transition</span><span class="selector-pseudo">:transform</span> 0<span class="selector-class">.25s</span> <span class="selector-tag">ease</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Div自适应浏览器窗口高度</title>
      <link href="/2020/02/26/2020-2-26-Div-auto-height/"/>
      <url>/2020/02/26/2020-2-26-Div-auto-height/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">autodivheight();  </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">autodivheight</span>(<span class="params"></span>)</span>&#123; <span class="comment">//函数：获取尺寸  </span></span><br><span class="line"><span class="comment">//获取浏览器窗口高度  </span></span><br><span class="line"><span class="keyword">var</span> winHeight=<span class="number">0</span>;  </span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">window</span>.innerHeight)  </span><br><span class="line">winHeight = <span class="built_in">window</span>.innerHeight;  </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> ((<span class="built_in">document</span>.body) &amp;&amp; (<span class="built_in">document</span>.body.clientHeight))  </span><br><span class="line">winHeight = <span class="built_in">document</span>.body.clientHeight;  </span><br><span class="line"><span class="comment">//通过深入Document内部对body进行检测，获取浏览器窗口高度  </span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">document</span>.documentElement &amp;&amp; <span class="built_in">document</span>.documentElement.clientHeight)  </span><br><span class="line">winHeight = <span class="built_in">document</span>.documentElement.clientHeight;  </span><br><span class="line"><span class="comment">//DIV高度为浏览器窗口的高度  </span></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"test"</span>).style.height= winHeight*<span class="number">0.8</span> +<span class="string">"px"</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="built_in">window</span>.onresize=autodivheight; <span class="comment">//浏览器窗口发生变化时同时变化DIV高度</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Echarts Ajax加载数据</title>
      <link href="/2020/02/25/2020-2-25-Echarts-AJAX/"/>
      <url>/2020/02/25/2020-2-25-Echarts-AJAX/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">echartPie.showLoading();</span><br><span class="line">echartGauge.showLoading();</span><br><span class="line">echartBar.showLoading();</span><br><span class="line">setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">type : <span class="string">"get"</span>, </span><br><span class="line"><span class="keyword">async</span> : <span class="literal">false</span>,   <span class="comment">//异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）</span></span><br><span class="line">url : <span class="string">"../php/preview.php"</span>,    <span class="comment">//请求发送到TestServlet处</span></span><br><span class="line">dataType : <span class="string">"json"</span>,        <span class="comment">//返回数据形式为json</span></span><br><span class="line">success : <span class="function"><span class="keyword">function</span>(<span class="params">resData</span>) </span>&#123;</span><br><span class="line"><span class="comment">//请求成功时执行该函数内容，result即为服务器返回的json对象</span></span><br><span class="line"><span class="keyword">if</span> (resData) &#123;</span><br><span class="line">echartPie.hideLoading();</span><br><span class="line">echartGauge.hideLoading();</span><br><span class="line">echartBar.hideLoading();</span><br><span class="line"></span><br><span class="line">resData.online_status[<span class="number">0</span>].name = <span class="built_in">window</span>.parent.languageData.terminalstate_online;</span><br><span class="line">resData.online_status[<span class="number">1</span>].name = <span class="built_in">window</span>.parent.languageData.terminalstate_offline;</span><br><span class="line">echartPie.setOption(&#123;</span><br><span class="line">series: [&#123;</span><br><span class="line">data: resData.online_status</span><br><span class="line">&#125;]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">option.series[<span class="number">0</span>].data[<span class="number">0</span>].value = resData.CPU_usage;</span><br><span class="line">option.series[<span class="number">1</span>].data[<span class="number">0</span>].value = resData.RAM_usage;</span><br><span class="line">echartGauge.setOption(option,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">echartBar.setOption(&#123;</span><br><span class="line">series: [&#123;</span><br><span class="line">data: resData.tasks_status</span><br><span class="line">&#125;]</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">error : <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="comment">//请求失败时执行该函数</span></span><br><span class="line">toastr.error(<span class="built_in">window</span>.parent.languageData.echart_fail, <span class="built_in">window</span>.parent.languageData.common_tip);</span><br><span class="line">echartPie.hideLoading();</span><br><span class="line">echartGauge.hideLoading();</span><br><span class="line">echartBar.hideLoading();</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;,<span class="number">1000</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> Echart </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5中Drag &amp; Drop拖曳效果的用法</title>
      <link href="/2020/02/24/2020-2-24-HTML5-Drag-Drop/"/>
      <url>/2020/02/24/2020-2-24-HTML5-Drag-Drop/</url>
      
        <content type="html"><![CDATA[<h3 id="把图像放在边框中"><a href="#把图像放在边框中" class="headerlink" title="把图像放在边框中"></a>把图像放在边框中</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-id">#div1</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">width</span><span class="selector-pseudo">:198px</span>; </span></span><br><span class="line"><span class="css">        <span class="selector-tag">height</span><span class="selector-pseudo">:66px</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">padding</span><span class="selector-pseudo">:10px</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">border</span><span class="selector-pseudo">:2px</span> <span class="selector-tag">solid</span> <span class="selector-id">#aaaaaa</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>请把图片拖放到矩形中：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span> <span class="attr">ondrop</span>=<span class="string">"drop(event)"</span> <span class="attr">ondragover</span>=<span class="string">"allowDrop(event)"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">"drag1"</span> <span class="attr">width</span>=<span class="string">"100px"</span> <span class="attr">height</span>=<span class="string">"50px"</span> <span class="attr">src</span>=<span class="string">"drag.jpg"</span> <span class="attr">draggable</span>=<span class="string">"true"</span> <span class="attr">ondragstart</span>=<span class="string">"drag(event)"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="function"><span class="keyword">function</span> <span class="title">allowDrop</span> <span class="params">(ev)</span> </span>&#123;</span></span><br><span class="line">        ev.preventDefault();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">      <span class="function"><span class="keyword">function</span> <span class="title">drag</span> <span class="params">(ev)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        ev.dataTransfer.setData(<span class="string">"img"</span>,ev.target.id);</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">      <span class="function"><span class="keyword">function</span> <span class="title">drop</span> <span class="params">(ev)</span> </span>&#123;</span></span><br><span class="line">        ev.preventDefault();</span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> data=ev.dataTransfer.getData(<span class="string">"img"</span>);</span></span><br><span class="line"><span class="javascript">        ev.target.appendChild(<span class="built_in">document</span>.getElementById(data));</span></span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="图片在两个边框之中来回拖放"><a href="#图片在两个边框之中来回拖放" class="headerlink" title="图片在两个边框之中来回拖放"></a>图片在两个边框之中来回拖放</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-id">#div1</span>, <span class="selector-id">#div2</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">float</span><span class="selector-pseudo">:left</span>; </span></span><br><span class="line"><span class="css">      <span class="selector-tag">width</span><span class="selector-pseudo">:198px</span>; </span></span><br><span class="line"><span class="css">      <span class="selector-tag">height</span><span class="selector-pseudo">:66px</span>; </span></span><br><span class="line"><span class="css">      <span class="selector-tag">margin</span><span class="selector-pseudo">:10px</span>;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">padding</span><span class="selector-pseudo">:10px</span>;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-id">#aaaaaa</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span> <span class="attr">ondrop</span>=<span class="string">"drop(event)"</span> <span class="attr">ondragover</span>=<span class="string">"allowDrop(event)"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/i/eg_dragdrop_w3school.gif"</span> <span class="attr">draggable</span>=<span class="string">"true"</span> <span class="attr">ondragstart</span>=<span class="string">"drag(event)"</span> <span class="attr">id</span>=<span class="string">"drag1"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div2"</span> <span class="attr">ondrop</span>=<span class="string">"drop(event)"</span> <span class="attr">ondragover</span>=<span class="string">"allowDrop(event)"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="function"><span class="keyword">function</span> <span class="title">allowDrop</span> <span class="params">(ev)</span> </span>&#123;</span></span><br><span class="line">        ev.preventDefault();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">      <span class="function"><span class="keyword">function</span> <span class="title">drag</span> <span class="params">(ev)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        ev.dataTransfer.setData(<span class="string">"Text"</span>,ev.target.id);</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">      <span class="function"><span class="keyword">function</span> <span class="title">drop</span><span class="params">(ev)</span> </span>&#123;</span></span><br><span class="line">        ev.preventDefault();</span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> data=ev.dataTransfer.getData(<span class="string">"Text"</span>);</span></span><br><span class="line"><span class="javascript">        ev.target.appendChild(<span class="built_in">document</span>.getElementById(data));</span></span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flv.js视频流支持HTML5</title>
      <link href="/2020/02/24/2020-2-24-Flv-js-Streaming-HTML5/"/>
      <url>/2020/02/24/2020-2-24-Flv-js-Streaming-HTML5/</url>
      
        <content type="html"><![CDATA[<h2 id="常见直播协议"><a href="#常见直播协议" class="headerlink" title="常见直播协议"></a>常见直播协议</h2><ul><li>RTMP: 底层基于TCP，在浏览器端依赖Flash。</li><li>HTTP-FLV: 基于HTTP流式IO传输FLV，依赖浏览器支持播放FLV。</li><li>WebSocket-FLV: 基于WebSocket传输FLV，依赖浏览器支持播放FLV。WebSocket建立在HTTP之上，建立WebSocket连接前还要先建立HTTP连接。</li><li>HLS: Http Live Streaming，苹果提出基于HTTP的流媒体传输协议。HTML5可以直接打开播放。</li><li>RTP: 基于UDP，延迟1秒，浏览器不支持。</li></ul><hr><p>常见直播协议延迟与性能数据以下数据只做对比参考</p><table><thead><tr><th>传输协议</th><th>播放器</th><th>延迟</th><th>内存</th><th>CPU</th></tr></thead><tbody><tr><td>RTMP</td><td>Flash</td><td>1s</td><td>430M</td><td>11%</td></tr><tr><td>HTTP-FLV</td><td>Video</td><td>1s</td><td>310M</td><td>4.4%</td></tr><tr><td>HLS</td><td>Video</td><td>20s</td><td>205M</td><td>3%</td></tr></tbody></table><hr><p>在支持浏览器的协议里，延迟排序是：</p><p>++RTMP = HTTP-FLV = WebSocket-FLV &lt; HLS++</p><p>而性能排序恰好相反：</p><p>++RTMP &gt; HTTP-FLV = WebSocket-FLV &gt; HLS++</p><p>也就是说延迟小的性能不好。</p><p><em>可以看出在浏览器里做直播，使用HTTP-FLV协议是不错的，性能优于RTMP+Flash，延迟可以做到和RTMP+Flash一样甚至更好。</em></p><h2 id="flv-js-简介"><a href="#flv-js-简介" class="headerlink" title="flv.js 简介"></a>flv.js 简介</h2><p>flv.js是来自Bilibli的开源项目。它解析FLV文件喂给原生HTML5 Video标签播放音视频数据，使浏览器在不借助Flash的情况下播放FLV成为可能。</p><h2 id="flv-js-限制"><a href="#flv-js-限制" class="headerlink" title="flv.js 限制"></a>flv.js 限制</h2><ul><li>FLV里所包含的视频编码必须是H.264，音频编码必须是AAC或MP3， IE11和Edge浏览器不支持MP3音频编码，所以FLV里采用的编码最好是H.264+AAC，这个让音视频服务兼容不是问题。</li><li>对于录播，依赖 原生HTML5 Video标签 和 Media Source Extensions API</li><li>对于直播，依赖录播所需要的播放技术，同时依赖 HTTP FLV 或者 WebSocket 中的一种协议来传输FLV。其中HTTP FLV需通过流式IO去拉取数据，支持流式IO的有fetch或者stream</li><li>flv.min.js 文件大小 164Kb，gzip后 35.5Kb，flash播放器gzip后差不多也是这么大。</li><li>由于依赖Media Source Extensions，目前所有iOS和Android4.4.4以下里的浏览器都不支持，也就是说目前对于移动端flv.js基本是不能用的。</li></ul><p>flv.js依赖的浏览器特性兼容列表</p><ul><li><a href="http://caniuse.com/#feat=webm" target="_blank" rel="noopener">HTML5 Video</a></li><li><a href="http://caniuse.com/#feat=mediasource" target="_blank" rel="noopener">Media Source Extensions</a></li><li><a href="http://caniuse.com/#feat=websockets" target="_blank" rel="noopener">WebSocket</a></li><li>HTTP FLV: <a href="http://caniuse.com/#feat=fetch" target="_blank" rel="noopener">fetch</a> 或 <a href="http://caniuse.com/#feat=http-live-streaming" target="_blank" rel="noopener">stream</a> </li></ul><h2 id="flv-js-原理"><a href="#flv-js-原理" class="headerlink" title="flv.js 原理"></a>flv.js 原理</h2><p>flv.js只做了一件事，在获取到FLV格式的音视频数据后通过原生的JS去解码FLV数据，再通过<a href="http://caniuse.com/#feat=mediasource" target="_blank" rel="noopener">Media Source Extensions API</a> 喂给原生HTML5 Video标签。(HTML5 原生仅支持播放 mp4/webm 格式，不支持 FLV)</p><p>flv.js 为什么要绕一圈，从服务器获取FLV再解码转换后再喂给Video标签呢？原因如下：</p><ol><li>兼容目前的直播方案：目前大多数直播方案的音视频服务都是采用FLV容器格式传输音视频数据。</li><li>FLV容器格式相比于MP4格式更加简单，解析起来更快更方便。</li></ol><p>由于目前flv.js兼容性还不是很好，要用在产品中必要要兼顾到不支持flv.js的浏览器。兼容方案如下：</p><h2 id="flv-js兼容方案"><a href="#flv-js兼容方案" class="headerlink" title="flv.js兼容方案"></a>flv.js兼容方案</h2><ul><li>PC端</li></ul><ol><li>优先使用 HTTP-FLV，因为它延迟小，性能也不差1080P都很流畅。</li><li>不支持 flv.js 就使用 Flash播放器播 RTMP 流。Flash兼容性很好，但是性能差默认被很多浏览器禁用。</li><li>不想用Flash兼容也可以用HLS，但是PC端只有Safari支持HLS</li></ol><ul><li>移动端</li></ul><ol><li>优先使用 HTTP-FLV，因为它延迟小，支持HTTP-FLV的设备性能运行 flv.js 足够了。</li><li>不支持 flv.js 就使用 HLS，但是 HLS延迟非常大。</li><li>HLS 也不支持就没法直播了，因为移动端都不支持Flash。</li></ol><h2 id="flv-js延迟优化"><a href="#flv-js延迟优化" class="headerlink" title="flv.js延迟优化"></a>flv.js延迟优化</h2><p>按照上面的教程运行起来的直播延迟大概有3秒，经过优化可以到1秒。在教你怎么优化前先要介绍下直播运行流程：</p><ol><li><p>主播端在采集到一段时间的音视频原数据后，因为音视频原数据庞大需要先压缩数据：</p><ul><li>通过H264视频编码压缩数据数据</li><li>通过PCM音频编码压缩音频AAC数据</li><li>压缩完后再通过FLV容器格式封装压缩后的数据，封装成一个FLV TAG</li></ul></li><li><p>再把FLV TAG通过RTMP协议推流到音视频服务器，音视频服务器再从RTMP协议里解析出FLV TAG。</p></li><li><p>音视频服务器再通过HTTP协议通过和浏览器建立的长链接流式把FLV TAG传给浏览器。</p></li><li><p>flv.js 获取FLV TAG后解析出压缩后的音视频数据喂给Video播放。</p></li></ol><p>知道流程后我们就知道从哪入手优化了：</p><ul><li>主播端采集时收集了一段时间的音视频原数据，它专业的叫法是GOP。缩短这个收集时间(也就是减少GOP长度)可以优化延迟，但这样做的坏处是导致视频压缩率不高，传输效率低。</li><li>关闭音视频服务器的I桢缓存可以优化延迟，坏处是用户看到直播首屏的时间变大。</li><li>减少音视频服务器的buffer可以优化延迟，坏处是音视频服务器处理效率降低。</li><li>减少浏览器端flv.js的buffer可以优化延迟，坏处是浏览器端处理效率降低。</li><li>浏览器端开启flv.js的Worker，多线程运行flv.js提升解析速度可以优化延迟，这样做的flv.js配置代码是：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">          enableWorker: <span class="literal">true</span>,</span><br><span class="line">          enableStashBuffer: <span class="literal">false</span>,</span><br><span class="line">          stashInitialSize: <span class="number">128</span>,<span class="comment">// 减少首桢显示等待时长</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完整示例代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"pragma"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"cache-control"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"expires"</span> <span class="attr">content</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, minimum-scale=1.0, maximum-scale=1.0, minimal-ui"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,chrome=1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"x-ua-compatible"</span> <span class="attr">content</span>=<span class="string">"IE=7,9,10"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span> <span class="attr">id</span>=<span class="string">"title"</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello flv<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"play()"</span>&gt;</span>播放<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"pause()"</span>&gt;</span>暂停<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">"videoElement"</span> <span class="attr">height</span>=<span class="string">"500"</span> <span class="attr">width</span>=<span class="string">"1000"</span> <span class="attr">style</span>=<span class="string">"border:thin solid black"</span> <span class="attr">controls</span> <span class="attr">loop</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"flv.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> videoElement = <span class="built_in">document</span>.getElementById(<span class="string">'videoElement'</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> flvPlayer = flvjs.createPlayer(&#123;</span></span><br><span class="line"><span class="actionscript">            isLive:<span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'flv'</span>,</span></span><br><span class="line"><span class="actionscript">            url: <span class="string">'http://localhost:8089/movie'</span>,</span></span><br><span class="line"><span class="actionscript">            enableWorker: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">            enableStashBuffer: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">            stashInitialSize: <span class="number">128</span>    <span class="comment">// 减少首桢显示等待时长</span></span></span><br><span class="line">        &#125;);</span><br><span class="line">        flvPlayer.attachMediaElement(videoElement);</span><br><span class="line">        flvPlayer.load();</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">play</span><span class="params">()</span></span>&#123;</span></span><br><span class="line">            flvPlayer.play();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">pause</span><span class="params">()</span></span>&#123;</span></span><br><span class="line">            flvPlayer.pause();</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> Video </tag>
            
            <tag> Flv.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5拍照,摄像机功能实战</title>
      <link href="/2020/02/23/2020-2-23-Camera-control-in-HTML/"/>
      <url>/2020/02/23/2020-2-23-Camera-control-in-HTML/</url>
      
        <content type="html"><![CDATA[<h2 id="拍照"><a href="#拍照" class="headerlink" title="拍照"></a>拍照</h2><p>HTML5的getUserMedia API为用户提供访问硬件设备媒体（摄像头、视频、音频、地理位置等）的接口，基于该接口，开发者可以在不依赖任何浏览器插件的条件下访问硬件媒体设备。</p><ol><li>获取视频流，并用video标签播放。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;video id=<span class="string">"video"</span> autoplay&gt;&lt;<span class="regexp">/video&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">--------------------------------------------------------------</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">const videoConstraints = &#123; width: 1366, height: 768 &#125;;</span></span><br><span class="line"><span class="regexp">const videoNode = document.querySelector('#video');</span></span><br><span class="line"><span class="regexp">let stream = await navigator.mediaDevices.getUserMedia(&#123; audio: true, video: videoConstraints &#125;);</span></span><br><span class="line"><span class="regexp">videoNode.srcObject = stream;</span></span><br><span class="line"><span class="regexp">videoNode.play();</span></span><br></pre></td></tr></table></figure></li><li>多个摄像头设备，如何切换？</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// enumerateDevices获取所有媒体设备</span></span><br><span class="line"><span class="keyword">const</span> mediaDevices = <span class="keyword">await</span> navigator.mediaDevices.enumerateDevices();</span><br><span class="line"><span class="comment">// 通过设备实例king属性videoinput，过滤获取摄像头设备</span></span><br><span class="line"><span class="keyword">const</span> videoDevices = mediaDevices.filter(<span class="function"><span class="params">item</span> =&gt;</span> item.kind === <span class="string">'videoinput'</span>) || [];</span><br><span class="line"><span class="comment">// 获取前置摄像头</span></span><br><span class="line"><span class="keyword">const</span> videoDeviceId = videoDevices[<span class="number">0</span>].deviceId;</span><br><span class="line"><span class="keyword">const</span> videoConstraints = &#123; <span class="attr">deviceId</span>: &#123; <span class="attr">exact</span>: videoDeviceId &#125;, <span class="attr">width</span>: <span class="number">1366</span>, <span class="attr">height</span>: <span class="number">768</span> &#125;;</span><br><span class="line"><span class="keyword">let</span> stream = <span class="keyword">await</span> navigator.mediaDevices.getUserMedia(&#123; <span class="attr">audio</span>: <span class="literal">true</span>, <span class="attr">video</span>: videoConstraints &#125;);</span><br><span class="line"><span class="comment">// 获取后置摄像头</span></span><br><span class="line"><span class="keyword">const</span> videoDeviceId = videoDevices[<span class="number">1</span>].deviceId;</span><br><span class="line"><span class="keyword">const</span> videoConstraints = &#123; <span class="attr">deviceId</span>: &#123; <span class="attr">exact</span>: videoDeviceId &#125;, <span class="attr">width</span>: <span class="number">1366</span>, <span class="attr">height</span>: <span class="number">768</span> &#125;;</span><br><span class="line"><span class="keyword">let</span> stream = <span class="keyword">await</span> navigator.mediaDevices.getUserMedia(&#123; <span class="attr">audio</span>: <span class="literal">true</span>, <span class="attr">video</span>: videoConstraints &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 依次类推...</span></span><br></pre></td></tr></table></figure><ol start="3"><li>拍照保存图片</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过canvas捕捉video流，生成base64格式图片</span></span><br><span class="line"><span class="keyword">const</span> canvas = <span class="built_in">document</span>.createElement(<span class="string">'canvas'</span>);</span><br><span class="line"><span class="keyword">const</span> context = canvas.getContext(<span class="string">'2d'</span>);</span><br><span class="line">canvas.width = <span class="number">1366</span>;</span><br><span class="line">canvas.height = <span class="number">768</span>;</span><br><span class="line">context.drawImage(videoNode, <span class="number">0</span>, <span class="number">0</span>, canvas.width, canvas.height);</span><br><span class="line">download(canvas.toDataURL(<span class="string">'image/jpeg'</span>));</span><br><span class="line"><span class="comment">// 下载图片</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">download</span> (<span class="params">src</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!src) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">const</span> a = <span class="built_in">document</span>.createElement(<span class="string">'a'</span>);</span><br><span class="line">    a.setAttribute(<span class="string">'download'</span>, <span class="keyword">new</span> <span class="built_in">Date</span>());</span><br><span class="line">    a.href = src;</span><br><span class="line">    a.click();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>关闭摄像头设备</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> stream = <span class="keyword">await</span> navigator.mediaDevices.getUserMedia(&#123; <span class="attr">audio</span>: <span class="literal">true</span>, <span class="attr">video</span>: videoConstraints &#125;);</span><br><span class="line"><span class="comment">// 3s后关闭摄像头</span></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    stream.getTracks().forEach(<span class="function"><span class="params">track</span> =&gt;</span> track.stop());</span><br><span class="line">    stream = <span class="literal">null</span>;</span><br><span class="line">&#125;, <span class="number">3000</span>);</span><br></pre></td></tr></table></figure><p>到此完成简单的相机拍照功能</p><h2 id="摄像"><a href="#摄像" class="headerlink" title="摄像"></a>摄像</h2><p>摄像基本流程，是录制一段视频流并保存为音视频文件。HTML5 MediaRecorder对象提供了多媒体录音和录视频功能。</p><p>==注意：摄像预览播放器video标签要设置静音muted（消除回声导致的刺耳噪音）==</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> videoConstraints = &#123; <span class="attr">width</span>: <span class="number">1366</span>, <span class="attr">height</span>: <span class="number">768</span> &#125;;</span><br><span class="line"><span class="keyword">let</span> stream = <span class="keyword">await</span> navigator.mediaDevices.getUserMedia(&#123; <span class="attr">audio</span>: <span class="literal">true</span>, <span class="attr">video</span>: videoConstraints &#125;);</span><br><span class="line"><span class="keyword">let</span> mediaRecorder = <span class="keyword">new</span> MediaRecorder(stream);</span><br><span class="line"><span class="keyword">let</span> mediaRecorderChunks = []; <span class="comment">// 记录数据流</span></span><br><span class="line">   </span><br><span class="line">mediaRecorder.ondataavailable = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    mediaRecorderChunks.push(e.data);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">mediaRecorder.onstop = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 通过Blob对象，创建文件二进制数据实例。</span></span><br><span class="line">    <span class="keyword">let</span> recorderFile = <span class="keyword">new</span> Blob(mediaRecorderChunks, &#123; <span class="string">'type'</span> : mediaRecorder.mimeType &#125;);</span><br><span class="line">    mediaRecorderChunks = [];</span><br><span class="line">    <span class="keyword">const</span> file = <span class="keyword">new</span> File([<span class="keyword">this</span>.recorderFile], (<span class="keyword">new</span> <span class="built_in">Date</span>).toISOString().replace(<span class="regexp">/:|\./g</span>, <span class="string">'-'</span>) + <span class="string">'.mp4'</span>, &#123;</span><br><span class="line">        type: <span class="string">'video/mp4'</span></span><br><span class="line">    &#125;);</span><br><span class="line">    download(URL.createObjectURL(file));</span><br><span class="line">    <span class="comment">// 下载视频</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">download</span> (<span class="params">src</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!src) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">const</span> a = <span class="built_in">document</span>.createElement(<span class="string">'a'</span>);</span><br><span class="line">        a.setAttribute(<span class="string">'download'</span>, <span class="keyword">new</span> <span class="built_in">Date</span>());</span><br><span class="line">        a.href = src;</span><br><span class="line">        a.click();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">mediaRecorder.stop(); <span class="comment">// 停止录制，触发onstop事件</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> Video </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML中让表单Input等文本框为只读不可编辑的方法</title>
      <link href="/2020/02/22/2020-2-22-ReadOnly-Input-in-HTML/"/>
      <url>/2020/02/22/2020-2-22-ReadOnly-Input-in-HTML/</url>
      
        <content type="html"><![CDATA[<h2 id="HTML中让表单input等文本框为只读不可编辑的方法"><a href="#HTML中让表单input等文本框为只读不可编辑的方法" class="headerlink" title="HTML中让表单input等文本框为只读不可编辑的方法"></a>HTML中让表单input等文本框为只读不可编辑的方法</h2><p>有时候，我们希望表单中的文本框是只读的，让用户不能修改其中的信息，实现的方式归纳一下，有如下几种。 </p><p>方法1: onfocus=this.blur() 当鼠标放不上就离开焦点</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"input1"</span> <span class="attr">value</span>=<span class="string">"中国"</span> <span class="attr">onfocus</span>=<span class="string">this.blur()</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>方法2:readonly</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"input1"</span> <span class="attr">value</span>=<span class="string">"中国"</span> <span class="attr">readonly</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"input1"</span> <span class="attr">value</span>=<span class="string">"中国"</span> <span class="attr">readonly</span>=<span class="string">"true"</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>方法3: disabled</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"input1"</span> <span class="attr">value</span>=<span class="string">"中国"</span> <span class="attr">disabled</span>=<span class="string">"true"</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>完整的例子:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"ly_qq"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">tabindex</span>=<span class="string">"2"</span></span></span><br><span class="line"><span class="tag"><span class="attr">onMouseOver</span>=<span class="string">"this.className='input_1'"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">onMouseOut</span>=<span class="string">"this.className='input_2'"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">value</span>=<span class="string">"123456789"</span> <span class="attr">disabled</span>=<span class="string">"true"</span>　<span class="attr">readOnly</span>=<span class="string">"true"</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li>disabled=”true” 文字会变成灰色，不可编辑。 </li><li>readOnly=”true” 文字不会变色，也是不可编辑的</li></ul><hr><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">css屏蔽输入：<span class="tag">&lt;<span class="name">input</span> <span class="attr">style</span>=<span class="string">"ime-mode: disabled"</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><ul><li>第一：disabled=”disabled”这样定义之后被禁用的 input 元素既不可用，也不可点击。</li><li>第二：readonly=”readonly” 只读字段是不能修改的。不过，用户仍然可以使用 tab 键切换到该字段，还可以选中或拷贝其文本；</li></ul>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IE文字转语音</title>
      <link href="/2020/02/21/2020-2-21-IE-TTS/"/>
      <url>/2020/02/21/2020-2-21-IE-TTS/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>语音播报<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">utf-8</span>"&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"语音播报"</span> <span class="attr">onclick</span>=<span class="string">"listen1();"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"语音播报2"</span> <span class="attr">onclick</span>=<span class="string">"listen2();"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"语音播报3"</span> <span class="attr">onclick</span>=<span class="string">"listen3();"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//每次播报都重新创建对象会导致播放中断或间隔性播放等问题，因此建议只全局创建一次</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> voiceObj = <span class="keyword">new</span> ActiveXObject(<span class="string">"Sapi.SpVoice"</span>);</span></span><br><span class="line">        </span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">listen1</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//朗读</span></span></span><br><span class="line"><span class="actionscript">        voiceObj.Speak(<span class="string">"开始在ie浏览器上朗读文本了"</span>,<span class="number">1</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> handle=voiceObj.SpeakCompleteEvent();</span></span><br><span class="line">        voiceObj.WaitUntilDone(handle);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">listen2</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//朗读</span></span></span><br><span class="line"><span class="actionscript">        voiceObj.Speak(<span class="string">"开始在ie浏览器上朗读文本了"</span>,<span class="number">1</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">listen3</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//语速</span></span></span><br><span class="line">        voiceObj.Rate=-1;</span><br><span class="line"><span class="actionscript">        <span class="comment">//音量</span></span></span><br><span class="line">        voiceObj.Volume=60;</span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> text=<span class="built_in">document</span>.getElementById(<span class="string">"p1"</span>).innerHTML;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//朗读</span></span></span><br><span class="line">        voiceObj.Speak(text,1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> TTS </tag>
            
            <tag> IE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iframe高度调节</title>
      <link href="/2020/02/20/2020-2-20-iframe-height/"/>
      <url>/2020/02/20/2020-2-20-iframe-height/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">startInit(<span class="string">'contextframe'</span>, <span class="number">560</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> browserVersion = <span class="built_in">window</span>.navigator.userAgent.toUpperCase();</span><br><span class="line"><span class="keyword">var</span> isOpera = browserVersion.indexOf(<span class="string">"OPERA"</span>) &gt; <span class="number">-1</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">var</span> isFireFox = browserVersion.indexOf(<span class="string">"FIREFOX"</span>) &gt; <span class="number">-1</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">var</span> isChrome = browserVersion.indexOf(<span class="string">"CHROME"</span>) &gt; <span class="number">-1</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">var</span> isSafari = browserVersion.indexOf(<span class="string">"SAFARI"</span>) &gt; <span class="number">-1</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">var</span> isIE = (!!<span class="built_in">window</span>.ActiveXObject || <span class="string">"ActiveXObject"</span> <span class="keyword">in</span> <span class="built_in">window</span>);</span><br><span class="line"><span class="keyword">var</span> isIE9More = (! -[<span class="number">1</span>, ] == <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reinitIframe</span>(<span class="params">iframeId, minHeight</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> iframe = <span class="built_in">document</span>.getElementById(iframeId);</span><br><span class="line">        <span class="keyword">var</span> sidebar = <span class="built_in">document</span>.getElementById(<span class="string">'sidebar-menu'</span>);</span><br><span class="line">        <span class="keyword">var</span> bHeight = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (isChrome == <span class="literal">false</span> &amp;&amp; isSafari == <span class="literal">false</span>)</span><br><span class="line">            bHeight = iframe.contentWindow.document.body.scrollHeight;</span><br><span class="line">            <span class="keyword">var</span> dHeight = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (isFireFox == <span class="literal">true</span>)</span><br><span class="line">            dHeight = iframe.contentWindow.document.documentElement.offsetHeight + <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (isIE == <span class="literal">false</span> &amp;&amp; isOpera == <span class="literal">false</span>)</span><br><span class="line">            dHeight = iframe.contentWindow.document.documentElement.scrollHeight;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (isIE == <span class="literal">true</span> &amp;&amp; isIE9More) &#123;<span class="comment">//ie9+</span></span><br><span class="line">                <span class="keyword">var</span> heightDeviation = bHeight - <span class="built_in">eval</span>(<span class="string">"window.IE9MoreRealHeight"</span> + iframeId);</span><br><span class="line">                <span class="keyword">if</span> (heightDeviation == <span class="number">0</span>) &#123;</span><br><span class="line">                    bHeight += <span class="number">3</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (heightDeviation != <span class="number">3</span>) &#123;</span><br><span class="line">                    <span class="built_in">eval</span>(<span class="string">"window.IE9MoreRealHeight"</span> + iframeId + <span class="string">"="</span> + bHeight);</span><br><span class="line">                    bHeight += <span class="number">3</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span><span class="comment">//ie[6-8]、OPERA</span></span><br><span class="line">            bHeight += <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">var</span> height = <span class="built_in">Math</span>.max(bHeight, dHeight);</span><br><span class="line">        <span class="keyword">if</span> (height &lt; minHeight) height = minHeight;</span><br><span class="line">        iframe.style.height = height + <span class="string">"px"</span>;</span><br><span class="line">        sidebar.style.height = height + <span class="string">"px"</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ex) &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">startInit</span>(<span class="params">iframeId, minHeight</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">eval</span>(<span class="string">"window.IE9MoreRealHeight"</span> + iframeId + <span class="string">"=0"</span>);</span><br><span class="line">    <span class="built_in">window</span>.setInterval(<span class="string">"reinitIframe('"</span> + iframeId + <span class="string">"',"</span> + minHeight + <span class="string">")"</span>, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">autoWidth</span>(<span class="params">iframe</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (iframe) &#123;</span><br><span class="line">        <span class="keyword">var</span> iframeWin = iframe.contentWindow || iframe.contentDocument.parentWindow;</span><br><span class="line">        <span class="keyword">if</span> (iframeWin.document.body) &#123;</span><br><span class="line">        <span class="comment">//  iframe.height = iframeWin.document.documentElement.scrollHeight || iframeWin.document.body.scrollHeight;</span></span><br><span class="line">            iframe.width = iframeWin.document.documentElement.clientWidth || iframeWin.document.body.clientWidth;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> iframe </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IndexedDB</title>
      <link href="/2020/02/19/2020-2-19-IndexedDB/"/>
      <url>/2020/02/19/2020-2-19-IndexedDB/</url>
      
        <content type="html"><![CDATA[<h1 id="IndexedDB"><a href="#IndexedDB" class="headerlink" title="IndexedDB"></a>IndexedDB</h1><p>随着浏览器的功能不断增强，越来越多的网站开始考虑，将大量数据储存在客户端，这样可以减少从服务器获取数据，直接从本地获取数据。</p><p>现有的浏览器数据储存方案，都不适合储存大量数据：Cookie 的大小不超过 4KB，且每次请求都会发送回服务器；LocalStorage 在 2.5MB 到 10MB 之间（各家浏览器不同），而且不提供搜索功能，不能建立自定义的索引。所以，需要一种新的解决方案，这就是 IndexedDB 诞生的背景。</p><p>通俗地说，IndexedDB 就是浏览器提供的本地数据库，它可以被网页脚本创建和操作。IndexedDB 允许储存大量数据，提供查找接口，还能建立索引。这些都是 LocalStorage 所不具备的。就数据库类型而言，IndexedDB 不属于关系型数据库（不支持 SQL 查询语句），更接近 NoSQL 数据库。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> <span class="title">IIFE</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="built_in">window</span>.indexedDB)&#123;</span><br><span class="line">        alert(<span class="string">'your browser is not support indexedDB!'</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> request = <span class="built_in">window</span>.indexedDB.open(<span class="string">'person'</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">var</span> db;</span><br><span class="line">    request.onerror = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'数据库打开报错'</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">    request.onsuccess = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">        db = request.result;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'数据库打开成功'</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">    request.onupgradeneeded = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'onupgradeneeded...'</span>);</span><br><span class="line">        db = event.target.result;</span><br><span class="line">        <span class="keyword">var</span> objectStore = db.createObjectStore(<span class="string">'person'</span>, &#123; <span class="attr">keyPath</span>: <span class="string">'id'</span> &#125;);</span><br><span class="line">        objectStore.createIndex(<span class="string">'name'</span>, <span class="string">'name'</span>, &#123; <span class="attr">unique</span>: <span class="literal">false</span> &#125;);</span><br><span class="line">        objectStore.createIndex(<span class="string">'email'</span>, <span class="string">'email'</span>, &#123; <span class="attr">unique</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> request = db.transaction([<span class="string">'person'</span>], <span class="string">'readwrite'</span>)</span><br><span class="line">            .objectStore(<span class="string">'person'</span>)</span><br><span class="line">            .add(obj)</span><br><span class="line">            <span class="comment">//.add(&#123; id: 1, name: 'ccy', age: 18, email: 'test@example.com' &#125;);</span></span><br><span class="line"></span><br><span class="line">        request.onsuccess = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'数据写入成功'</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        request.onerror = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'数据写入失败'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params">index</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> transaction = db.transaction([<span class="string">'person'</span>]);</span><br><span class="line">        <span class="keyword">var</span> objectStore = transaction.objectStore(<span class="string">'person'</span>);</span><br><span class="line">        <span class="keyword">var</span> request = objectStore.get(index);</span><br><span class="line">        request.onerror = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'事务失败'</span>);</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        request.onsuccess = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (request.result) &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'Name: '</span> + request.result.name);</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'Age: '</span> + request.result.age);</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'Email: '</span> + request.result.email);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'未获得数据记录'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">readAll</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> objectStore = db.transaction(<span class="string">'person'</span>).objectStore(<span class="string">'person'</span>);</span><br><span class="line">        objectStore.openCursor().onsuccess = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> cursor = event.target.result;</span><br><span class="line">            <span class="keyword">if</span> (cursor) &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'Id: '</span> + cursor.key);</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'Name: '</span> + cursor.value.name);</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'Age: '</span> + cursor.value.age);</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'Email: '</span> + cursor.value.email);</span><br><span class="line">                cursor.continue();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'没有更多数据了！'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> request = db.transaction([<span class="string">'person'</span>], <span class="string">'readwrite'</span>)</span><br><span class="line">            .objectStore(<span class="string">'person'</span>)</span><br><span class="line">            .put(obj)</span><br><span class="line">            <span class="comment">//.put(&#123; id: 1, name: '李四', age: 35, email: 'lisi@example.com' &#125;);</span></span><br><span class="line"></span><br><span class="line">        request.onsuccess = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'数据更新成功'</span>);</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        request.onerror = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'数据更新失败'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">remove</span>(<span class="params">index</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> request = db.transaction([<span class="string">'person'</span>], <span class="string">'readwrite'</span>)</span><br><span class="line">            .objectStore(<span class="string">'person'</span>)</span><br><span class="line">            .delete(index);</span><br><span class="line"></span><br><span class="line">        request.onsuccess = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'数据删除成功'</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">window</span>.util = &#123;</span><br><span class="line">        add: add,</span><br><span class="line">        read: read,</span><br><span class="line">        readAll: readAll,</span><br><span class="line">        update: update,</span><br><span class="line">        remove: remove,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IndexedDB </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS设备上iframe的宽度会扩大的解决办法</title>
      <link href="/2020/02/18/2020-2-18-iframe-width-bug-in-ios/"/>
      <url>/2020/02/18/2020-2-18-iframe-width-bug-in-ios/</url>
      
        <content type="html"><![CDATA[<h5 id="解决办法，就是在iframe加载完成后，设置-iframe里面body的宽度为多少PX。"><a href="#解决办法，就是在iframe加载完成后，设置-iframe里面body的宽度为多少PX。" class="headerlink" title="解决办法，就是在iframe加载完成后，设置 iframe里面body的宽度为多少PX。"></a>解决办法，就是在iframe加载完成后，设置 iframe里面body的宽度为多少PX。</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#iframe1"</span>)[<span class="number">0</span>].onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    iosIframeWidthBug();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*修复ios iframe width bug*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">iosIframeWidthBug</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//不是 iphone ipad就不执行了</span></span><br><span class="line">    <span class="keyword">if</span> (!navigator.userAgent.match(<span class="regexp">/iPad|iPhone/i</span>))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//获取子iframe</span></span><br><span class="line">        <span class="keyword">var</span> iframebody = <span class="built_in">document</span>.getElementById(<span class="string">'iframe1'</span>).contentWindow.document.body;</span><br><span class="line">        iframebody.style.width = <span class="built_in">document</span>.body.clientWidth+<span class="string">'px'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> iframe </tag>
            
            <tag> iOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iView的表格如何单击这行就选中</title>
      <link href="/2020/02/17/2020-2-17-iView-selected-one-row/"/>
      <url>/2020/02/17/2020-2-17-iView-selected-one-row/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Table</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">border</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">ref</span>=<span class="string">"table"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">:columns</span>=<span class="string">"columns"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">:data</span>=<span class="string">"list"</span> </span></span><br><span class="line"><span class="tag">    @<span class="attr">on-row-click</span>=<span class="string">"rowClick"</span> </span></span><br><span class="line"><span class="tag">    @<span class="attr">on-selection-change</span>=<span class="string">"SelectGoods"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Table</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rowClick(data,index)&#123;</span><br><span class="line">    <span class="keyword">this</span>.$refs.table.toggleSelect(index);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> Vue.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> iView </tag>
            
            <tag> Vue.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery.pep.js</title>
      <link href="/2020/02/16/2020-2-16-jQuery-pep-js/"/>
      <url>/2020/02/16/2020-2-16-jQuery-pep-js/</url>
      
        <content type="html"><![CDATA[<h1 id="jQuery-pep"><a href="#jQuery-pep" class="headerlink" title="jQuery.pep"></a>jQuery.pep</h1><h2 id="Getting-Started"><a href="#Getting-Started" class="headerlink" title="Getting Started"></a>Getting Started</h2><p>Getting started is simple: include jQuery, include pep, then:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'.pep'</span>).pep(); <span class="comment">// yup, that simple.</span></span><br></pre></td></tr></table></figure><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>Pep has many options. Here they are in their entirety, with their defaults. </p><table><thead><tr><th>Name</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>initiate</td><td><code>function(){}</code></td><td>[≘ touchstart/mousedown] called when first touch / click event is triggered on the object</td></tr><tr><td>start</td><td><code>function(){}</code></td><td>called when dragging starts; when <code>dx</code> or <code>dy</code> are greater than <code>startThreshold[0]</code> or <code>startThreshold[1]</code></td></tr><tr><td>drag</td><td><code>function(){}</code></td><td>[≘ touchmove/mousemove] called continuously while the object is dragging</td></tr><tr><td>stop</td><td><code>function(){}</code></td><td>[≘ touchend/mouseup] called when dragging stops</td></tr><tr><td>easing</td><td><code>function(){}</code></td><td>called while object is easing</td></tr><tr><td>rest</td><td><code>function(){}</code></td><td>called after dragging stops, and object has come to rest</td></tr><tr><td>moveTo</td><td><code>false</code></td><td>custom method to override the default moveTo functionality.</td></tr><tr><td>callIfNotStarted</td><td><code>[&#39;stop&#39;, &#39;rest&#39;]</code></td><td>if object has <em>not</em> moved outside of the <code>startThreshold</code>, call either the user-provided <code>stop</code> or <code>rest</code> fxn’s anyway, or call both</td></tr><tr><td>startThreshold</td><td><code>[0,0]</code></td><td>how far past should the object move in the [x,y] direction before user ‘start’ function is called</td></tr><tr><td>grid</td><td><code>[0,0]</code></td><td>define an [x,y] grid for the object to move along</td></tr><tr><td>revert</td><td><code>false</code></td><td>revert back to initial position</td></tr><tr><td>revertAfter</td><td><code>stop</code></td><td>revert after given event - <code>&#39;stop&#39;</code> or <code>&#39;ease&#39;</code></td></tr><tr><td>revertIf</td><td><code>function(){ return true; }</code></td><td>return <code>false</code> / <code>true</code> from this function to conditionally revert an object</td></tr><tr><td>droppable</td><td><code>false</code></td><td>CSS selector that this element can be dropped on, false to disable</td></tr><tr><td>droppableActiveClass</td><td><code>&#39;pep-dpa&#39;</code></td><td>class to add to active droppable parents, default to pep-dpa (droppable parent active); inspect <code>this.activeDropRegions</code> within each function for valuable info</td></tr><tr><td>overlapFunction</td><td><code>false</code></td><td>override pep’s default overlap function; takes two args: a &amp; b and returns true if they overlap</td></tr><tr><td>cssEaseString</td><td><em>cubic-bezier(0.190, 1.000, 0.220, 1.000)</em></td><td>get more css ease params from [ <a href="http://matthewlein.com/ceaser/" target="_blank" rel="noopener">http://matthewlein.com/ceaser/</a> ]</td></tr><tr><td>cssEaseDuration</td><td><code>750</code></td><td>how long should it take (in ms) for the object to get from stop to rest?</td></tr><tr><td>constrainTo</td><td><code>false</code></td><td>constrain object to <code>&#39;window&#39;</code> or <code>&#39;parent&#39;</code> or <code>[top, right, bottom, left]</code>; works best w/ useCSSTranslation set to false</td></tr><tr><td>axis</td><td><code>null</code></td><td>constrain object to either ‘x’ or ‘y’ axis</td></tr><tr><td>debug</td><td><code>false</code></td><td>show debug values and events in the lower-righthand corner of page</td></tr><tr><td>activeClass</td><td><code>&#39;pep-active&#39;</code></td><td>class to add to the pep element while dragging</td></tr><tr><td>multiplier</td><td><code>1</code></td><td>+/- this number to modify to 1:1 ratio of finger/mouse movement to el movement</td></tr><tr><td>velocityMultiplier</td><td><code>1.9</code></td><td>+/- this number to modify the springiness of the object as your release it</td></tr><tr><td>shouldPreventDefault</td><td><code>true</code></td><td>in some cases, we don’t want to prevent the default mousedown/touchstart on our Pep object, your call</td></tr><tr><td>allowDragEventPropagation</td><td><code>true</code></td><td>set to false to stop drag events from bubbling up through the DOM tree</td></tr><tr><td>stopEvents</td><td><code>&#39;&#39;</code></td><td>space delimited set of events which programmatically cause the object to stop</td></tr><tr><td>hardwareAccelerate</td><td><code>true</code></td><td>apply the CSS3 silver bullet method to accelerate the pep object: <a href="http://indiegamr.com/ios6-html-hardware-acceleration-changes-and-how-to-fix-them/" target="_blank" rel="noopener">http://indiegamr.com/ios6-html-hardware-acceleration-changes-and-how-to-fix-them/</a></td></tr><tr><td>useCSSTranslation</td><td><code>true</code></td><td>use CSS transform translations as opposed to top/left</td></tr><tr><td>disableSelect</td><td><code>true</code></td><td>apply <code>user-select: none</code> (CSS) to the object</td></tr><tr><td>removeMargins</td><td><code>true</code></td><td>remove margins for better object placement</td></tr><tr><td>shouldEase</td><td><code>true</code></td><td>disable/enable easing</td></tr><tr><td>place</td><td><code>true</code></td><td>bypass pep’s object placement logic</td></tr><tr><td>deferPlacement</td><td><code>false</code></td><td>defer object placement until start event occurs</td></tr><tr><td>forceNonCSS3Movement</td><td><code>false</code></td><td>DO NOT USE: this is subject to come/go. Use at your own risk</td></tr><tr><td>elementsWithInteraction</td><td><code>&#39;input&#39;</code></td><td>valid CSS/jQuery selector for elements within the Pep object that should allow user interaction, and thus propagate to allow movement</td></tr><tr><td>ignoreRightClick</td><td><code>true</code></td><td>start event will be ignored if triggered by a right click</td></tr><tr><td>startPos</td><td><code>{ left: null, top: null }</code></td><td>set the default left/top coordinate to position the object with on load</td></tr><tr><td>useBoundingClientRect</td><td><code>false</code></td><td>use <a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect" target="_blank" rel="noopener">getBoundingClientRect()</a> to retrieve element dimensions instead of jQuery’s .outerWidth() &amp; .outerHeight() (useful when your element is scaled via CSS transforms)</td></tr></tbody></table><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Toggle functionality of all Pep objects on the page</span></span><br><span class="line">$.pep.toggleAll()</span><br><span class="line"></span><br><span class="line"><span class="comment">// Explicitly disable all Pep objects on the page</span></span><br><span class="line">$.pep.toggleAll(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Explicitly enable all Pep objects on the page</span></span><br><span class="line">$.pep.toggleAll(<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Unbind Pep completely from the object</span></span><br><span class="line"><span class="keyword">var</span> $pep = $(<span class="string">'.pep'</span>);</span><br><span class="line">$pep.pep();               <span class="comment">// bind</span></span><br><span class="line">$.pep.unbind( $pep );     <span class="comment">// unbind</span></span><br><span class="line">$pep.pep();               <span class="comment">// bind</span></span><br><span class="line"><span class="string">`</span></span><br></pre></td></tr></table></figure><h2 id="Class-Applications"><a href="#Class-Applications" class="headerlink" title="Class Applications"></a>Class Applications</h2><p>The following classes are applied corresponding to events that are happening on the pep object:</p><ul><li><code>pep-active</code> – applied when initiate event is triggered; removed when ease has finished</li><li><code>pep-start</code> – applied when start event is triggered; removed when stop event occurs</li><li><code>pep-ease</code> – applied when stop event is triggered; removed when ease has finished</li></ul><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p><strong>Via Bower</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bower install jquery.pep</span><br><span class="line">`</span><br></pre></td></tr></table></figure><p><strong>From CDN</strong></p><p>Bleeding edge, development version:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;rawgithub.com&#x2F;briangonzalez&#x2F;jquery.pep.js&#x2F;master&#x2F;src&#x2F;jquery.pep.js</span><br></pre></td></tr></table></figure><h2 id="A-note-on-droppable-option"><a href="#A-note-on-droppable-option" class="headerlink" title="A note on droppable option"></a>A note on <code>droppable</code> option</h2><p>There is a convenience object within the context of each function pep makes available (drag, rest, ease, etc.) called <code>activeDropRegions</code>, which is an array of jQuery objects that the pep object is currently “over”.</p><p><strong>Example:</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'.pep'</span>).pep(&#123;</span><br><span class="line">  droppable:   <span class="string">'.drop-target'</span>,</span><br><span class="line">  drag: <span class="function"><span class="keyword">function</span>(<span class="params">ev, obj</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'There are '</span> + <span class="keyword">this</span>.activeDropRegions.length + <span class="string">'active drop regions.'</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  revert: <span class="literal">true</span>,</span><br><span class="line">  revertIf: <span class="function"><span class="keyword">function</span>(<span class="params">ev, obj</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> !<span class="keyword">this</span>.activeDropRegions.length;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><p>Checkout the examples in the <code>demos</code> folder, which cover a wide array of test cases and options. Or you can check out other examples at <a href="http://pep.briangonzalez.org/" target="_blank" rel="noopener">http://pep.briangonzalez.org/</a> (which can also be found in more detail on Codepen: <a href="http://codepen.io/briangonzalez/tag/pep-demo" target="_blank" rel="noopener">http://codepen.io/briangonzalez/tag/pep-demo</a>)</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> jQuery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> jQuery </tag>
            
            <tag> pep.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery将表单序列化成一个Object对象的实例</title>
      <link href="/2020/02/15/2020-2-15-jQuery-JSON-to-Object/"/>
      <url>/2020/02/15/2020-2-15-jQuery-JSON-to-Object/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>)</span>&#123; </span><br><span class="line">  $.fn.extend(&#123; </span><br><span class="line">    serializeObject:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span><br><span class="line">      <span class="keyword">if</span>(<span class="keyword">this</span>.length&gt;<span class="number">1</span>)&#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line">      &#125; </span><br><span class="line">      <span class="keyword">var</span> arr=<span class="keyword">this</span>.serializeArray(); </span><br><span class="line">      <span class="keyword">var</span> obj=<span class="keyword">new</span> <span class="built_in">Object</span>; </span><br><span class="line">      $.each(arr,<span class="function"><span class="keyword">function</span>(<span class="params">k,v</span>)</span>&#123; </span><br><span class="line">        obj[v.name]=v.value; </span><br><span class="line">      &#125;); </span><br><span class="line">      <span class="keyword">return</span> obj; </span><br><span class="line">    &#125; </span><br><span class="line">  &#125;); </span><br><span class="line">&#125;)(jQuery); </span><br><span class="line"></span><br><span class="line">$(<span class="string">":button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> test=$(<span class="string">"form"</span>).serializeObject();</span><br><span class="line">  alert(test.id);     </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">value</span>=<span class="string">"110"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"test"</span> <span class="attr">type</span>=<span class="string">"text"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">type</span>=<span class="string">"button"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> JSON </category>
          
          <category> jQuery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> JSON </tag>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery里面获取宽度,高度,x,y坐标</title>
      <link href="/2020/02/14/2020-2-14-jQuery-get-height-x-y/"/>
      <url>/2020/02/14/2020-2-14-jQuery-get-height-x-y/</url>
      
        <content type="html"><![CDATA[<h3 id="jQuery里面获取div区块的宽度与高度"><a href="#jQuery里面获取div区块的宽度与高度" class="headerlink" title="jQuery里面获取div区块的宽度与高度"></a>jQuery里面获取div区块的宽度与高度</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">获取宽度</span><br><span class="line">$(<span class="string">'div'</span>).width();             获取：区块的本身宽度</span><br><span class="line">$(<span class="string">'div'</span>).outerWidth();        获取：区块的宽度+padding宽度+border宽度</span><br><span class="line">$(<span class="string">'div'</span>).outerWidth(<span class="literal">true</span>);    获取：区块的宽度+padding宽度+border宽度+margin的宽度</span><br><span class="line"></span><br><span class="line">获取高度</span><br><span class="line">$(<span class="string">'div'</span>).height();            获取：区块的本身高度</span><br><span class="line">$(<span class="string">'div'</span>).outerHeight();       获取：区块的高度+padding高度+border高度</span><br><span class="line">$(<span class="string">'div'</span>).outerHeight(<span class="literal">true</span>);   获取：区块的高度+padding高度+border高度+margin的高度</span><br></pre></td></tr></table></figure><h3 id="JQuery-获得div绝对-相对位置的坐标方法"><a href="#JQuery-获得div绝对-相对位置的坐标方法" class="headerlink" title="JQuery 获得div绝对,相对位置的坐标方法"></a>JQuery 获得div绝对,相对位置的坐标方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">获取页面某一元素的绝对X,Y坐标</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> X = $(<span class="string">'#DivID'</span>).offset().top;</span><br><span class="line"><span class="keyword">var</span> Y = $(<span class="string">'#DivID'</span>).offset().left;</span><br><span class="line"></span><br><span class="line">获取相对(父元素)位置</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> X = $(<span class="string">'#DivID'</span>).position().top;</span><br><span class="line"><span class="keyword">var</span> Y = $(<span class="string">'#DivID'</span>).position().left;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">onmousemove=<span class="string">"getCoords(event, this)"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCoords</span>(<span class="params">ev,obj</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> width = $(<span class="string">'#scenes'</span>).width(); </span><br><span class="line"><span class="keyword">var</span> height = $(<span class="string">'#scenes'</span>).height();</span><br><span class="line"><span class="keyword">var</span> x = ev.clientX-obj.offsetLeft;</span><br><span class="line">    <span class="keyword">var</span> y = ev.clientY-obj.offsetTop;</span><br><span class="line"><span class="keyword">var</span> coord_x = (x/width*<span class="number">100</span>).toFixed(<span class="number">2</span>) + <span class="string">'%'</span>;</span><br><span class="line"><span class="keyword">var</span> coord_y = (y/height*<span class="number">100</span>).toFixed(<span class="number">2</span>)+ <span class="string">'%'</span>;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'coord_x'</span>).value = coord_x;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'coord_y'</span>).value = coord_y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> jQuery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSON Schema 验证</title>
      <link href="/2020/02/13/2020-2-13-JSON-Schema-Validator/"/>
      <url>/2020/02/13/2020-2-13-JSON-Schema-Validator/</url>
      
        <content type="html"><![CDATA[<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"$schema"</span>: <span class="string">"http://json-schema.org/draft-06/schema#"</span>,  <span class="comment">//schema验证版本</span></span><br><span class="line">  <span class="attr">"title"</span>: <span class="string">"Cat"</span>,   <span class="comment">//json标题</span></span><br><span class="line">  <span class="attr">"properties"</span>: &#123;   <span class="comment">//数据包含属性</span></span><br><span class="line">    <span class="attr">"name"</span>: &#123;</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"string"</span>, <span class="comment">//数据类型</span></span><br><span class="line">      <span class="attr">"minLength"</span>: <span class="number">8</span>,   <span class="comment">//数据长度最短范围</span></span><br><span class="line">      <span class="attr">"maxLength"</span>: <span class="number">10</span>   <span class="comment">//数据长度最长范围</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"age"</span>: &#123;</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"number"</span>,</span><br><span class="line">      <span class="attr">"description"</span>: <span class="string">"your cat's age in years"</span>,</span><br><span class="line">      <span class="attr">"minimum"</span>: <span class="number">0</span>,    <span class="comment">//数据最小值</span></span><br><span class="line">      <span class="attr">"minimum"</span>: <span class="number">5</span>    <span class="comment">//数据最大值</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"declawed"</span>: &#123;</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"boolean"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"description"</span>: &#123;</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"string"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"required"</span>: [  <span class="comment">//必须有的数据</span></span><br><span class="line">    <span class="string">"name"</span>,</span><br><span class="line">    <span class="string">"age"</span>,</span><br><span class="line">    <span class="string">"declawed"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://jsonschemalint.com/" target="_blank" rel="noopener">json schema lint</a></p>]]></content>
      
      
      <categories>
          
          <category> JSON </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JSON </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS中单双竖线运算符的使用</title>
      <link href="/2020/02/12/2020-2-12-JS-symbol-control/"/>
      <url>/2020/02/12/2020-2-12-JS-symbol-control/</url>
      
        <content type="html"><![CDATA[<ul><li><ol><li>Math.ceil()用作向上取整。</li></ol></li><li><ol start="2"><li>Math.floor()用作向下取整。</li></ol></li><li><ol start="3"><li>Math.round() 我们数学中常用到的四舍五入取整。</li></ol></li></ul><h5 id="1、单竖杠“-”运算"><a href="#1、单竖杠“-”运算" class="headerlink" title="1、单竖杠“|”运算"></a>1、单竖杠“|”运算</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">3</span>|<span class="number">4</span>); <span class="comment">//7</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">4</span>|<span class="number">4</span>);<span class="comment">//4</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">8</span>|<span class="number">3</span>);<span class="comment">//11</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">5.3</span>|<span class="number">4.1</span>);<span class="comment">//5</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">9</span>|<span class="number">3455</span>);<span class="comment">//3455</span></span><br></pre></td></tr></table></figure><blockquote><p>3|4<br>转换为二进制之后011|100  相加得到111=7</p></blockquote><blockquote><p>4|4<br>转换为二进制之后100 |100  相加得到100=4</p></blockquote><blockquote><p>8|3<br>转换为二进制之后1000 |011  相加得到1011=11</p></blockquote><blockquote><p>==单竖杠“|”运算就是转换为2进制之后相加得到的结果==</p></blockquote><h5 id="2、双竖杠“-”运算"><a href="#2、双竖杠“-”运算" class="headerlink" title="2、双竖杠“||”运算"></a>2、双竖杠“||”运算</h5><ul><li>1、JS双竖线运算符:是或比较.如null||’1’,返回’1’;’2’||’1’,返回’2’.即或运算符中,第一个为真,后面的就不用计算了.所以得’2’。</li><li>2、js 中 使用双竖线运算符”||”,返回第一个有效值</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> objOne = <span class="literal">undefined</span> || <span class="number">1</span> || <span class="literal">null</span> || <span class="keyword">new</span> <span class="built_in">Date</span>(); </span><br><span class="line"><span class="keyword">var</span> objTwo = <span class="keyword">new</span> <span class="built_in">Date</span>(); </span><br><span class="line"><span class="keyword">var</span> objThree = objOne || objTwo; </span><br><span class="line">alert(objThree.toString()); <span class="comment">//out put "1"</span></span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h4 id="性能上的比较"><a href="#性能上的比较" class="headerlink" title="性能上的比较"></a>性能上的比较</h4><p>逻辑运算符&amp;&amp; || 中，如果&amp;&amp;的第一个运算数是false，就不再考虑第二个运算数，直接返回false；</p><p>如果||的第一个运算数是true，也不再考虑第二个运算数，直接返回true。</p><p>而&amp;和|运算符却不是这样的，它们总是要比较两个运算数才得出结果，因而性能上&amp;&amp;和||会比&amp;和|好。</p><h4 id="功能用法"><a href="#功能用法" class="headerlink" title="功能用法"></a>功能用法</h4><p>&amp;&amp;和||只能进行逻辑运算，而&amp;和|除了可以进行”逻辑运算”外，还可以进行位运算</p><h4 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h4><p>&amp;和|本是位运算符，之所以可以进行”逻辑运算”，是由于JS是无类型的语言、各数据类型可以自由转换这一特性决定的，当用&amp;和|进行”逻辑运算”时，实际上true被转换成1，false被转换成0，再进行逐位运算</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(<span class="literal">true</span> &amp; <span class="literal">false</span>); <span class="comment">//JS，结果为0</span></span><br></pre></td></tr></table></figure><p>上面这句，实例等同于逻辑运算被转化成下面的位运算，并执行：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(<span class="number">1</span> &amp; <span class="number">0</span>); <span class="comment">//JS，结果为0</span></span><br></pre></td></tr></table></figure><p>也正是由于&amp;和|是逐位运算符，才出现了第一点中所说的，它们总是要比较两个运算数才得出结果，才导致性能会比&amp;&amp;和||低一些。</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> Math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS控制全屏</title>
      <link href="/2020/02/11/2020-2-11-JS-fullscreen/"/>
      <url>/2020/02/11/2020-2-11-JS-fullscreen/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"fullscreen_btn"</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"fullScreen"</span> <span class="attr">class</span>=<span class="string">"btn btn-link"</span> <span class="attr">onclick</span>=<span class="string">"fullscreen()"</span> &gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-expand fa-2x"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!!<span class="built_in">window</span>.ActiveXObject || <span class="string">"ActiveXObject"</span> <span class="keyword">in</span> <span class="built_in">window</span>) &#123;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'fullscreen_btn'</span>).style.display = <span class="string">'none'</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'fullscreen_btn'</span>).style.display = <span class="string">''</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">"fullscreenchange"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  </span><br><span class="line">    fullscreenState.innerHTML = (<span class="built_in">document</span>.fullscreen) ? <span class="string">""</span> : <span class="string">"not "</span>;  </span><br><span class="line">&#125;, <span class="literal">false</span>);  </span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">"mozfullscreenchange"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  </span><br><span class="line">    fullscreenState.innerHTML = (<span class="built_in">document</span>.mozFullScreen) ? <span class="string">""</span> : <span class="string">"not "</span>;  </span><br><span class="line">&#125;, <span class="literal">false</span>);  </span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">"webkitfullscreenchange"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  </span><br><span class="line">    fullscreenState.innerHTML = (<span class="built_in">document</span>.webkitIsFullScreen) ? <span class="string">""</span> : <span class="string">"not "</span>;  </span><br><span class="line">&#125;, <span class="literal">false</span>);  </span><br><span class="line">  </span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">"msfullscreenchange"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  </span><br><span class="line">fullscreenState.innerHTML = (<span class="built_in">document</span>.msFullscreenElement) ? <span class="string">""</span> : <span class="string">"not "</span>;  </span><br><span class="line">&#125;, <span class="literal">false</span>); </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fullscreen</span>(<span class="params"></span>) </span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">document</span>.fullscreen || <span class="built_in">document</span>.mozFullScreen || <span class="built_in">document</span>.webkitIsFullScreen || <span class="built_in">document</span>.msFullscreenElement)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">document</span>.exitFullscreen) &#123;  </span><br><span class="line">        <span class="built_in">document</span>.exitFullscreen();  </span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.mozCancelFullScreen) &#123;  </span><br><span class="line">        <span class="built_in">document</span>.mozCancelFullScreen();  </span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.webkitCancelFullScreen) &#123;  </span><br><span class="line">        <span class="built_in">document</span>.webkitCancelFullScreen();  </span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.msExitFullscreen) &#123;  </span><br><span class="line">        <span class="built_in">document</span>.msExitFullscreen();  </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'fullScreen'</span>).innerHTML = <span class="string">'&lt;i class="fa fa-expand fa-2x"&gt;&lt;/i&gt;'</span>;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'fullScreen'</span>).title = <span class="built_in">window</span>.parent.languageData.main_fullscreen;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> docElm = <span class="built_in">document</span>.documentElement;  </span><br><span class="line">    <span class="comment">//W3C   </span></span><br><span class="line">    <span class="keyword">if</span> (docElm.requestFullscreen) &#123;  </span><br><span class="line">    docElm.requestFullscreen();  </span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (docElm.mozRequestFullScreen) &#123;  </span><br><span class="line">    docElm.mozRequestFullScreen();  </span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (docElm.webkitRequestFullScreen) &#123;  </span><br><span class="line">    docElm.webkitRequestFullScreen();  </span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (elem.msRequestFullscreen) &#123;  </span><br><span class="line">    elem.msRequestFullscreen();  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'fullScreen'</span>).innerHTML = <span class="string">'&lt;i class="fa fa-compress fa-2x"&gt;&lt;/i&gt;'</span>;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'fullScreen'</span>).title = <span class="built_in">window</span>.parent.languageData.main_exitfullscreen;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS清除浏览器缓存的几种方法</title>
      <link href="/2020/02/10/2020-2-10-JS-cache-clean/"/>
      <url>/2020/02/10/2020-2-10-JS-cache-clean/</url>
      
        <content type="html"><![CDATA[<h2 id="一、CSS和JS为什么带参数（形如-css-t-与-js-t-）怎样获取代码"><a href="#一、CSS和JS为什么带参数（形如-css-t-与-js-t-）怎样获取代码" class="headerlink" title="一、CSS和JS为什么带参数（形如.css?t=与.js?t=）怎样获取代码"></a>一、CSS和JS为什么带参数（形如.css?t=与.js?t=）怎样获取代码</h2><p>css和js带参数（形如.css?t=与.js?t=）<br>使用参数有两种可能： </p><ul><li>第一、脚本并不存在，而是服务端动态生成的，因此带了个版本号，以示区别。 即上面代码对于文件来说 等价于 但浏览器会认为他是 该文件的某个版本！ </li><li>第二、客户端会缓存这些css或js文件，因此每次升级了js或css文件后，改变版本号，客户端浏览器就会重新下载新的js或css文件 ，刷性缓存的作用。 </li></ul><p>第二种情况最多，也可能两种同时存在。<br>版本号，可以是一个随机数，也可以是一个递增的值，大版本小版本的方式，或者根据脚本的生成时间书写，比如就是精确到了生成脚本的秒，而 2.3.3 就是大版本小版本的方式。</p><h2 id="二、关于浏览器缓存"><a href="#二、关于浏览器缓存" class="headerlink" title="二、关于浏览器缓存"></a>二、关于浏览器缓存</h2><p>浏览器缓存，有时候我们需要他，因为他可以提高网站性能和浏览器速度，提高网站性能。但是有时候我们又不得不清除缓存，因为缓存可能误事，出现一些错误的数据。像股票类网站实时更新等，这样的网站是不要缓存的，像有的网站很少更新，有缓存还是比较好的。</p><p>今天主要介绍清除缓存的几种方法。</p><ul><li>meta方法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">META</span> <span class="attr">HTTP-EQUIV</span>=<span class="string">"pragma"</span> <span class="attr">CONTENT</span>=<span class="string">"no-cache"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">META</span> <span class="attr">HTTP-EQUIV</span>=<span class="string">"Cache-Control"</span> <span class="attr">CONTENT</span>=<span class="string">"no-cache, must-revalidate"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">META</span> <span class="attr">HTTP-EQUIV</span>=<span class="string">"expires"</span> <span class="attr">CONTENT</span>=<span class="string">"0"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>清理form表单的临时缓存 </li></ul><ol><li>方式一：用ajax请求服务器最新文件，并加上请求头If-Modified-Since和Cache-Control,如下:</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">     url:<span class="string">'www.haorooms.com'</span>,</span><br><span class="line">     dataType:<span class="string">'json'</span>,</span><br><span class="line">     data:&#123;&#125;,</span><br><span class="line">     beforeSend :<span class="function"><span class="keyword">function</span>(<span class="params">xmlHttp</span>)</span>&#123; </span><br><span class="line">        xmlHttp.setRequestHeader(<span class="string">"If-Modified-Since"</span>,<span class="string">"0"</span>); </span><br><span class="line">        xmlHttp.setRequestHeader(<span class="string">"Cache-Control"</span>,<span class="string">"no-cache"</span>);</span><br><span class="line">     &#125;,</span><br><span class="line">     success:<span class="function"><span class="keyword">function</span>(<span class="params">response</span>)</span>&#123;</span><br><span class="line">         <span class="comment">//操作</span></span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">async</span>:<span class="literal">false</span></span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><ol start="2"><li>方法二，直接用cache:false,</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">     url:<span class="string">'www.haorooms.com'</span>,</span><br><span class="line">     dataType:<span class="string">'json'</span>,</span><br><span class="line">     data:&#123;&#125;,</span><br><span class="line">     cache:<span class="literal">false</span>, </span><br><span class="line">     ifModified :<span class="literal">true</span> ,</span><br><span class="line"></span><br><span class="line">     success:<span class="function"><span class="keyword">function</span>(<span class="params">response</span>)</span>&#123;</span><br><span class="line">         <span class="comment">//操作</span></span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">async</span>:<span class="literal">false</span></span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><ol start="3"><li>方法三：用随机数，随机数也是避免缓存的一种很不错的方法！</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">URL 参数后加上 <span class="string">"?ran="</span> + <span class="built_in">Math</span>.random(); <span class="comment">//当然这里参数 ran可以任意取了</span></span><br><span class="line"></span><br><span class="line">&lt;script&gt; </span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"&lt;s"</span>+<span class="string">"cript type='text/javascript' src='/js/test.js?"</span>+<span class="built_in">Math</span>.random()+<span class="string">"'&gt;&lt;/scr"</span>+<span class="string">"ipt&gt;"</span>); </span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">其他的类似，只需在地址后加上+Math.random() </span></span><br><span class="line"><span class="regexp">注意：因为Math.random() 只能在Javascript 下起作用，故只能通过Javascript的调用才可以</span></span><br></pre></td></tr></table></figure><ol start="4"><li>方法四：</li></ol><ul><li>用随机时间，和随机数一样。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在 URL 参数后加上 <span class="string">"?timestamp="</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span><br></pre></td></tr></table></figure><ul><li>用PHP后端清理</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在服务端加 header(<span class="string">"Cache-Control: no-cache, must-revalidate"</span>);等等(如php中)</span><br></pre></td></tr></table></figure><ol start="5"><li>方法五：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.location.replace(<span class="string">"WebForm1.aspx"</span>);   </span><br><span class="line">参数就是你要覆盖的页面，replace的原理就是用当前页面替换掉replace参数指定的页面。   </span><br><span class="line">这样可以防止用户点击back键。使用的是javascript脚本，举例如下： </span><br><span class="line"></span><br><span class="line">a.html </span><br><span class="line">以下是引用片段： </span><br><span class="line"><span class="string">``</span><span class="string">`HTML</span></span><br><span class="line"><span class="string">&lt;html&gt; </span></span><br><span class="line"><span class="string">     &lt;head&gt; </span></span><br><span class="line"><span class="string">         &lt;title&gt;a&lt;/title&gt;      </span></span><br><span class="line"><span class="string">         &lt;script language="javascript"&gt; </span></span><br><span class="line"><span class="string">             function jump()&#123; </span></span><br><span class="line"><span class="string">                 window.location.replace("b.html"); </span></span><br><span class="line"><span class="string">             &#125; </span></span><br><span class="line"><span class="string">         &lt;/script&gt; </span></span><br><span class="line"><span class="string">     &lt;/head&gt; </span></span><br><span class="line"><span class="string">     &lt;body&gt; </span></span><br><span class="line"><span class="string">        &lt;a href="javascript:jump()"&gt;b&lt;/a&gt; </span></span><br><span class="line"><span class="string">    &lt;/body&gt; </span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>b.html<br>以下是引用片段： </li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </span><br><span class="line">     <span class="tag">&lt;<span class="name">head</span>&gt;</span> </span><br><span class="line">         <span class="tag">&lt;<span class="name">title</span>&gt;</span>b<span class="tag">&lt;/<span class="name">title</span>&gt;</span>      </span><br><span class="line">         <span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"javascript"</span>&gt;</span> </span><br><span class="line"><span class="actionscript">             <span class="function"><span class="keyword">function</span> <span class="title">jump</span><span class="params">()</span></span>&#123; </span></span><br><span class="line"><span class="javascript">                 <span class="built_in">window</span>.location.replace(<span class="string">"a.html"</span>); </span></span><br><span class="line">             &#125; </span><br><span class="line">         <span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line">     <span class="tag">&lt;/<span class="name">head</span>&gt;</span> </span><br><span class="line">     <span class="tag">&lt;<span class="name">body</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:jump()"</span>&gt;</span>a<span class="tag">&lt;/<span class="name">a</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> 缓存 </tag>
            
            <tag> Cache </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS自动判断设备, 浏览器等</title>
      <link href="/2020/02/09/2020-2-9-JS-check-device-type/"/>
      <url>/2020/02/09/2020-2-9-JS-check-device-type/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ua = navigator.userAgent.toLowerCase();</span><br></pre></td></tr></table></figure><h2 id="区分移动设备"><a href="#区分移动设备" class="headerlink" title="区分移动设备"></a>区分移动设备</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="regexp">/android|adr/gi</span>.test(ua)) &#123;</span><br><span class="line">    <span class="comment">// 安卓</span></span><br><span class="line">     </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="regexp">/\(i[^;]+;( U;)? CPU.+Mac OS X/gi</span>.test(ua))&#123;</span><br><span class="line">    <span class="comment">//苹果</span></span><br><span class="line">     </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="regexp">/iPad/gi</span>.test(ua))&#123;</span><br><span class="line">    <span class="comment">//ipad</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="区分浏览器"><a href="#区分浏览器" class="headerlink" title="区分浏览器"></a>区分浏览器</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="regexp">/msie/i</span>.test(ua) &amp;&amp; !<span class="regexp">/opera/</span>.test(ua))&#123;  </span><br><span class="line">    alert(<span class="string">"IE"</span>);  </span><br><span class="line">    <span class="keyword">return</span> ;  </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="regexp">/firefox/i</span>.test(ua))&#123;  </span><br><span class="line">    alert(<span class="string">"Firefox"</span>);  </span><br><span class="line">    <span class="keyword">return</span> ;  </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="regexp">/chrome/i</span>.test(ua) &amp;&amp; <span class="regexp">/webkit/i</span>.test(ua) &amp;&amp; <span class="regexp">/mozilla/i</span>.test(ua))&#123;  </span><br><span class="line">    alert(<span class="string">"Chrome"</span>);  </span><br><span class="line">    <span class="keyword">return</span> ;  </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="regexp">/opera/i</span>.test(ua))&#123;  </span><br><span class="line">    alert(<span class="string">"Opera"</span>);  </span><br><span class="line">    <span class="keyword">return</span> ;  </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="regexp">/iPad/i</span>)&#123; </span><br><span class="line">    alert(<span class="string">"ipad"</span>); </span><br><span class="line">    <span class="keyword">return</span> ; </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="regexp">/webkit/i</span>.test(ua) &amp;&amp;!(<span class="regexp">/chrome/i</span>.test(ua) &amp;&amp; <span class="regexp">/webkit/i</span>.test(ua) &amp;&amp; <span class="regexp">/mozilla/i</span>.test(ua)))&#123;  </span><br><span class="line">    alert(<span class="string">"Safari"</span>);  </span><br><span class="line">    <span class="keyword">return</span> ;  </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">    alert(<span class="string">"unKnow"</span>);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="区分软件内置浏览器，比如新浪微博、腾讯QQ（非QQ浏览器）和微信"><a href="#区分软件内置浏览器，比如新浪微博、腾讯QQ（非QQ浏览器）和微信" class="headerlink" title="区分软件内置浏览器，比如新浪微博、腾讯QQ（非QQ浏览器）和微信"></a>区分软件内置浏览器，比如新浪微博、腾讯QQ（非QQ浏览器）和微信</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span>(ua.match(<span class="regexp">/weibo/i</span>) == <span class="string">"weibo"</span>)&#123;  </span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(ua.indexOf(<span class="string">'qq/'</span>)!= <span class="number">-1</span>)&#123;  </span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(ua.match(<span class="regexp">/MicroMessenger/i</span>)==<span class="string">"micromessenger"</span>)&#123;  </span><br><span class="line"><span class="keyword">var</span> v_weixin = ua.split(<span class="string">'micromessenger'</span>)[<span class="number">1</span>];  </span><br><span class="line">    v_weixin = v_weixin.substring(<span class="number">1</span>,<span class="number">6</span>);  </span><br><span class="line">    v_weixin = v_weixin.split(<span class="string">' '</span>)[<span class="number">0</span>];  </span><br><span class="line"><span class="keyword">if</span>(v_weixin.split(<span class="string">'.'</span>).length == <span class="number">2</span>)&#123;  </span><br><span class="line">    v_weixin = v_weixin + <span class="string">'.0'</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">if</span>(v_weixin &lt; <span class="string">'6.0.2'</span>)&#123;  </span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">3</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">4</span>);  </span><br><span class="line">&#125;  </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">0</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> 设备类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js选择文件夹路径(IE)</title>
      <link href="/2020/02/08/2020-2-8-JS-choose-folder-dir-in-IE/"/>
      <url>/2020/02/08/2020-2-8-JS-choose-folder-dir-in-IE/</url>
      
        <content type="html"><![CDATA[<p>语法：==strDir=Shell.BrowseForFolder(Hwnd,Title,Options,[RootFolder])==</p><hr><p>参数：</p><ul><li>Hwnd：包含对话框的窗体句柄（handle），一般设置为0</li><li>Title：将在对话框中显示的说明，为字符串</li><li>Options：使用对话框的特殊方式，为长整数，一般设置为0</li><li>RootFolder：（可选的），用来设置浏览的最顶层文件夹，缺省时为“桌面”，可以将其设置为一个路径或“特殊文件夹常数”</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;input id=<span class="string">"show"</span>&gt;</span><br><span class="line">&lt;button onclick=<span class="string">"clickBtn()"</span>&gt;点击&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">function click() &#123;</span></span><br><span class="line"><span class="regexp">    try &#123;</span></span><br><span class="line"><span class="regexp">        var Message = "\u8bf7\u9009\u62e9\u6587\u4ef6\u5939"; /</span><span class="regexp">/选择框提示信息</span></span><br><span class="line"><span class="regexp">        var Shell = new ActiveXObject("Shell.Application");</span></span><br><span class="line"><span class="regexp">        var FolderObj = Shell.BrowseForFolder(0, Message, 64, 17); /</span><span class="regexp">/起始目录为：我的电脑</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/var FolderObj = Shell.BrowseForFolder(0, Message, 0); /</span><span class="regexp">/起始目录为：桌面</span></span><br><span class="line"><span class="regexp">        var filePath;</span></span><br><span class="line"><span class="regexp">        if (Folder != null) &#123;</span></span><br><span class="line"><span class="regexp">            filePath = FolderObj.Items().Item().Path;</span></span><br><span class="line"><span class="regexp">            if (filePath.charAt(0) == ':') &#123;</span></span><br><span class="line"><span class="regexp">                alert('请选择文件夹.');</span></span><br><span class="line"><span class="regexp">                return;</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">            document.getElementById(path).value = filePath;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">    catch (e) &#123;</span></span><br><span class="line"><span class="regexp">        alert(e + '请设置IE，Internet选项－安全－自定义级别－将ActiveX控件和插件前3个选项设置为启用，然后再尝试。');</span></span><br><span class="line"><span class="regexp">        return;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> IE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LivePhotosKit JS</title>
      <link href="/2020/02/07/2020-2-7-LivePhotosKit-JS/"/>
      <url>/2020/02/07/2020-2-7-LivePhotosKit-JS/</url>
      
        <content type="html"><![CDATA[<h2 id="Framework"><a href="#Framework" class="headerlink" title="Framework"></a>Framework</h2><h1 id="LivePhotosKit-JS"><a href="#LivePhotosKit-JS" class="headerlink" title="LivePhotosKit JS"></a>LivePhotosKit JS</h1><h3 id="Play-Live-Photos-on-the-web"><a href="#Play-Live-Photos-on-the-web" class="headerlink" title="Play Live Photos on the web."></a>Play Live Photos on the web.</h3><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>Use the LivePhotosKit JS library to play Live Photos on your web pages.<br>The JavaScript API presents the player in the form of a DOM element, much like an image or video tag, which can be configured with photo and video resources and other options, and have its playback controlled either programmatically by the consuming developer, or via pre-provided controls by the browsing end-user.<br>Before You Begin</p><ol><li>Embed LivePhotosKit JS in your webpage.<br>Use the script tag and link to Apple’s hosted version of LivePhotosKit JS at <a href="https://cdn.apple-livephotoskit.com/lpk/1/livephotoskit.js" target="_blank" rel="noopener">https://cdn.apple-livephotoskit.com/lpk/1/livephotoskit.js</a>.<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.apple-livephotoskit.com/lpk/1/livephotoskit.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>Note：<br>The LivePhotosKit JS version number is in the URL. For example, 1 specifies LivePhotosKit JS 1.0.0.</p><ol start="2"><li>Enable JavaScript strict mode.<br>To enable strict mode for an entire script, put ‘use strict before any other statements.<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Note</span><br><span class="line">LivePhotosKit JS is also available through NPM at https://www.npmjs.com/package/livephotoskit.</span><br><span class="line">The install command is:</span><br><span class="line">npm install --save livephotoskit</span><br></pre></td></tr></table></figure><h2 id="Declarative-HTML"><a href="#Declarative-HTML" class="headerlink" title="Declarative HTML"></a>Declarative HTML</h2>By including the LivePhotosKit JS script on your page, you can create players by simply adding declarative markup to your HTML. As the page loads, LivePhotosKit JS will determine what player instances are on the page and initialize them. You can use any HTML tag that supports child nodes.</li></ol><p>At minimum, each tag requires the data-live-photo attribute as well as a non-zero height and width. Doing this allows LivePhotosKit JS to find the DOM elements to be initialized as players.</p><p>Then you can specify the locations of the photo and video components by setting the data-photo-src and data-video-src attributes, respectively.</p><p>Optionally, you can use the following additional data attributes:<br>data-photo-time: The timestamp from the beginning of the provided video component, at which the still photo was captured.</p><ul><li>data-proactively-loads-video: Whether or not the Player will download the bytes at the provided data-video-src prior to the user or developer attempting to begin playback.</li><li>data-shows-native-controls: Whether or not the playback controls are enabled for the user.</li><li>Each DOM element assigned to be a Player will be decorated with a playback control.</li></ul><p><strong>Listing 3</strong>  Sample Code</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.apple-livephotoskit.com/lpk/1/livephotoskit.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">            <span class="attr">data-live-photo</span></span></span><br><span class="line"><span class="tag">            <span class="attr">data-photo-src</span>=<span class="string">"https://..."</span></span></span><br><span class="line"><span class="tag">            <span class="attr">data-video-src</span>=<span class="string">"https://..."</span></span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">"width: 320px; height: 320px"</span>&gt;</span>            </span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="JavaScript-API"><a href="#JavaScript-API" class="headerlink" title="JavaScript API"></a>JavaScript API</h2><p>Create a new LivePhotosKit.Player by invoking it either as a wrapper around a pre-existing DOM element, or by calling it without an argument, which will create a new DOM element.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// A Player built from a new DIV:</span></span><br><span class="line"><span class="keyword">const</span> myNewPlayer = LivePhotosKit.Player();</span><br><span class="line"><span class="built_in">document</span>.body.appendChild(myNewPlayer);</span><br><span class="line"><span class="comment">// A Player built from a pre-existing element:</span></span><br><span class="line">LivePhotosKit.Player(<span class="built_in">document</span>.getElementById(<span class="string">'myExistingElement'</span>));</span><br></pre></td></tr></table></figure><p>After a Player is created, use the properties and methods to set it up and use it, just as you would with a native image or video element.<br>The player will emit these events:</p><ul><li><strong>&lt;a href=””canplay</strong> when the Player has obtained just enough video frames and is obtaining them quickly enough for smooth playback.</li><li><strong>error</strong> when loading of either the photo or video components of the Live Photo has failed.</li><li><strong>ended</strong> when playback of the Live Photo has completed.</li><li><strong>videoload</strong> when the video component of the Live Photo has finished loading.</li><li><strong>photoload</strong> when the photo component of the Live Photo has finished loading.<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Create the player using a pre-existing DOM element.</span></span><br><span class="line"><span class="keyword">const</span> player = LivePhotosKit.Player(<span class="built_in">document</span>.getElementById(<span class="string">'my-live-photo-target-element'</span>));</span><br><span class="line">player.photoSrc = <span class="string">'https://...'</span>;</span><br><span class="line">player.videoSrc = <span class="string">'https://...'</span>;</span><br><span class="line"><span class="comment">// Listen to events the player emits.</span></span><br><span class="line">player.addEventListener(<span class="string">'canplay'</span>, evt =&gt; <span class="built_in">console</span>.log(<span class="string">'player ready'</span>, evt));</span><br><span class="line">player.addEventListener(<span class="string">'error'</span>, evt =&gt; <span class="built_in">console</span>.log(<span class="string">'player load error'</span>, evt));</span><br><span class="line">player.addEventListener(<span class="string">'ended'</span>, evt =&gt; <span class="built_in">console</span>.log(<span class="string">'player finished playing through'</span>, evt));</span><br><span class="line"><span class="comment">// Use the playback controls.</span></span><br><span class="line">player.playbackStyle = LivePhotosKit.PlaybackStyle.HINT;</span><br><span class="line">player.playbackStyle = LivePhotosKit.PlaybackStyle.FULL;</span><br><span class="line">player.play();</span><br><span class="line">player.pause();</span><br><span class="line">player.toggle();</span><br><span class="line">player.stop();</span><br><span class="line"><span class="comment">// Seek the animation to one quarter through.</span></span><br><span class="line">player.currentTime = <span class="number">0.25</span> * player.duration;</span><br><span class="line"><span class="comment">// Seek the animation to 0.1 seconds into the Live Photo.</span></span><br><span class="line">player.currentTime = <span class="number">0.1</span>;</span><br></pre></td></tr></table></figure><h2 id="Error-Handling"><a href="#Error-Handling" class="headerlink" title="Error Handling"></a>Error Handling</h2>A Player will emit error events, if and when errors occur while attempting to load or play. If a Player does experience an error, it will also publish the error to its public property errors as a way to convey whether or not it is in an error state, and, if so, what the errors were.</li></ul><p>The error states can be seen here LivePhotosKit.Errors.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">player.addEventListener(<span class="string">'error'</span>, (ev) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> ev.detail.errorCode === <span class="string">'number'</span>) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (ev.detail.errorCode) &#123;</span><br><span class="line">        <span class="keyword">case</span> LivePhotosKit.Errors.IMAGE_FAILED_TO_LOAD:</span><br><span class="line">            <span class="comment">// Do something</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> LivePhotosKit.Errors.VIDEO_FAILED_TO_LOAD:</span><br><span class="line">            <span class="comment">// Do something</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Extract error.</span></span><br><span class="line">        <span class="built_in">console</span>.error(ev.detail.error);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="Browser-Compatibility"><a href="#Browser-Compatibility" class="headerlink" title="Browser Compatibility"></a>Browser Compatibility</h2><p>The LivePhotosKit JS player is supported on the following browsers:</p><ul><li>iOS: Safari, Chrome</li><li>macOS: Safari, Chrome, Firefox</li><li>Android: (performance depends on device) Chrome (beta)</li><li>Windows: Chrome, Firefox, Edge, Internet Explorer 11</li></ul><h2 id="How-to-obtain-Live-Photo-assets"><a href="#How-to-obtain-Live-Photo-assets" class="headerlink" title="How to obtain Live Photo assets"></a>How to obtain Live Photo assets</h2><p>Live Photos consist of two components: a still photo and a video of the moments just before and after the photo is taken. Using one of the following methods will let you obtain the still photo as a JPG and the video as a MOV file.</p><h4 id="Important"><a href="#Important" class="headerlink" title="Important"></a>Important</h4><ul><li>If the assets are large, they will take a long time to download. If the photo takes too long, it will not be able to show the progress badge. To avoid this problem, the element that is being decorated to be a player should explicitly specify its height and width. Downsizing assets will greatly improve performance and reduce bandwidth usage.</li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> LivePhoto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LocalStorage &amp; SessionStorage</title>
      <link href="/2020/02/06/2020-2-6-LocalStorage-and-SessionStorage/"/>
      <url>/2020/02/06/2020-2-6-LocalStorage-and-SessionStorage/</url>
      
        <content type="html"><![CDATA[<h1 id="Storage"><a href="#Storage" class="headerlink" title="Storage"></a>Storage</h1><ul><li>作为 Web Storage API 的接口，Storage 提供了访问特定域名下的会话存储（session storage）或本地存储（local storage）的功能，例如，可以添加、修改或删除存储的数据项。</li><li>如果你想要操作一个域名的会话存储（session storage），可以使用 window.sessionStorage如果想要操作一个域名的本地存储（local storage），可以使用  window.localStorage。</li><li>sessionStorage和localStorage的用法是一样的，区别在于sessionStorage会在会话关闭也就是浏览器关闭时失效，而localStorage是将数据存储在本地，不受关闭浏览器影响，除非手动清除数据</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> <span class="title">IIFE</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="built_in">window</span>.localStorage)&#123;</span><br><span class="line">        alert(<span class="string">'your browser is not support localStorage!'</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getStorage</span>(<span class="params">sname, defaultValue</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//result = window.localStorage.sname</span></span><br><span class="line">        <span class="comment">//result = window.localStorage[sname]</span></span><br><span class="line">        <span class="keyword">var</span> result = <span class="built_in">window</span>.localStorage.getItem(sname);</span><br><span class="line">        <span class="keyword">return</span> result || defaultValue;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setStorage</span>(<span class="params">sname, svalue</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">window</span>.localStorage.setItem(sname, svalue);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">removeItem</span>(<span class="params">sname</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">window</span>.localStorage.removeItem(sname);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getKey</span>(<span class="params">keyIndex</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">window</span>.localStorage.key(keyIndex);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getAllKeys</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> arr = [];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="built_in">window</span>.localStorage.length;i++)&#123;</span><br><span class="line">            arr.push(<span class="built_in">window</span>.localStorage.key(i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">clearStorage</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">window</span>.localStorage.clear();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">onStorageChange</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(event)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">'storage'</span>, onStorageChange);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">window</span>.Util = &#123;</span><br><span class="line">        getStorage: getStorage,</span><br><span class="line">        setStorage: setStorage,</span><br><span class="line">        removeItem: removeItem,</span><br><span class="line">        getKey: getKey,</span><br><span class="line">        getAllKeys: getAllKeys,</span><br><span class="line">        clearStorage: clearStorage,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> LocalStorage </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Meta name解释</title>
      <link href="/2020/02/05/2020-2-5-Meta-name/"/>
      <url>/2020/02/05/2020-2-5-Meta-name/</url>
      
        <content type="html"><![CDATA[<h1 id="meta-name解释"><a href="#meta-name解释" class="headerlink" title="meta name解释"></a>meta name解释</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0"</span>&gt;</span></span><br></pre></td></tr></table></figure><p><em>content属性值</em></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">width</span>:可视区域的宽度，值可为数字或关键词<span class="selector-tag">device-width</span></span><br><span class="line"><span class="selector-tag">height</span>:同<span class="selector-tag">width</span></span><br><span class="line"><span class="selector-tag">intial-scale</span>:页面首次被显示是可视区域的缩放级别，取值1<span class="selector-class">.0</span>则页面按实际尺寸显示，无任何缩放</span><br><span class="line">maximum-scale=1.0, minimum-scale=1.0;可视区域的缩放级别，</span><br><span class="line"><span class="selector-tag">maximum-scale</span>用户可将页面放大的程序，1<span class="selector-class">.0</span>将禁止用户放大到实际尺寸之上。</span><br><span class="line"><span class="selector-tag">user-scalable</span>:是否可对页面进行缩放，<span class="selector-tag">no</span> 禁止缩放</span><br><span class="line">``` </span><br><span class="line">```<span class="selector-tag">HTML</span></span><br><span class="line">&lt;meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"&gt;</span><br></pre></td></tr></table></figure><p>Edge 模式告诉 IE 以最高级模式渲染文档，也就是任何 IE 版本都以当前版本所支持的最高级标准模式渲染，避免版本升级造成的影响。简单的说，就是什么版本 IE 就用什么版本的标准模式渲染</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用以下代码强制 IE 使用 Chrome Frame 渲染</p><pre><code class="HTML"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"chrome=1"</span>&gt;</span></code></pre><p>最佳的兼容模式方案，结合考虑以上两种：</p><pre><code class="HTML"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,chrome=1"</span>&gt;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> Meta </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Meta大全</title>
      <link href="/2020/02/04/2020-2-4-Meta/"/>
      <url>/2020/02/04/2020-2-4-Meta/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span> <span class="comment">&lt;!-- 使用 HTML5 doctype，不区分大小写 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-cmn-Hans"</span>&gt;</span> <span class="comment">&lt;!-- 更加标准的 lang 属性写法 http://zhi.hu/XyIa --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 声明文档使用的字符编码 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">'utf-8'</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 优先使用 IE 最新版本和 Chrome --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,chrome=1"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 页面描述 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"不超过150个字符"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 页面关键词 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 网页作者 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"author"</span> <span class="attr">content</span>=<span class="string">"name, email@gmail.com"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 搜索引擎抓取 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"index,follow"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 为移动设备添加 viewport --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- `width=device-width` 会导致 iPhone 5 添加到主屏后以 WebApp 全屏模式打开页面时出现黑边 http://bigc.at/ios-webapp-viewport-meta.orz --&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">&lt;!-- iOS 设备 begin --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-title"</span> <span class="attr">content</span>=<span class="string">"标题"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 添加到主屏后的标题（iOS 6 新增） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-capable"</span> <span class="attr">content</span>=<span class="string">"yes"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏 --&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-itunes-app"</span> <span class="attr">content</span>=<span class="string">"app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 添加智能 App 广告条 Smart App Banner（iOS 6+ Safari） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-status-bar-style"</span> <span class="attr">content</span>=<span class="string">"black"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 设置苹果工具栏颜色 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"format-detection"</span> <span class="attr">content</span>=<span class="string">"telphone=no, email=no"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 忽略页面中的数字识别为电话，忽略email识别 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 启用360浏览器的极速模式(webkit) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"renderer"</span> <span class="attr">content</span>=<span class="string">"webkit"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 避免IE使用兼容模式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 不让百度转码 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Cache-Control"</span> <span class="attr">content</span>=<span class="string">"no-siteapp"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"HandheldFriendly"</span> <span class="attr">content</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 微软的老式浏览器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"MobileOptimized"</span> <span class="attr">content</span>=<span class="string">"320"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- uc强制竖屏 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"screen-orientation"</span> <span class="attr">content</span>=<span class="string">"portrait"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- QQ强制竖屏 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"x5-orientation"</span> <span class="attr">content</span>=<span class="string">"portrait"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- UC强制全屏 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"full-screen"</span> <span class="attr">content</span>=<span class="string">"yes"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- QQ强制全屏 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"x5-fullscreen"</span> <span class="attr">content</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- UC应用模式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"browsermode"</span> <span class="attr">content</span>=<span class="string">"application"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- QQ应用模式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"x5-page-mode"</span> <span class="attr">content</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- windows phone 点击无高光 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"msapplication-tap-highlight"</span> <span class="attr">content</span>=<span class="string">"no"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- iOS 图标 begin --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-icon-precomposed"</span> <span class="attr">href</span>=<span class="string">"/apple-touch-icon-57x57-precomposed.png"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- iPhone 和 iTouch，默认 57x57 像素，必须有 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-icon-precomposed"</span> <span class="attr">sizes</span>=<span class="string">"114x114"</span> <span class="attr">href</span>=<span class="string">"/apple-touch-icon-114x114-precomposed.png"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Retina iPhone 和 Retina iTouch，114x114 像素，可以没有，但推荐有 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-icon-precomposed"</span> <span class="attr">sizes</span>=<span class="string">"144x144"</span> <span class="attr">href</span>=<span class="string">"/apple-touch-icon-144x144-precomposed.png"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Retina iPad，144x144 像素，可以没有，但推荐有 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- iOS 图标 end --&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">&lt;!-- iOS 启动画面 begin --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-startup-image"</span> <span class="attr">sizes</span>=<span class="string">"768x1004"</span> <span class="attr">href</span>=<span class="string">"/splash-screen-768x1004.png"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- iPad 竖屏 768 x 1004（标准分辨率） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-startup-image"</span> <span class="attr">sizes</span>=<span class="string">"1536x2008"</span> <span class="attr">href</span>=<span class="string">"/splash-screen-1536x2008.png"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- iPad 竖屏 1536x2008（Retina） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-startup-image"</span> <span class="attr">sizes</span>=<span class="string">"1024x748"</span> <span class="attr">href</span>=<span class="string">"/Default-Portrait-1024x748.png"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- iPad 横屏 1024x748（标准分辨率） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-startup-image"</span> <span class="attr">sizes</span>=<span class="string">"2048x1496"</span> <span class="attr">href</span>=<span class="string">"/splash-screen-2048x1496.png"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- iPad 横屏 2048x1496（Retina） --&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-startup-image"</span> <span class="attr">href</span>=<span class="string">"/splash-screen-320x480.png"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- iPhone/iPod Touch 竖屏 320x480 (标准分辨率) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-startup-image"</span> <span class="attr">sizes</span>=<span class="string">"640x960"</span> <span class="attr">href</span>=<span class="string">"/splash-screen-640x960.png"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- iPhone/iPod Touch 竖屏 640x960 (Retina) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-startup-image"</span> <span class="attr">sizes</span>=<span class="string">"640x1136"</span> <span class="attr">href</span>=<span class="string">"/splash-screen-640x1136.png"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- iPhone 5/iPod Touch 5 竖屏 640x1136 (Retina) --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- iOS 启动画面 end --&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">&lt;!-- iOS 设备 end --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"msapplication-TileColor"</span> <span class="attr">content</span>=<span class="string">"#000"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Windows 8 磁贴颜色 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"msapplication-TileImage"</span> <span class="attr">content</span>=<span class="string">"icon.png"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Windows 8 磁贴图标 --&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"alternate"</span> <span class="attr">type</span>=<span class="string">"application/rss+xml"</span> <span class="attr">title</span>=<span class="string">"RSS"</span> <span class="attr">href</span>=<span class="string">"/rss.xml"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 添加 RSS 订阅 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"shortcut icon"</span> <span class="attr">type</span>=<span class="string">"image/ico"</span> <span class="attr">href</span>=<span class="string">"/favicon.ico"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 添加 favicon icon --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- sns 社交标签 begin --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 参考微博API --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">property</span>=<span class="string">"og:type"</span> <span class="attr">content</span>=<span class="string">"类型"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">property</span>=<span class="string">"og:url"</span> <span class="attr">content</span>=<span class="string">"URL地址"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">property</span>=<span class="string">"og:title"</span> <span class="attr">content</span>=<span class="string">"标题"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">property</span>=<span class="string">"og:image"</span> <span class="attr">content</span>=<span class="string">"图片"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">property</span>=<span class="string">"og:description"</span> <span class="attr">content</span>=<span class="string">"描述"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- sns 社交标签 end --&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> Meta </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mock简明文档</title>
      <link href="/2020/02/03/2020-2-3-Mock/"/>
      <url>/2020/02/03/2020-2-3-Mock/</url>
      
        <content type="html"><![CDATA[<h1 id="Mock简明文档"><a href="#Mock简明文档" class="headerlink" title="Mock简明文档"></a>Mock简明文档</h1><h2 id="Mock-mock"><a href="#Mock-mock" class="headerlink" title="Mock.mock()"></a>Mock.mock()</h2><ul><li>Mock.mock( requestUrl?, requestType?, template|function(options) )</li><li>Mock.mock( template )</li><li>Mock.mock( requestUrl, template )</li><li>Mock.mock( requestUrl, requestType, template )</li><li>Mock.mock( requestUrl, requestType, function(options) )</li></ul><blockquote><p>requestUrl: 要拦截的URL，字符串或正则表达式<br><br>requestType: 要拦截的请求类型，get/post/put/delete/options…<br><br>template: 数据模板<br><br>function(options)：生成响应数据的函数，options –&gt; { url, type, body }</p></blockquote><hr><h2 id="语法规范"><a href="#语法规范" class="headerlink" title="语法规范"></a>语法规范</h2><h3 id="数据模板定义"><a href="#数据模板定义" class="headerlink" title="数据模板定义"></a>数据模板定义</h3><blockquote><p>数据模板中每个属性由3部分组成： <strong>属性名|生成规则：属性值</strong></p></blockquote><ol><li>‘name|min-max’: value</li><li>‘name|count’: value</li><li>‘name|min-max.dmin-dmax’: value</li><li>‘name|min-max.dcount’: value</li><li>‘name|count.dmin-dmax’: value</li><li>‘name|count.dcout’: value</li><li>‘name|+step’: value</li></ol><p><em>属性值</em>中可以包含@占位符<br><em>属性值</em>还指定了最终值的初始值和类型</p><h4 id="1-属性值是字符串"><a href="#1-属性值是字符串" class="headerlink" title="1.属性值是字符串"></a>1.属性值是字符串</h4><ol><li>‘name|min-max’: string<blockquote><p>通过重复 string 生成一个字符串，重复次数大于等于 min，小于等于 max</p></blockquote></li><li>‘name|count’: string<blockquote><p>通过重复 string 生成一个字符串，重复次数等于 count</p></blockquote></li></ol><h4 id="2-属性值是数字"><a href="#2-属性值是数字" class="headerlink" title="2.属性值是数字"></a>2.属性值是数字</h4><ol><li>‘name|+1’: number<blockquote><p>属性值自动加 1，初始值为 number</p></blockquote></li><li>‘name|min-max’: number<blockquote><p>生成一个大于等于 min、小于等于 max 的整数，属性值 number 只是用来确定类型</p></blockquote></li><li>‘name|min-max.dmin-dmax’: number<blockquote><p>生成一个浮点数，整数部分大于等于 min、小于等于 max，小数部分保留 dmin 到 dmax 位</p></blockquote></li></ol><h4 id="3-属性值是布尔值"><a href="#3-属性值是布尔值" class="headerlink" title="3.属性值是布尔值"></a>3.属性值是布尔值</h4><ol><li>‘name|1’: boolean<blockquote><p>随机生成一个布尔值，值为 true 的概率是 1/2，值为 false 的概率同样是 1/2</p></blockquote></li><li>‘name|min-max’: value<blockquote><p>随机生成一个布尔值，值为 value 的概率是 min / (min + max)，值为 !value 的概率是 max / (min + max)</p></blockquote></li></ol><h4 id="4-属性值是对象"><a href="#4-属性值是对象" class="headerlink" title="4.属性值是对象"></a>4.属性值是对象</h4><ol><li>‘name|count’: object<blockquote><p>从属性值 object 中随机选取 count 个属性</p></blockquote></li><li>‘name|min-max’: object<blockquote><p>从属性值 object 中随机选取 min 到 max 个属性</p></blockquote></li></ol><h4 id="5-属性值是数组"><a href="#5-属性值是数组" class="headerlink" title="5.属性值是数组"></a>5.属性值是数组</h4><ol><li>‘name|1’: array<blockquote><p>从属性值 array 中随机选取 1 个元素，作为最终值</p></blockquote></li><li>‘name|+1’: array<blockquote><p>从属性值 array 中顺序选取 1 个元素，作为最终值</p></blockquote></li><li>‘name|min-max’: array<blockquote><p>通过重复属性值 array 生成一个新数组，重复次数大于等于 min，小于等于 max</p></blockquote></li><li>‘name|count’: array<blockquote><p>通过重复属性值 array 生成一个新数组，重复次数为 count</p></blockquote></li></ol><p>&nbsp;<br>&nbsp;</p><h4 id="6-属性值是函数"><a href="#6-属性值是函数" class="headerlink" title="6.属性值是函数"></a>6.属性值是函数</h4><ol><li>‘name’: function<blockquote><p>执行函数 function，取其返回值作为最终的属性值，函数的上下文为属性 ‘name’ 所在的对象</p></blockquote></li></ol><p>&nbsp;<br>&nbsp;</p><h4 id="7-属性值是正则表达式"><a href="#7-属性值是正则表达式" class="headerlink" title="7.属性值是正则表达式"></a>7.属性值是正则表达式</h4><ol><li>‘name’: regexp<blockquote><p>根据正则表达式 regexp 反向生成可以匹配它的字符串。用于生成自定义格式的字符串</p></blockquote></li></ol><p>&nbsp;<br>&nbsp;</p><h3 id="数据占位符定义"><a href="#数据占位符定义" class="headerlink" title="数据占位符定义"></a>数据占位符定义</h3><ol><li>用 @ 来标识其后的字符串是 占位符</li><li>占位符 引用的是 Mock.Random 中的方法</li><li>通过 Mock.Random.extend() 来扩展自定义占位符</li><li>占位符 也可以引用 数据模板 中的属性</li><li>占位符 会优先引用 数据模板 中的属性</li><li>占位符 支持 相对路径 和 绝对路径</li></ol><p>&nbsp;<br>&nbsp;</p><h2 id="Mock-setup"><a href="#Mock-setup" class="headerlink" title="Mock.setup()"></a>Mock.setup()</h2><blockquote><p>配置Ajax请求的行为，暂时支持的配置项有timeout</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Mock.setup(&#123;</span><br><span class="line">  timeout: <span class="number">500</span></span><br><span class="line">&#125;)</span><br><span class="line">Mock.setup(&#123;</span><br><span class="line">  timeout: <span class="string">'100-600'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="Mock-Random"><a href="#Mock-Random" class="headerlink" title="Mock.Random"></a>Mock.Random</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Random = Mock.Random</span><br><span class="line">Random.email() <span class="comment">// =&gt; sd.sdf@oksd.com</span></span><br><span class="line">Mock.mock(<span class="string">'@email'</span>) <span class="comment">// =&gt; sd.sdf@oksd.com</span></span><br><span class="line">Mock.mock(&#123; <span class="attr">email</span>: <span class="string">'sd.sdf@oksd.com'</span> &#125;) <span class="comment">// =&gt; &#123; email: "sd.sdf@oksd.com" &#125;</span></span><br></pre></td></tr></table></figure><h3 id="Mock-Random提供的完整方法（占位符）"><a href="#Mock-Random提供的完整方法（占位符）" class="headerlink" title="Mock.Random提供的完整方法（占位符）:"></a>Mock.Random提供的完整方法（占位符）:</h3><table><thead><tr><th align="left">Type</th><th align="left">Method</th></tr></thead><tbody><tr><td align="left">Basic</td><td align="left">boolean, natural, integer, float, character, string, range, date, time, datetime, now</td></tr><tr><td align="left">Image</td><td align="left">image, dataImage</td></tr><tr><td align="left">Color</td><td align="left">color</td></tr><tr><td align="left">Text</td><td align="left">paragraph, sentence, word, title, cparagraph, csentence, cword, ctitle</td></tr><tr><td align="left">Name</td><td align="left">first, last, name, cfirst, clast, cname</td></tr><tr><td align="left">Web</td><td align="left">url, domain, email, ip, tld</td></tr><tr><td align="left">Address</td><td align="left">area(region, province, city(bool), county(bool), zip), region</td></tr><tr><td align="left">Helper</td><td align="left">capitalize(首字母大写), upper(大写), lower(小写), pick(从数组任取一个), shuffle(打乱数组元素顺序)</td></tr><tr><td align="left">Miscellaneous</td><td align="left">guid, id</td></tr></tbody></table><h4 id="Basic"><a href="#Basic" class="headerlink" title="Basic"></a>Basic</h4><ol><li>Random.boolean(min?, max?, current? )</li><li>Random.natural(min?, max? )</li><li>Random.integer(min?, max? )</li><li>Random.float( min?, max?, dmin?, dmax? )</li><li>Random.character( pool? ) // pool =&gt; lower/upper/number/symbol</li><li>Random.string( pool?, min?, max? ) // pool =&gt; lower/upper/number/symbol</li><li>Random.range( start?, stop, step? )</li></ol><h4 id="Color"><a href="#Color" class="headerlink" title="Color"></a>Color</h4><ol><li>Random.color() // =&gt; #3538B2</li><li>Random.hex() // =&gt; #3538B2</li><li>Random.rgb() // =&gt; rgb(242, 198, 121)</li><li>Random.rgba() // =&gt; rgba(242, 198, 121, 0.13)</li><li>Random.hsl() // =&gt; hsl(345, 82, 71)</li></ol><p>&nbsp;<br>&nbsp;</p><h4 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h4><h5 id="Random-image"><a href="#Random-image" class="headerlink" title="Random.image()"></a>Random.image()</h5><ol><li>Random.image()</li><li>Random.image( size )</li><li>Random.image( size, background )</li><li>Random.image( size, background, text )</li><li>Random.image( size, background, foreground, text )</li><li>Random.image( size, background, foreground, format, text )</li></ol><h5 id="Random-dataImage"><a href="#Random-dataImage" class="headerlink" title="Random.dataImage()"></a>Random.dataImage()</h5><ol><li>Random.dataImage()</li><li>Random.dataImage( size )</li><li>Random.dataImage( size, text )</li></ol><h4 id="Text"><a href="#Text" class="headerlink" title="Text"></a>Text</h4><ol><li>Random.paragraph( min?, max? )</li><li>Random.cparagraph( min?, max? )</li><li>Random.sentence( min?, max? )</li><li>Random.csentence( min?, max? )</li><li>Random.word( min?, max? )</li><li>Random.cword( pool?, min?, max? )</li><li>Random.title( min?, max? )</li><li>Random.ctitle( min?, max? )</li></ol><h4 id="Name"><a href="#Name" class="headerlink" title="Name"></a>Name</h4><ol><li>Random.first()</li><li>Random.last()</li><li>Random.name( middle? )</li><li>Random.cfirst()</li><li>Random.clast()</li><li>Random.cname()</li></ol><h4 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h4><ol><li>Random.url( protocol?, host? )</li><li>Random.protocol()</li><li>Random.domain() // 域名</li><li>Random.tld() // 顶级域名</li><li>Random.email( domain? )</li><li>Random.ip()</li></ol><h4 id="Address"><a href="#Address" class="headerlink" title="Address"></a>Address</h4><ol><li>Random.region()</li><li>Random.province()</li><li>Random.city( prefix? )</li><li>Random.county( prefix? )</li><li>Random.zip()</li></ol><p>&nbsp;<br>&nbsp;</p><h4 id="Helper"><a href="#Helper" class="headerlink" title="Helper"></a>Helper</h4><ol><li>Random.capitalize( word )</li><li>Random.upper( str )</li><li>Random.lower( str )</li><li>Random.pick( arr )</li><li>Random.shuffle( arr )</li></ol><h4 id="Miscellaneous"><a href="#Miscellaneous" class="headerlink" title="Miscellaneous"></a>Miscellaneous</h4><ol><li>Random.guid()</li><li>Random.id()</li><li>Random.increment( step? )</li></ol><h4 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h4><ol><li>Random.date( format? )</li></ol><table><thead><tr><th align="left">Format</th><th align="left">Description</th><th align="left">Example</th></tr></thead><tbody><tr><td align="left">yyyy</td><td align="left">A full numeric representation of a year, 4 digits</td><td align="left">1999 or 2003</td></tr><tr><td align="left">yy</td><td align="left">A two digit representation of a year</td><td align="left">99 or 03</td></tr><tr><td align="left">y</td><td align="left">A two digit representation of a year</td><td align="left">99 or 03</td></tr><tr><td align="left">MM</td><td align="left">Numeric representation of a month, with leading zeros</td><td align="left">01 to 12</td></tr><tr><td align="left">M</td><td align="left">Numeric representation of a month, without leading zeros</td><td align="left">1 to 12</td></tr><tr><td align="left">dd</td><td align="left">Day of the month, 2 digits with leading zeros</td><td align="left">01 to 31</td></tr><tr><td align="left">d</td><td align="left">Day of the month without leading zeros</td><td align="left">1 to 31</td></tr><tr><td align="left">HH</td><td align="left">24-hour format of an hour with leading zeros</td><td align="left">00 to 23</td></tr><tr><td align="left">H</td><td align="left">24-hour format of an hour without leading zeros</td><td align="left">0 to 23</td></tr><tr><td align="left">hh</td><td align="left">12-hour format of an hour without leading zeros</td><td align="left">01 to 12</td></tr><tr><td align="left">h</td><td align="left">12-hour format of an hour with leading zeros</td><td align="left">1 to 12</td></tr><tr><td align="left">mm</td><td align="left">Minutes, with leading zeros</td><td align="left">00 to 59</td></tr><tr><td align="left">m</td><td align="left">Minutes, without leading zeros</td><td align="left">0 to 59</td></tr><tr><td align="left">ss</td><td align="left">Seconds, with leading zeros</td><td align="left">00 to 59</td></tr><tr><td align="left">s</td><td align="left">Seconds, without leading zeros</td><td align="left">0 to 59</td></tr><tr><td align="left">SS</td><td align="left">Milliseconds, with leading zeros</td><td align="left">000 to 999</td></tr><tr><td align="left">S</td><td align="left">Milliseconds, without leading zeros</td><td align="left">0 to 999</td></tr><tr><td align="left">A</td><td align="left">Uppercase Ante meridiem and Post meridiem</td><td align="left">AM or PM</td></tr><tr><td align="left">a</td><td align="left">Lowercase Ante meridiem and Post meridiem</td><td align="left">am or pm</td></tr><tr><td align="left">T</td><td align="left">Milliseconds, since 1970-1-1 00:00:00 UTC</td><td align="left">759883437303</td></tr></tbody></table><p>&nbsp;<br>&nbsp;</p><ol start="2"><li>Random.time( format? )</li><li>Random.datetime( format? )</li><li>Random.now( unit?, format? ) // unit =&gt; year、month、week、day、hour、minute、second、week</li></ol><p>&nbsp;<br>&nbsp;</p><h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Random.extend(&#123;</span><br><span class="line">  fruit () &#123;</span><br><span class="line">    <span class="keyword">const</span> fruit = [<span class="string">'apple'</span>, <span class="string">'peach'</span>, <span class="string">'lemon'</span>]</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.pick(fruit)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">Random.fruit() <span class="comment">// =&gt; 'peach'</span></span><br><span class="line">Mock.mock(<span class="string">'@fruit'</span>)  <span class="comment">// =&gt; 'lemon'</span></span><br><span class="line">Mock.mock(&#123;</span><br><span class="line">  fruit: <span class="string">'@fruit'</span> <span class="comment">// =&gt; 'peach'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="Mock-valid"><a href="#Mock-valid" class="headerlink" title="Mock.valid()"></a>Mock.valid()</h3><h4 id="Mock-valid-template-data"><a href="#Mock-valid-template-data" class="headerlink" title="Mock.valid( template, data )"></a>Mock.valid( template, data )</h4><h3 id="Mock-toJSONSchema"><a href="#Mock-toJSONSchema" class="headerlink" title="Mock.toJSONSchema()"></a>Mock.toJSONSchema()</h3><h4 id="Mock-toJSONSchema-template"><a href="#Mock-toJSONSchema-template" class="headerlink" title="Mock.toJSONSchema( template )"></a>Mock.toJSONSchema( template )</h4>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> Mock </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Mock </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ngnix HTTPS 配置</title>
      <link href="/2020/02/02/2020-2-2-Ngnix-HTTPS-config/"/>
      <url>/2020/02/02/2020-2-2-Ngnix-HTTPS-config/</url>
      
        <content type="html"><![CDATA[<h1 id="Ngnix-HTTPS-配置"><a href="#Ngnix-HTTPS-配置" class="headerlink" title="Ngnix HTTPS 配置"></a>Ngnix HTTPS 配置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br></pre></td></tr></table></figure><hr><h2 id=""><a href="#" class="headerlink" title="*"></a>*</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">listen       443 ssl;</span><br><span class="line">    server_name  andychao217.cn alias www.andychao217.cn;</span><br><span class="line">ssl_certificate      C:&#x2F;UPUPW_NP7.0&#x2F;Nginx&#x2F;conf&#x2F;ssl&#x2F;server.crt;</span><br><span class="line">    ssl_certificate_key  C:&#x2F;UPUPW_NP7.0&#x2F;Nginx&#x2F;conf&#x2F;ssl&#x2F;server.key;</span><br><span class="line">    ssl_session_timeout  5m;</span><br><span class="line">    ssl_protocols  SSLv2 SSLv3 TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class="line">    ssl_prefer_server_ciphers   on;</span><br><span class="line">    if ($scheme &#x3D; http) &#123;</span><br><span class="line">        return   301 https:&#x2F;&#x2F;$host$request_uri;</span><br><span class="line">    &#125;</span><br><span class="line"> &#96;&#96;&#96;    </span><br><span class="line">---</span><br></pre></td></tr></table></figure><pre><code>location / {    root   C:/UPUPW_NP7.0/vhosts/andychao217.cn;    index  index.html index.htm default.html default.htm index.php default.php app.php u.php;    include        C:/UPUPW_NP7.0/vhosts/andychao217.cn/up-*.conf;}autoindex off;include advanced_settings.conf;#include expires.conf;location ~* .*\/(attachment|attachments|uploadfiles|avatar)\/.*\.(php|PHP7|phps|asp|aspx|jsp)$ {    deny all;}location ~ ^.+\.php {    root           C:/UPUPW_NP7.0/vhosts/andychao217.cn;    fastcgi_pass   bakend;    fastcgi_index  index.php;    fastcgi_split_path_info ^((?U).+\.php)(/?.+)$;    fastcgi_param  PATH_INFO $fastcgi_path_info;    fastcgi_param  PATH_TRANSLATED $document_root$fastcgi_path_info;</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">## *</span><br></pre></td></tr></table></figure><pre><code>fastcgi_param  HTTPS  $https if_not_empty;</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">---</span><br></pre></td></tr></table></figure><pre><code>    include        fastcgi.conf;}</code></pre><p>}<br>#server andychao217.cn end}</p><pre><code></code></pre>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Server </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 配置 </tag>
            
            <tag> Config </tag>
            
            <tag> Ngnix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Qt获取分辨率</title>
      <link href="/2020/02/01/2020-2-1-Qt-aquire-resolution/"/>
      <url>/2020/02/01/2020-2-1-Qt-aquire-resolution/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GLWidget::getScreenInfo</span><span class="params">()</span>  <span class="comment">//得到当前计算机的屏幕分辨率</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QDesktopWidget* desktopWidget = QApplication::desktop();</span><br><span class="line">    QRect screenRect = desktopWidget-&gt;screenGeometry();</span><br><span class="line">    g_nActScreenW = screenRect.<span class="built_in">width</span>();</span><br><span class="line">    g_nActScreenH = screenRect.<span class="built_in">height</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//得到当前控件相对于屏幕的坐标</span></span><br><span class="line">widgetPos = ui-&gt;startDateTimeValue-&gt;mapToGlobal(ui-&gt;startDateTimeValue-&gt;pos());</span><br><span class="line">widgetW = widgetPos.x();</span><br><span class="line">widgetH = widgetPos.y();</span><br><span class="line"></span><br><span class="line"><span class="comment">//控件相对于软件窗口的坐标</span></span><br><span class="line">ui-&gt;startDateTimeValue-&gt;pos()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
          <category> Qt </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Qt </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Qt错误-LNK1181-无法打开输入文件</title>
      <link href="/2020/01/31/2020-1-31-Qt-error-LNK1181/"/>
      <url>/2020/01/31/2020-1-31-Qt-error-LNK1181/</url>
      
        <content type="html"><![CDATA[<h2 id="Qt错误-LNK1181-无法打开输入文件“debug-main-obj”"><a href="#Qt错误-LNK1181-无法打开输入文件“debug-main-obj”" class="headerlink" title="Qt错误:LNK1181:无法打开输入文件“debug\main.obj”"></a>Qt错误:LNK1181:无法打开输入文件“debug\main.obj”</h2><p>==error: LNK1181: cannot open input file ‘debug\main.obj’==</p><h3 id="5个解决方案"><a href="#5个解决方案" class="headerlink" title="5个解决方案"></a>5个解决方案</h3><hr><ol><li>如果项目的路径(任何文件夹的名称)包含空格，也会出现此问题</li></ol><hr><ol start="2"><li><ul><li>Okay, we finally have a real answer for this generalized problem instead of     the OP’s typo problem if that didn’t unblock you either.</li><li>好的，我们最终得到了这个广义问题的真正答案，而不是OP的排字问题，如果它也没有阻止你的话。</li><li>Actual Problem (black-box perspective): The “Build directory” auto-filled entry breaks for projects inside whitespace directories. Qt Creator actually prohibits you and tells you not to use whitespace when making new Projects. You can still close a new project and re-name it to add whitespace, and Qt Creator will handle it gracefully. If you copy the build directory, even with whitespace in it, and paste that into the field replacing the broken auto-generated path (mine was using relative paths) then JOM will start working correctly, as QMake does not generate any errors. I can’t speak for other Make tools.</li><li>实际问题(黑盒透视图):“构建目录”自动填充空格目录中的项目的条目中断。Qt创建者实际上禁止您，并告诉您在创建新项目时不要使用空格。您仍然可以关闭一个新项目并重新命名它以添加空格，Qt创建者将优雅地处理它。如果您复制构建目录(即使其中有空格)，并将其粘贴到字段中，以替换损坏的自动生成路径(我使用的是相对路径)，那么JOM将开始正常工作，因为QMake不会生成任何错误。我不能代表其他制造工具。</li><li>Make or clone down your project with whitespace</li><li>用空格将项目复制或复制。</li><li>Load it in Qt Creator</li><li>载入Qt创建者。</li><li>Run QMAKE</li><li>运行QMAKE</li><li>Select the “Project” button on the left-hand side</li><li>选择左边的“项目”按钮</li><li>Make sure you’re in the “Build” tab</li><li>确保你在“构建”选项卡中</li><li>Select “Browse”, and then re-select the shadow directory QMAKE made</li><li>选择“浏览”，然后重新选择创建的影子目录QMAKE</li><li>That should unblock you if it wasn’t a simple issue for deleting the old QMAKE-generated folders, which is the most common problem people face with this specific error while developing within Qt Creator.</li><li>如果删除旧的qmake生成的文件夹不是一个简单的问题，那么应该会解除您的阻塞，这是在Qt Creator中开发时遇到的最常见的问题。</li></ul></li></ol><hr><ol start="3"><li><ul><li><p>The problem has been solved.</p></li><li><p>问题已经解决了。</p></li><li><p>The problem was, when create a new project (GUI or Console), all source files that belong to this new project take a wrong extension ex:main.cp, but the correct extension is supposed to be ex:main.cpp. And when change all the source files extension from .cp to .cpp worked fine.</p></li><li><p>问题是，当创建一个新项目(GUI或控制台)时，属于这个新项目的所有源文件都采用了错误的扩展名:main。但是正确的扩展应该是ex:main.cpp。当将所有源文件扩展名从.cp更改为.cpp时，效果很好。</p></li><li><p>Or change the default source file extension from [Tools -&gt; Option -&gt; C++].</p><p>  <img src="https://i.stack.imgur.com/wQTzo.jpg" alt="enter image description here"></p></li><li><p>或者从[Tools -&gt;选项-&gt; c++]中更改默认的源文件扩展名。</p></li></ul></li></ol><hr><ol start="4"><li><ul><li>hmm If I remember correctly when I faced this kind of problems using your        similar setup (QtCreator and Windows) running QMAKE &amp; rebuilding the project       again helped me solve this linker errors.</li><li>嗯，如果我没记错的话，当我使用类似的设置(QtCreator和Windows)运行QMAKE和重新构建项目时，我再次帮助我解决了链接器错误。</li></ul></li></ol><hr><ol start="5"><li><ul><li>Run Clean and qMake and rebuild. I has like this problem and this helped me.</li><li>运行干净，qMake和重建。我喜欢这个问题，这对我有帮助。</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Qt </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Qt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Toastr options</title>
      <link href="/2020/01/30/2020-1-30-Toastr-options/"/>
      <url>/2020/01/30/2020-1-30-Toastr-options/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">toastr.options = &#123;</span><br><span class="line"><span class="string">"closeButton"</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="string">"debug"</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="string">"newestOnTop"</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="string">"progressBar"</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="string">"rtl"</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="string">"positionClass"</span>: <span class="string">"toast-top-center"</span>,</span><br><span class="line"><span class="string">"preventDuplicates"</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="string">"onclick"</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="string">"showDuration"</span>: <span class="number">100</span>,</span><br><span class="line"><span class="string">"hideDuration"</span>: <span class="number">500</span>,</span><br><span class="line"><span class="string">"timeOut"</span>: <span class="number">2000</span>,</span><br><span class="line"><span class="string">"extendedTimeOut"</span>: <span class="number">800</span>,</span><br><span class="line"><span class="string">"showEasing"</span>: <span class="string">"swing"</span>,</span><br><span class="line"><span class="string">"hideEasing"</span>: <span class="string">"linear"</span>,</span><br><span class="line"><span class="string">"showMethod"</span>: <span class="string">"fadeIn"</span>,</span><br><span class="line"><span class="string">"hideMethod"</span>: <span class="string">"fadeOut"</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> Toastr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Utils.js</title>
      <link href="/2020/01/29/2020-1-29-Utils-js/"/>
      <url>/2020/01/29/2020-1-29-Utils-js/</url>
      
        <content type="html"><![CDATA[<h1 id="createRequest"><a href="#createRequest" class="headerlink" title="createRequest"></a>createRequest</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createRequest</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        request = <span class="keyword">new</span> XMLHttpRequest();  <span class="comment">//Chrome, Firefox, Safari..</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (tryMS)&#123;                     <span class="comment">//IE</span></span><br><span class="line">       <span class="keyword">try</span>&#123;</span><br><span class="line">           request = <span class="keyword">new</span> ActiveXObject(<span class="string">"Msxm12.XMLHTTP"</span>);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (otherMS)&#123;</span><br><span class="line">           <span class="keyword">try</span>&#123;</span><br><span class="line">               request = <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</span><br><span class="line">           &#125; <span class="keyword">catch</span> (failed)&#123;</span><br><span class="line">               request = <span class="literal">null</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">    &#125; </span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> request;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="addEventHandler"><a href="#addEventHandler" class="headerlink" title="addEventHandler"></a>addEventHandler</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addEventHandler</span>(<span class="params">obj, eventName, handler</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">document</span>.attachEvent)&#123;                     <span class="comment">//IE</span></span><br><span class="line">obj.attachEvent(on+eventName, handler);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">document</span>.addEventListener)&#123;          <span class="comment">//Chrome, Firefox, Safari..</span></span><br><span class="line">obj.addEventListener(eventName, handler, <span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="getActivatedObject"><a href="#getActivatedObject" class="headerlink" title="getActivatedObject"></a>getActivatedObject</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getActivatedObject</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> obj;</span><br><span class="line"><span class="keyword">if</span>(!e)&#123;</span><br><span class="line"><span class="comment">//early version of IE</span></span><br><span class="line">obj = <span class="built_in">window</span>.event.srcElement;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(e.srcElement)&#123;</span><br><span class="line"><span class="comment">//IE 7 or later</span></span><br><span class="line">obj = e.srcElement;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//Firefox, Chrome, Opera, Safari, Edge</span></span><br><span class="line">obj = e.target;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue修饰符大全</title>
      <link href="/2020/01/28/2020-1-28-Vue-shortcuts/"/>
      <url>/2020/01/28/2020-1-28-Vue-shortcuts/</url>
      
        <content type="html"><![CDATA[<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li>表单修饰符</li><li>事件修饰符</li><li>鼠标按键修饰符</li><li>键值修饰符</li><li>v-bind修饰符</li></ul><h2 id="表单修饰符"><a href="#表单修饰符" class="headerlink" title="表单修饰符"></a>表单修饰符</h2><p>填写表单，最常用的是什么？input！v-model~而我们的修饰符正是为了简化这些东西而存在的</p><h3 id="lazy"><a href="#lazy" class="headerlink" title=".lazy"></a>.lazy</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"value"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;value&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2019/2/9/168d0f6f9dfa057e?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="image"></p><p>从这里我们可以看到，我们还在输入的时候，光标还在的时候，下面的值就已经出来了，可以说是非常地实时。但是有时候我们希望，在我们输入完所有东西，光标离开才更新视图。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model.lazy</span>=<span class="string">"value"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;value&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样即可~这样只有当我们光标离开输入框的时候，它才会更新视图，相当于在onchange事件触发更新。</p><h3 id="trim"><a href="#trim" class="headerlink" title=".trim"></a>.trim</h3><p>在我们的输入框中，我们经常需要过滤一下一些输入完密码不小心多敲了一下空格的兄弟输入的内容。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model.trim</span>=<span class="string">"value"</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2019/2/9/168d0f6fc16d4e60?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="image"></p><p>为了让你更清楚的看到，我改了一下样式，不过问题不大，相信你已经清楚看到这个大大的hello左右两边没有空格，尽管你在input框里敲烂了空格键。<br>需要注意的是，它只能过滤首尾的空格！首尾，中间的是不会过滤的</p><h3 id="number"><a href="#number" class="headerlink" title=".number"></a>.number</h3><p>看这个名字就知道，应该是限制输入数字或者输入的东西转换成数字，but不是辣么赶单。</p><p><img src="https://user-gold-cdn.xitu.io/2019/2/9/168d0f6fadf87647?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="clipboard.png"></p><p><img src="https://user-gold-cdn.xitu.io/2019/2/9/168d0f6faea45fe7?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="clipboard.png"></p><p>如果你先输入数字，那它就会限制你输入的只能是数字。如果你先输入字符串，那它就相当于没有加.number</p><h2 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a>事件修饰符</h2><h3 id="stop"><a href="#stop" class="headerlink" title=".stop"></a>.stop</h3><p>由于事件冒泡的机制，我们给元素绑定点击事件的时候，也会触发父级的点击事件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">"shout(2)"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"shout(1)"</span>&gt;</span>ok<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">shout(e)&#123;</span><br><span class="line">    console.log(e)</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;1</span><br><span class="line">&#x2F;&#x2F;2</span><br></pre></td></tr></table></figure><p>一键阻止事件冒泡，简直方便得不行。相当于调用了event.stopPropagation()方法。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">"shout(2)"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.stop</span>=<span class="string">"shout(1)"</span>&gt;</span>ok<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">//只输出1</span><br></pre></td></tr></table></figure><h3 id="prevent"><a href="#prevent" class="headerlink" title=".prevent"></a>.prevent</h3><p>用于阻止事件的默认行为，例如，当点击提交按钮时阻止对表单的提交。相当于调用了event.preventDefault()方法。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 提交事件不再重载页面 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">v-on:submit.prevent</span>=<span class="string">"onSubmit"</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：修饰符可以同时使用多个,但是可能会因为顺序而有所不同。<br>用 v-on:click.prevent.self 会阻止所有的点击，而 v-on:click.self.prevent 只会阻止对元素自身的点击。<br>也就是从左往右判断~</strong></p><h3 id="self"><a href="#self" class="headerlink" title=".self"></a>.self</h3><p>只当事件是从事件绑定的元素本身触发时才触发回调。像下面所示，刚刚我们从.stop时候知道子元素会冒泡到父元素导致触发父元素的点击事件，当我们加了这个.self以后，我们点击button不会触发父元素的点击事件shout，只有当点击到父元素的时候（蓝色背景）才会shout~从这个self的英文翻译过来就是‘自己，本身’可以看出这个修饰符的用法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"blue"</span> @<span class="attr">click.self</span>=<span class="string">"shout(2)"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"shout(1)"</span>&gt;</span>ok<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2019/2/9/168d0f706c68a036?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="clipboard.png"></p><h3 id="once"><a href="#once" class="headerlink" title=".once"></a>.once</h3><p>这个修饰符的用法也是和名字一样简单粗暴，只能用一次，绑定了事件以后只能触发一次，第二次就不会触发。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//键盘按坏都只能shout一次</span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.once</span>=<span class="string">"shout(1)"</span>&gt;</span>ok<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="capture"><a href="#capture" class="headerlink" title=".capture"></a>.capture</h3><p>从上面我们知道了事件的冒泡，其实完整的事件机制是：捕获阶段–目标阶段–冒泡阶段。<br>默认的呢，是事件触发是从目标开始往上冒泡。<br>当我们加了这个.capture以后呢，我们就反过来了，事件触发从包含这个元素的顶层开始往下触发。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> @<span class="attr">click.capture</span>=<span class="string">"shout(1)"</span>&gt;</span></span><br><span class="line">    obj1</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click.capture</span>=<span class="string">"shout(2)"</span>&gt;</span></span><br><span class="line">        obj2</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">"shout(3)"</span>&gt;</span></span><br><span class="line">            obj3</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">"shout(4)"</span>&gt;</span></span><br><span class="line">                obj4</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">// 1 2 4 3</span><br></pre></td></tr></table></figure><p>从上面这个例子我们点击obj4的时候，就可以清楚地看出区别，obj1，obj2在捕获阶段就触发了事件，因此是先1后2，后面的obj3，obj4是默认的冒泡阶段触发，因此是先4然后冒泡到3~</p><h3 id="passive"><a href="#passive" class="headerlink" title=".passive"></a>.passive</h3><p>当我们在监听元素滚动事件的时候，会一直触发onscroll事件，在pc端是没啥问题的，但是在移动端，会让我们的网页变卡，因此我们使用这个修饰符的时候，相当于给onscroll事件整了一个.lazy修饰符</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 滚动事件的默认行为 (即滚动行为) 将会立即触发 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 而不会等待 `onScroll` 完成  --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 这其中包含 `event.preventDefault()` 的情况 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-on:scroll.passive</span>=<span class="string">"onScroll"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="native"><a href="#native" class="headerlink" title=".native"></a>.native</h3><p>我们经常会写很多的小组件，有些小组件可能会绑定一些事件，但是，像下面这样绑定事件是不会触发的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">My-component</span> @<span class="attr">click</span>=<span class="string">"shout(3)"</span>&gt;</span><span class="tag">&lt;/<span class="name">My-component</span>&gt;</span></span><br></pre></td></tr></table></figure><p>必须使用.native来修饰这个click事件（即&lt;My-component @click.native=”shout(3)”&gt;</My-component>），可以理解为该修饰符的作用就是把一个vue组件转化为一个普通的HTML标签，<br>注意：<strong>使用.native修饰符来操作普通HTML标签是会令事件失效的</strong></p><h2 id="鼠标按钮修饰符"><a href="#鼠标按钮修饰符" class="headerlink" title="鼠标按钮修饰符"></a>鼠标按钮修饰符</h2><p>刚刚我们讲到这个click事件，我们一般是会用左键触发，有时候我们需要更改右键菜单啥的，就需要用到右键点击或者中间键点击，这个时候就要用到鼠标按钮修饰符</p><ul><li>.left 左键点击</li><li>.right 右键点击</li><li>.middle 中键点击</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.right</span>=<span class="string">"shout(1)"</span>&gt;</span>ok<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="键值修饰符"><a href="#键值修饰符" class="headerlink" title="键值修饰符"></a>键值修饰符</h2><p>其实这个也算是事件修饰符的一种，因为它都是用来修饰键盘事件的。比如onkeyup，onkeydown啊</p><h3 id="keyCode"><a href="#keyCode" class="headerlink" title=".keyCode"></a>.keyCode</h3><p>如果不用keyCode修饰符，那我们每次按下键盘都会触发shout，当我们想指定按下某一个键才触发这个shout的时候，这个修饰符就有用了，具体键码查看键码对应表</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> @<span class="attr">keyup.keyCode</span>=<span class="string">"shout(4)"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>为了方便我们使用，vue给一些常用的键提供了别名</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//普通键</span></span><br><span class="line">.enter </span><br><span class="line">.tab</span><br><span class="line">.delete <span class="comment">//(捕获“删除”和“退格”键)</span></span><br><span class="line">.space</span><br><span class="line">.esc</span><br><span class="line">.up</span><br><span class="line">.down</span><br><span class="line">.left</span><br><span class="line">.right</span><br><span class="line"></span><br><span class="line"><span class="comment">//系统修饰键</span></span><br><span class="line">.ctrl</span><br><span class="line">.alt</span><br><span class="line">.meta</span><br><span class="line">.shift</span><br></pre></td></tr></table></figure><p>可以通过全局 config.keyCodes 对象自定义按键修饰符别名：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 可以使用 `v-on:keyup.f1`</span></span><br><span class="line">Vue.config.keyCodes.f1 = <span class="number">112</span></span><br></pre></td></tr></table></figure><p>我们从上面看到，键分成了普通常用的键和系统修饰键，区别是什么呢？<br>当我们写如下代码的时候,我们会发现如果仅仅使用系统修饰键是无法触发keyup事件的。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> @<span class="attr">keyup.ctrl</span>=<span class="string">"shout(4)"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>那该如何呢？我们需要将系统修饰键和其他键码链接起来使用，比如</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> @<span class="attr">keyup.ctrl.67</span>=<span class="string">"shout(4)"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样当我们同时按下ctrl+c时，就会触发keyup事件。另，如果是鼠标事件，那就可以单独使用系统修饰符。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">mouseover.ctrl</span>=<span class="string">"shout(1)"</span>&gt;</span>ok<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">mousedown.ctrl</span>=<span class="string">"shout(1)"</span>&gt;</span>ok<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.ctrl.67</span>=<span class="string">"shout(1)"</span>&gt;</span>ok<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>大概是什么意思呢，就是你不能单手指使用系统修饰键的修饰符（最少两个手指，可以多个）。你可以一个手指按住系统修饰键一个手指按住另外一个键来实现键盘事件。也可以用一个手指按住系统修饰键，另一只手按住鼠标来实现鼠标事件。</p><h3 id="exact-2-5新增"><a href="#exact-2-5新增" class="headerlink" title=".exact (2.5新增)"></a>.exact (2.5新增)</h3><p>我们上面说了这个系统修饰键，当我们像这样&lt;button type=”text” @click.ctrl=”shout(4)”&gt;</button>绑定了click键按下的事件，惊奇的是，我们同时按下几个系统修饰键，比如ctrl shift点击，也能触发，可能有些场景我们只需要或者只能按一个系统修饰键来触发（像制作一些快捷键的时候），而当我们按下ctrl和其他键的时候则无法触发。那就这样写。<br>注意：这个只是限制系统修饰键的，像下面这样书写以后你还是可以按下ctrl + c，ctrl+v或者ctrl+普通键 来触发，但是不能按下ctrl + shift +普通键来触发。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"text"</span> @<span class="attr">click.ctrl.exact</span>=<span class="string">"shout(4)"</span>&gt;</span>ok<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后下面这个你可以同时按下enter+普通键来触发，但是不能按下系统修饰键+enter来触发。相信你已经能听懂了</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> @<span class="attr">keydown.enter.exact</span>=<span class="string">"shout('我被触发了')"</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-bind修饰符"><a href="#v-bind修饰符" class="headerlink" title="v-bind修饰符"></a>v-bind修饰符</h2><h3 id="sync-2-3-0-新增"><a href="#sync-2-3-0-新增" class="headerlink" title=".sync(2.3.0+ 新增)"></a>.sync(2.3.0+ 新增)</h3><p>在有些情况下，我们可能需要对一个 prop 进行“双向绑定”。不幸的是，真正的双向绑定会带来维护上的问题，因为子组件可以修改父组件，且在父组件和子组件都没有明显的改动来源。我们通常的做法是</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父亲组件</span></span><br><span class="line">&lt;comp :myMessage=<span class="string">"bar"</span> @update:myMessage=<span class="string">"func"</span>&gt;&lt;<span class="regexp">/comp&gt;</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/js</span></span><br><span class="line"><span class="regexp">func(e)&#123;</span></span><br><span class="line"><span class="regexp"> this.bar = e;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/子组件js</span></span><br><span class="line"><span class="regexp">func2()&#123;</span></span><br><span class="line"><span class="regexp">  this.$emit('update:myMessage',params);</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure><p>现在这个.sync修饰符就是简化了上面的步骤</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父组件</span></span><br><span class="line">&lt;comp :myMessage.sync=<span class="string">"bar"</span>&gt;&lt;<span class="regexp">/comp&gt; </span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/子组件</span></span><br><span class="line"><span class="regexp">this.$emit('update:myMessage',params);</span></span><br></pre></td></tr></table></figure><p>这样确实会方便很多，但是也有很多需要注意的点</p><ol><li>使用sync的时候，子组件传递的事件名必须为update:value，其中value必须与子组件中props中声明的名称完全一致(如上例中的myMessage，不能使用my-message)</li><li>注意带有 .sync 修饰符的 v-bind 不能和表达式一起使用 (例如 v-bind:title.sync=”doc.title + ‘!’” 是无效的)。取而代之的是，你只能提供你想要绑定的属性名，类似 v-model。</li><li>将 v-bind.sync 用在一个字面量的对象上，例如 v-bind.sync=”{ title: doc.title }”，是无法正常工作的，因为在解析一个像这样的复杂表达式的时候，有很多边缘情况需要考虑。<h3 id="prop"><a href="#prop" class="headerlink" title=".prop"></a>.prop</h3>要学习这个修饰符，我们首先要搞懂两个东西的区别。</li></ol><ul><li>Property：节点对象在内存中存储的属性，可以访问和设置。</li><li>Attribute：节点对象的其中一个属性( property )，值是一个对象。</li></ul><p><em>(可以通过点访问法 document.getElementById(‘xx’).attributes 或者 document.getElementById(‘xx’).getAttributes(‘xx’) 读取，通过 document.getElementById(‘xx’).setAttribute(‘xx’,value) 新增和修改)</em></p><p>在标签里定义的所有属性包括 HTML 属性和自定义属性都会在 attributes 对象里以键值对的方式存在。</p><p>其实attribute和property两个单词，翻译出来都是属性，但是《javascript高级程序设计》将它们翻译为特性和属性，以示区分</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//这里的id,value,style都属于property</span><br><span class="line">//index属于attribute</span><br><span class="line">//id、title等既是属性，也是特性。修改属性，其对应的特性会发生改变；修改特性，属性也会改变</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"uid"</span> <span class="attr">title</span>=<span class="string">"title1"</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">:index</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">//input.index === undefined</span><br><span class="line">//input.attributes.index === this.index</span><br></pre></td></tr></table></figure><p>从上面我们可以看到如果直接使用v-bind绑定，则默认会绑定到dom节点的attribute。为了</p><ul><li>通过自定义属性存储变量，避免暴露数据</li><li>防止污染 HTML 结构</li></ul><p>我们可以使用这个修饰符，如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"uid"</span> <span class="attr">title</span>=<span class="string">"title1"</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">:index.prop</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">//input.index === this.index</span><br><span class="line">//input.attributes.index === undefined</span><br></pre></td></tr></table></figure><h3 id="camel"><a href="#camel" class="headerlink" title=".camel"></a>.camel</h3><p>由于HTML 特性是不区分大小写的。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">:viewBox</span>=<span class="string">"viewBox"</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><p>实际上会渲染为</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">viewbox</span>=<span class="string">"viewBox"</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这将导致渲染失败，因为 SVG 标签只认 viewBox，却不知道 viewbox 是什么。</p><p>如果我们使用.camel修饰符，那它就会被渲染为驼峰名。</p><p>另，如果你使用字符串模版，则没有这些限制。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  template: <span class="string">'&lt;svg :viewBox="viewBox"&gt;&lt;/svg&gt;'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> Vue.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> Vue.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一行代码解决各种IE兼容问题,IE6,IE7,IE8,IE9,IE10</title>
      <link href="/2020/01/27/2020-1-27-capability-in-IE/"/>
      <url>/2020/01/27/2020-1-27-capability-in-IE/</url>
      
        <content type="html"><![CDATA[<p>在网站开发中不免因为各种兼容问题苦恼，针对兼容问题，其实IE给出了解决方案Google也给出了解决方案</p><p>百度也应用了这种方案去解决IE的兼容问题</p><p>百度源代码如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!Doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">http://www.w3.org/1999/xhtml</span> <span class="attr">xmlns:bd</span>=<span class="string">http://www.baidu.com/2010/xbdml</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">Content-Type</span> <span class="attr">content</span>=<span class="string">“text/html;charset</span>=<span class="string">utf-8″</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">X-UA-Compatible</span> <span class="attr">content</span>=<span class="string">IE</span>=<span class="string">EmulateIE7</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">title</span>&gt;</span>百度一下，你就知道 <span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="keyword">var</span> wpo=&#123;<span class="attr">start</span>:<span class="keyword">new</span> <span class="built_in">Date</span>*<span class="number">1</span>,<span class="attr">pid</span>:<span class="number">109</span>,<span class="attr">page</span>:‘superpage’&#125;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">X-UA-Compatible</span> <span class="attr">content</span>=<span class="string">IE</span>=<span class="string">EmulateIE7</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以打开百度，右键查看源码看下！我们可以看下文件头是否存在这样一行代码！</p><p>这句话的意思是强制使用IE7模式来解析网页代码！</p><p>在这里送上几种IE使用模式！</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">“X-UA-Compatible”</span> <span class="attr">content</span>=<span class="string">“IE</span>=<span class="string">8″</span>&gt;</span></span><br><span class="line"> 2. Google Chrome Frame也可以让IE用上Chrome的引擎:</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">“X-UA-Compatible”</span> <span class="attr">content</span>=<span class="string">“chrome</span>=<span class="string">1″</span> /&gt;</span></span><br><span class="line"> 3.强制IE8使用IE7模式来解析</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">“X-UA-Compatible”</span> <span class="attr">content</span>=<span class="string">“IE</span>=<span class="string">EmulateIE7″</span>&gt;</span><span class="tag">&lt;<span class="name">!–</span> <span class="attr">IE7</span> <span class="attr">mode</span> –&gt;</span></span><br><span class="line"> //或者</span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">“X-UA-Compatible”</span> <span class="attr">content</span>=<span class="string">“IE</span>=<span class="string">7″</span>&gt;</span><span class="tag">&lt;<span class="name">!–</span> <span class="attr">IE7</span> <span class="attr">mode</span> –&gt;</span></span><br><span class="line">4.强制IE8使用IE6或IE5模式来解析</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">“X-UA-Compatible”</span> <span class="attr">content</span>=<span class="string">“IE</span>=<span class="string">6″</span>&gt;</span><span class="tag">&lt;<span class="name">!–</span> <span class="attr">IE6</span> <span class="attr">mode</span> –&gt;</span> </span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">“X-UA-Compatible”</span> <span class="attr">content</span>=<span class="string">“IE</span>=<span class="string">5″</span>&gt;</span><span class="tag">&lt;<span class="name">!–</span> <span class="attr">IE5</span> <span class="attr">mode</span> –&gt;</span> </span><br><span class="line"></span><br><span class="line">5.如果一个特定版本的IE支持所要求的兼容性模式多于一种，如：</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">“X-UA-Compatible”</span> <span class="attr">content</span>=<span class="string">“IE</span>=<span class="string">5;</span> <span class="attr">IE</span>=<span class="string">8″</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>二.设定网站服务器以指定预设兼容性模式</p><p>如果服务器是自己的话，可以在服务器上定义一个自订标头来为它们的网站预设一个特定的文件兼容性模式。<br>这个特定的方法取决于你的网站服务器。</p><p>录入，下列的 web.config文件使Microsoft Internet Information Services (IIS)能定义一个自订标头以自动使用IE7 mode来编译所有网页。</p><p>另外还有一起其他的解决方案，例如google的</p><p>ie7 – js中是一个JavaScript库（解决IE与W3C标准的冲突的JS库），使微软的Internet Explorer的行为像一个Web标准兼容的浏览器，支持更多的W3C标准，支持CSS2、CSS3选择器。<br>它修复了许多的HTML和CSS问题，并使 得透明PNG在IE5、IE6下正确显示。</p><p>使IE5,IE6兼容到IE7模式（推荐）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">!–[if</span> <span class="attr">lt</span> <span class="attr">IE</span> <span class="attr">7</span>]&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">”http://ie7-js.googlecode.com/svn/version/2.0(beta)/IE7.js”</span> <span class="attr">type</span>=<span class="string">”text/javascript”</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">![endif]–</span>&gt;</span></span><br><span class="line">使IE5,IE6,IE7兼容到IE8模式</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">!–[if</span> <span class="attr">lt</span> <span class="attr">IE</span> <span class="attr">8</span>]&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">”http://ie7-js.googlecode.com/svn/version/2.0(beta)/IE8.js”</span> <span class="attr">type</span>=<span class="string">”text/javascript”</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">![endif]–</span>&gt;</span></span><br><span class="line">使IE5,IE6,IE7,IE8兼容到IE9模式</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">!–[if</span> <span class="attr">lt</span> <span class="attr">IE</span> <span class="attr">9</span>]&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">”http://ie7-js.googlecode.com/svn/version/2.1(beta4)/IE9.js”</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">![endif]–</span>&gt;</span></span><br></pre></td></tr></table></figure><p>解决PNG显示问题</p><p>只需将透明png图片命名为*-trans.png</p><p>需要注意的是：此方法对背景平铺(background-repeat)和背景(background-position)无法起到任何作用,默认会占满整个容器。</p><p>转载：<a href="http://hi.baidu.com/myplan/blog/item/cdb09dfa1fa748a99f514626.html" target="_blank" rel="noopener">http://hi.baidu.com/myplan/blog/item/cdb09dfa1fa748a99f514626.html</a></p><p>三、<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" /><br>创建HTML5时发现这么一句话，不知其什么意思，百度如下：<br>这样写可以达到的效果是如果安装了GCF，则使用GCF来渲染页面，如果没安装GCF，则用最高版本的IE内核进行渲染。<br>Google Chrome Frame（谷歌内嵌浏览器框架GCF）。<br>这个插件可以让用户的IE浏览器外不变，但用户在浏览网页时，实际上使用的是Google Chrome浏览器内核，而且支持IE6、7、8等多个版本的IE浏览器。</p>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> HTML </tag>
            
            <tag> IE </tag>
            
            <tag> Meta </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Navigator.userAgent.toLowerCase()判断移动端类型</title>
      <link href="/2020/01/26/2020-1-26-Navigator-userAgent-toLowerCase/"/>
      <url>/2020/01/26/2020-1-26-Navigator-userAgent-toLowerCase/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ua = navigator.userAgent.toLowerCase();</span><br><span class="line"><span class="keyword">if</span> (<span class="regexp">/android|adr/gi</span>.test(ua)) &#123;</span><br><span class="line">    <span class="comment">// 安卓</span></span><br><span class="line">     </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="regexp">/\(i[^;]+;( U;)? CPU.+Mac OS X/gi</span>.test(ua))&#123;</span><br><span class="line">    <span class="comment">//苹果</span></span><br><span class="line">     </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="regexp">/iPad/gi</span>.test(ua))&#123;</span><br><span class="line">    <span class="comment">//ipad</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> userAgent </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>全局禁止鼠标右键菜单</title>
      <link href="/2020/01/25/2020-1-25-forbid-contextmenu/"/>
      <url>/2020/01/25/2020-1-25-forbid-contextmenu/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).bind(<span class="string">"contextmenu"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="built_in">document</span>).bind(<span class="string">"selectstart"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端如何检测系统黑暗模式(Dark Mode)</title>
      <link href="/2020/01/24/2020-1-24-Dark-Mode/"/>
      <url>/2020/01/24/2020-1-24-Dark-Mode/</url>
      
        <content type="html"><![CDATA[<h2 id="白天不知夜的黑"><a href="#白天不知夜的黑" class="headerlink" title="白天不知夜的黑"></a>白天不知夜的黑</h2><p>iOS 13 发布至今，除了带来无以计数的 bug 以外，还带来了在 Andorid Q 中就先一步实现的暗黑模式（dark mode）。基于 OLED 屏幕的特性，暗黑模式相对来说更为省电，良好的设计也能在黑夜中为用户提供更好的视觉体验。因此，在过去的一段时间里，各大 app 纷纷推出了针对暗黑模式的更新。从此暗黑模式的时代来临了。</p><p>那么问题来了，前端工程师如何为 web 应用实现暗黑模式呢？</p><p>在没有白天和暗黑模式都没有的黑夜里，我们通常可以通过 JavaScript 判断本地时间或者获取服务器时间来判断是否改为当前 web 应用添加暗黑模式的层叠样式表。这样做直观且粗暴，简单的是无论平台是否是支持暗黑模式的 iOS 13+ 还是不支持暗黑模式的 Ubuntu 12.04，用户都能获得“暗黑模式”的体验；粗暴的是，这个体验也就真的仅仅是体验而已了。且不说是否符合日出日落的规律，如果是 app 内嵌的 html 页面，大多数时候都会获得一个无法和 app 同昼同夜的糟糕体验。</p><p>那么为了和 OS 的暗黑模式同时同分同秒同生死，我们还有什么解决方案？幸运的是，媒体查询总是能救开发者于水火。</p><h2 id="prefers-color-scheme"><a href="#prefers-color-scheme" class="headerlink" title="prefers-color-scheme"></a>prefers-color-scheme</h2><p>media query 为开发者提供了系统主题检测的属性：prefers-color-scheme，有三个可用的值：no-preference、light 和 dark。</p><p>从值上很容易理解这个属性的作用，我们只要考虑如何使用即可：</p><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* light mode */</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">prefers-color-scheme:</span> light) &#123;</span><br><span class="line">  <span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#f0f0f0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* dark mode */</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">prefers-color-scheme:</span> dark) &#123;</span><br><span class="line">  <span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#3e3e3e</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">window</span>.matchMedia &amp;&amp; <span class="built_in">window</span>.matchMedia(<span class="string">'(prefers-color-scheme: dark)'</span>).matches) &#123;</span><br><span class="line">  <span class="comment">// dark mode</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> CSS </tag>
            
            <tag> 黑暗模式 </tag>
            
            <tag> Dark Mode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何只在IE上加载CSS样式表</title>
      <link href="/2020/01/23/2020-1-23-IE-only-CSS/"/>
      <url>/2020/01/23/2020-1-23-IE-only-CSS/</url>
      
        <content type="html"><![CDATA[<h2 id="IE9以及低于IE9版本"><a href="#IE9以及低于IE9版本" class="headerlink" title="IE9以及低于IE9版本 :"></a>IE9以及低于IE9版本 :</h2><p>可以使用条件注释语句来加载特定于ie的样式表。如下所示，使用外部样式表。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--[if IE]&gt;</span></span><br><span class="line"><span class="comment">  &lt;link rel="stylesheet" type="text/css" href="all-ie-only.css" /&gt;</span></span><br><span class="line"><span class="comment">&lt;![endif]--&gt;</span></span><br></pre></td></tr></table></figure><h2 id="IE10或IE11"><a href="#IE10或IE11" class="headerlink" title="IE10或IE11:"></a>IE10或IE11:</h2><p>使用媒体查询（-ms-high-contrast）来加载样式表。由于-ms-high-contrast是微软特有的(并且只在IE 10+中可用)，所以只能在Internet Explorer 10或更高版本中解析。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> all <span class="keyword">and</span> (<span class="attribute">-ms-high-contrast:</span> none), (<span class="attribute">-ms-high-contrast:</span> active) &#123;</span><br><span class="line">     <span class="comment">/* IE10+ CSS styles go here */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="微软-Edge12"><a href="#微软-Edge12" class="headerlink" title="微软 Edge12 :"></a>微软 Edge12 :</h2><p>可以使用@supports</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@supports</span> (<span class="attribute">-ms-accelerator:</span>true) &#123;</span><br><span class="line">  <span class="comment">/* IE Edge 12+ CSS styles go here */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>如果我们想只针对IE加载样式表，只需要设置条件注释和-ms-high-contrast媒体查询即可。</p>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> CSS </tag>
            
            <tag> IE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实现访问Apache时的目录浏览功能</title>
      <link href="/2020/01/22/2020-1-22-Apache-folder-view/"/>
      <url>/2020/01/22/2020-1-22-Apache-folder-view/</url>
      
        <content type="html"><![CDATA[<h1 id="Apache-File-List-View"><a href="#Apache-File-List-View" class="headerlink" title="Apache File List View"></a>Apache File List View</h1><h3 id="1-实现原理"><a href="#1-实现原理" class="headerlink" title="1. 实现原理"></a>1. 实现原理</h3><p>通过apache的一个模块：mod_autoindex</p><p>这个模块的主要功能是自动对目录中的内容生成列表，这样当我们对服务器地址进行访问时在浏览器端可以看到访问目录下文件列表，点击它浏览器能打开的则打开查看，不能打开的则弹出是否保存的对话框，当然也可以右键链接另存为，这样就实现了访问下载文件的功能</p><p>对于mod_autoindex更多知识可以查看<a href="http://www.jinbuguo.com/apache/menu22/mod/mod_autoindex.html" target="_blank" rel="noopener">apache手册</a>或者可以点击下载<a href="http://download.csdn.net/detail/chen_gong1992/9700259" target="_blank" rel="noopener">apache中文手册</a></p><h3 id="2-配置httpd-conf文件"><a href="#2-配置httpd-conf文件" class="headerlink" title="2. 配置httpd.conf文件"></a>2. 配置httpd.conf文件</h3><p>apache的目录索引样式用mod_autoindex模块一般默认为开启状态。</p><p>找到httpd.conf文件，查找下面的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory&gt;</span><br><span class="line">    Options FollowSymLinks</span><br><span class="line">    AllowOverride None</span><br><span class="line">    Order deny, allow</span><br><span class="line">#   Deny from all</span><br><span class="line">    Allow from all</span><br><span class="line">&lt;&#x2F;Directory&gt;</span><br></pre></td></tr></table></figure><p>如果有#号注释则去掉，没有这句话就补上去。这样就开启了mod_autoindex</p><p>LoadModule autoindex_module modules/mod_autoindex.so</p><p>另外，检查一下访问权限，如果发现下面有deny from all请注释掉，改成allow from all。</p><h3 id="3-设置请求目录"><a href="#3-设置请求目录" class="headerlink" title="3.设置请求目录"></a>3.设置请求目录</h3><p>当从服务器请求一个目录的时候，可能来自: </p><ul><li>mod_dir的DirectoryIndex指定首页 </li><li>mod_autoindex目录</li></ul><p>如果你想直接访问mod_autoindex目录列表,那就删除服务器目录下的mod_dir的DirectoryIndex指定首页，或者在配置文件httpd.conf中修改。</p><h3 id="4-优化显示"><a href="#4-优化显示" class="headerlink" title="4.优化显示"></a>4.优化显示</h3><p>将下面的代码加到httpd.conf文件中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Options Indexes FollowSymLinks</span><br><span class="line">IndexOptions FancyIndexing FoldersFirst NameWidth&#x3D;* DescriptionWidth&#x3D;* SuppressHTMLPreamble HTMLTable</span><br><span class="line">IndexOptions Charset&#x3D;utf-8 IconHeight&#x3D;16 IconWidth&#x3D;16 SuppressRules</span><br><span class="line">IndexIgnore web header.html footer.html actions defects</span><br><span class="line">HeaderName &#x2F;web&#x2F;header.html</span><br><span class="line">ReadmeName &#x2F;web&#x2F;footer.html</span><br><span class="line">Include conf&#x2F;extra&#x2F;httpd-autoindex.conf</span><br><span class="line">IndexOrderDefault Ascending Date</span><br><span class="line">ServerSignature Off</span><br></pre></td></tr></table></figure><p>下面对上面的配置代码进行解读:</p><ul><li><strong>Indexes</strong>：索引, 默认是开启索引浏览,如果不想开启前面加个-, -Indexes就是禁止目录浏览</li><li><strong>IndexOptions</strong>：FancyIndexing 开启富样式索引，这里说一下：IndexOptions指令的FancyIndexing选项可以让列表头部增加可以产生按Name, Lastmodified, Size, Description排序产生的目录列，跟在后面的命令这个主要是美化样式显示。</li><li><strong>FoldersFirst</strong>：文件夹优先，这里指让目录中的文件夹排在前面</li><li><strong>NameWidth</strong>、<strong>DescriptionWidth</strong>： 文件名和描述文字的长度，这里*表示长度自适应，当然默认的情况下是没有描述的，需要使用AddDescription指令添加描述SuppressHTMLPreamble 是去掉apache自动生成一些HTML代码 例如 Index/of</li><li><strong>ofHTMLTable</strong>：是启用HTML表格样式，以表格的方式展示列表 </li><li><strong>Charset=utf-8</strong>：设置字符集,建议用utf-8,用GB2312会乱码 </li><li><strong>IconHeight</strong>、<strong>IconWidth</strong>：设置图标的大小 </li><li><strong>SuppressRules</strong>：在FancyIndexing开启的情况下取消hr下划线 </li><li><strong>IgnoreCase</strong>：排序不区分大小写 </li><li><strong>IndexIgnore</strong>：设置哪些类型的文件不显示出来, 如IndexIgnore README .htaccess *.bak *~ </li><li><strong>HeaderName</strong>：/web/header.html 这个是头文件, 注意是绝对路径 </li><li><strong>ReadmeName</strong>：/web/footer.html 这个结尾的文件, appache如果发现了这些文件，就在文件列表之前首先显示这些文件的内容，可以看出，其实个性化的原理就是把Apache的目录列表嵌在了header.htm与footer.html中间的表格中，两个文件的其他部分都可以自定义内容的。</li><li><strong>Include conf/extra/httpd-autoindex.conf</strong>： 加载apache目录下的extra/httpd-autoindex.conf文件为文件添加小图标，httpd-autoindex.conf文件里有关于小图标的设置，这里就不展开了。</li><li><strong>IndexOrderDefault Ascending Date</strong>：默认按文件的创建时间排序； </li><li><strong>ServerSignature Off</strong>：防止服务器的信息泄露 这个不用管，off掉就行 </li></ul><p>==header.html==</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!Doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Mr.CG的站点<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">        p&#123;</span><br><span class="line">            font-family: "微软雅黑";</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#0080FF</span>;</span></span><br><span class="line">            font-weight: bolder;</span><br><span class="line"><span class="css">            <span class="selector-tag">font-size</span><span class="selector-pseudo">:36px</span>;</span></span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">        h3&#123;</span><br><span class="line">            width: 79%;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            text-align: right;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#757575</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">        table &#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">width</span><span class="selector-pseudo">:80</span>%;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border-collapse</span><span class="selector-pseudo">:collapse</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-id">#858585</span> <span class="selector-tag">solid</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">margin</span><span class="selector-pseudo">:0</span> <span class="selector-tag">auto</span></span></span><br><span class="line">        &#125;</span><br><span class="line">        table td &#123; </span><br><span class="line"><span class="css">            <span class="selector-tag">line-height</span><span class="selector-pseudo">:17px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-size</span><span class="selector-pseudo">:15px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">text-align</span><span class="selector-pseudo">:left</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-id">#858585</span> <span class="selector-tag">solid</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">table</span> <span class="selector-tag">td</span><span class="selector-pseudo">:nth-child(1)</span>&#123; </span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span><span class="selector-pseudo">:20px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">text-align</span><span class="selector-pseudo">:right</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">table</span> <span class="selector-tag">tr</span><span class="selector-pseudo">:nth-child(odd)</span>&#123; </span></span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>:<span class="selector-id">#f0f0f0</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">table</span> <span class="selector-tag">tr</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>:<span class="selector-id">#ACD6FF</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>:<span class="selector-id">#990000</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">        table th &#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>:<span class="selector-id">#999999</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">line-height</span><span class="selector-pseudo">:17px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">table</span> <span class="selector-tag">th</span>  <span class="selector-tag">a</span><span class="selector-pseudo">:link</span> &#123;</span></span><br><span class="line">            text-decoration: none; </span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>:<span class="selector-id">#FFFFFF</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">table</span> <span class="selector-tag">th</span>  <span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>:<span class="selector-id">#FFFFFF</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">table</span> <span class="selector-tag">th</span>  <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>:<span class="selector-id">#FFFF00</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Welcome<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>==footer.html==</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span> Power by Mr.CG<span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Server </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 配置 </tag>
            
            <tag> Config </tag>
            
            <tag> Apache </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>彻底删除windows.old</title>
      <link href="/2020/01/21/2020-1-21-delete-windows-old/"/>
      <url>/2020/01/21/2020-1-21-delete-windows-old/</url>
      
        <content type="html"><![CDATA[<p>管理员身份运行CMD  rd/s/q c:\Windows.old</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置 </tag>
            
            <tag> Config </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>页面跳转至指定位置</title>
      <link href="/2020/01/20/2020-1-20-jump-to-target-area-in-page/"/>
      <url>/2020/01/20/2020-1-20-jump-to-target-area-in-page/</url>
      
        <content type="html"><![CDATA[<h6 id="方法主要利用scrolltop值做运动，-用于到达用户指定的位置（如返回顶部把参数target设置为0即可），处理了多种情况如-scrolltop-gt-目标值-向上运动-，等4种情况-，-代码及用法贴上："><a href="#方法主要利用scrolltop值做运动，-用于到达用户指定的位置（如返回顶部把参数target设置为0即可），处理了多种情况如-scrolltop-gt-目标值-向上运动-，等4种情况-，-代码及用法贴上：" class="headerlink" title="方法主要利用scrolltop值做运动， 用于到达用户指定的位置（如返回顶部把参数target设置为0即可），处理了多种情况如 scrolltop &gt; 目标值 向上运动 ，等4种情况  ， 代码及用法贴上："></a>方法主要利用scrolltop值做运动， 用于到达用户指定的位置（如返回顶部把参数target设置为0即可），处理了多种情况如 scrolltop &gt; 目标值 向上运动 ，等4种情况  ， 代码及用法贴上：</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">goTo = <span class="function"><span class="keyword">function</span>(<span class="params">target</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> scrollT = <span class="built_in">document</span>.body.scrollTop|| <span class="built_in">document</span>.documentElement.scrollTop</span><br><span class="line">    <span class="keyword">if</span> (scrollT &gt;target) &#123;</span><br><span class="line">        <span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> scrollT = <span class="built_in">document</span>.body.scrollTop|| <span class="built_in">document</span>.documentElement.scrollTop</span><br><span class="line">            <span class="keyword">var</span> step = <span class="built_in">Math</span>.floor(-scrollT/<span class="number">6</span>);</span><br><span class="line">            <span class="built_in">document</span>.documentElement.scrollTop = <span class="built_in">document</span>.body.scrollTop = step + scrollT;</span><br><span class="line">            <span class="keyword">if</span> (scrollT &lt;= target) &#123;</span><br><span class="line">                <span class="built_in">document</span>.body.scrollTop = <span class="built_in">document</span>.documentElement.scrollTop = target;</span><br><span class="line">                clearTimeout(timer);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">20</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (scrollT == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> scrollT = <span class="built_in">document</span>.body.scrollTop|| <span class="built_in">document</span>.documentElement.scrollTop</span><br><span class="line">            <span class="keyword">var</span> step = <span class="built_in">Math</span>.floor(<span class="number">300</span>/<span class="number">3</span>*<span class="number">0.7</span>);</span><br><span class="line">            <span class="built_in">document</span>.documentElement.scrollTop = <span class="built_in">document</span>.body.scrollTop = step + scrollT;</span><br><span class="line">            <span class="built_in">console</span>.log(scrollT)</span><br><span class="line">            <span class="keyword">if</span> (scrollT &gt;= target) &#123;</span><br><span class="line">                <span class="built_in">document</span>.body.scrollTop = <span class="built_in">document</span>.documentElement.scrollTop = target;</span><br><span class="line">                clearTimeout(timer);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,<span class="number">20</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (scrollT &lt; target) &#123;</span><br><span class="line">        <span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> scrollT = <span class="built_in">document</span>.body.scrollTop|| <span class="built_in">document</span>.documentElement.scrollTop</span><br><span class="line">            <span class="keyword">var</span> step = <span class="built_in">Math</span>.floor(scrollT/<span class="number">6</span>);</span><br><span class="line">            <span class="built_in">document</span>.documentElement.scrollTop = <span class="built_in">document</span>.body.scrollTop = step + scrollT;</span><br><span class="line">            <span class="keyword">if</span> (scrollT &gt;= target) &#123;</span><br><span class="line">                <span class="built_in">document</span>.body.scrollTop = <span class="built_in">document</span>.documentElement.scrollTop = target;</span><br><span class="line">                clearTimeout(timer);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,<span class="number">20</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (target == scrollT) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="用法-function-target-目前唯一target（目标距离number）"><a href="#用法-function-target-目前唯一target（目标距离number）" class="headerlink" title="用法 function(target) / / 目前唯一target（目标距离number）"></a>用法 function(target) / / 目前唯一target（目标距离number）</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">on(goPs,<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; goTo(<span class="number">2450</span>) &#125;); <span class="comment">//运动到scrolltop值为2450地位置，下面也一样， 运动到指定的位置</span></span><br><span class="line">on(goTop,<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; buffer.goTo(<span class="number">0</span>) &#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> Url </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序，实现 watch 属性，监听数据变化</title>
      <link href="/2020/01/19/2020-1-19-wechat-miniapp-watch/"/>
      <url>/2020/01/19/2020-1-19-wechat-miniapp-watch/</url>
      
        <content type="html"><![CDATA[<h1 id="微信小程序，实现-watch-属性，监听数据变化"><a href="#微信小程序，实现-watch-属性，监听数据变化" class="headerlink" title="微信小程序，实现 watch 属性，监听数据变化"></a>微信小程序，实现 watch 属性，监听数据变化</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>在微信小程序实现 watch 属性，监听 data 中的属性，当被监听属性的值改变时，执行我们指定的方法。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>Vue 的 computed 和 watch 可以很方便的检测数据的变化，从而做出相应的改变，所以，模仿 vue 肯定是一个不错的选择。</p><p>与 Vue 一样，我们使用 ES5 的Object.defineProperty()方法，劫持对象的 <strong>getter/setter</strong>，从而实现给对象赋值时(调用 setter)，执行 watch 对象中相对应的函数，达到监听效果。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>不啰嗦，上代码，真实可用。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">observe</span>(<span class="params">obj, key, watchFun, deep, page</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> val = obj[key];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (val != <span class="literal">null</span> &amp;&amp; <span class="keyword">typeof</span> val === <span class="string">"object"</span> &amp;&amp; deep) &#123;</span><br><span class="line">    <span class="built_in">Object</span>.keys(val).forEach(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">      observe(val, item, watchFun, deep, page);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Object</span>.defineProperty(obj, key, &#123;</span><br><span class="line">    configurable: <span class="literal">true</span>,</span><br><span class="line">    enumerable: <span class="literal">true</span>,</span><br><span class="line">    <span class="keyword">set</span>: function(value) &#123;</span><br><span class="line">      watchFun.call(page, value, val);</span><br><span class="line">      val = value;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (deep) &#123;</span><br><span class="line">        observe(obj, key, watchFun, deep, page);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">get</span>: function() &#123;</span><br><span class="line">      <span class="keyword">return</span> val;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">setWatcher</span>(<span class="params">page</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> data = page.data;</span><br><span class="line">  <span class="keyword">let</span> watch = page.watch;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">Object</span>.keys(watch).forEach(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> targetData = data;</span><br><span class="line">    <span class="keyword">let</span> keys = item.split(<span class="string">"."</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; keys.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">      targetData = targetData[keys[i]];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> targetKey = keys[keys.length - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> watchFun = watch[item].handler || watch[item];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> deep = watch[item].deep;</span><br><span class="line">    observe(targetData, targetKey, watchFun, deep, page);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h4><ul><li>watch 只能监听已存在的属性，数组的 push()，pop()等方法并不会触发监听函数。</li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> watch <span class="keyword">from</span> <span class="string">"./watch.js"</span>;</span><br><span class="line"></span><br><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    name: <span class="string">"二狗子"</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  onLoad() &#123;</span><br><span class="line">    watch.setWatcher(<span class="keyword">this</span>);</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  watch: &#123;</span><br><span class="line">    name: <span class="function"><span class="keyword">function</span>(<span class="params">newVal, oldVal</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(newVal, oldVal);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="首先在需要的页面引入"><a href="#首先在需要的页面引入" class="headerlink" title="首先在需要的页面引入"></a>首先在需要的页面引入</h4><ul><li>在 Page 的onLoad钩子设置监听器</li><li>然后就可以愉快的使用了。</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>watch 会使代码更简洁，逻辑更清晰，在响应式数据处理上很方便。</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> 小程序 </tag>
            
            <tag> 微信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数组比最大值和最小值</title>
      <link href="/2020/01/18/2020-1-18-max-and-min-in-array/"/>
      <url>/2020/01/18/2020-1-18-max-and-min-in-array/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Array</span>.prototype.max = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Math</span>.max.apply(&#123;&#125;,<span class="keyword">this</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Array</span>.prototype.min = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Math</span>.min.apply(&#123;&#125;,<span class="keyword">this</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">array.min()</span><br><span class="line"></span><br><span class="line">array.max()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查找并显示所有LocalStorage数据</title>
      <link href="/2020/01/17/2020-1-17-find-and-display-all-localstorage-data/"/>
      <url>/2020/01/17/2020-1-17-find-and-display-all-localstorage-data/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">findAllLocalStorageItems</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> itemList = <span class="built_in">document</span>.getElementById(<span class="string">'itemlist'</span>);</span><br><span class="line">    </span><br><span class="line">    itemList.innerHTML = <span class="string">''</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i&lt;localStorage.length; i++)&#123;</span><br><span class="line">        <span class="keyword">var</span> key = localStorage.key(i);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> item = localStorage.getItem(key);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> newItem = <span class="built_in">document</span>.createElement(<span class="string">'li'</span>);</span><br><span class="line">        newItem.innerHTML = key + <span class="string">": "</span> + item;</span><br><span class="line">        itemList.appendChild(newItem);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> LocalStorage </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>根据JSON数据动态生成表格，并可编辑</title>
      <link href="/2020/01/16/2020-1-16-JSON-to-editable-table/"/>
      <url>/2020/01/16/2020-1-16-JSON-to-editable-table/</url>
      
        <content type="html"><![CDATA[<p>JSON</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">getdata([</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="string">"1"</span>, </span><br><span class="line">        <span class="attr">"国家"</span>: <span class="string">"中国"</span>, </span><br><span class="line">        <span class="attr">"capital"</span>: <span class="string">"北京"</span>, </span><br><span class="line">        <span class="attr">"hhh"</span>: <span class="string">"dfa"</span>, </span><br><span class="line">        <span class="attr">"location"</span>: <span class="string">"Asia"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="string">"2"</span>, </span><br><span class="line">        <span class="attr">"国家"</span>: <span class="string">"美国"</span>, </span><br><span class="line">        <span class="attr">"capital"</span>: <span class="string">"纽约"</span>, </span><br><span class="line">        <span class="attr">"hhh"</span>: <span class="string">"dfa"</span>, </span><br><span class="line">        <span class="attr">"location"</span>: <span class="string">"America"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="string">"3"</span>, </span><br><span class="line">        <span class="attr">"国家"</span>: <span class="string">"英国"</span>, </span><br><span class="line">        <span class="attr">"capital"</span>: <span class="string">"伦敦"</span>, </span><br><span class="line">        <span class="attr">"hhh"</span>: <span class="string">"dfa"</span>, </span><br><span class="line">        <span class="attr">"location"</span>: <span class="string">"Europe"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="string">"4"</span>, </span><br><span class="line">        <span class="attr">"国家"</span>: <span class="string">"日本"</span>, </span><br><span class="line">        <span class="attr">"capital"</span>: <span class="string">"东京"</span>, </span><br><span class="line">        <span class="attr">"hhh"</span>: <span class="string">"dfa"</span>, </span><br><span class="line">        <span class="attr">"location"</span>: <span class="string">"Asia"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="string">"5"</span>, </span><br><span class="line">        <span class="attr">"国家"</span>: <span class="string">"韩国"</span>, </span><br><span class="line">        <span class="attr">"capital"</span>: <span class="string">"首尔"</span>, </span><br><span class="line">        <span class="attr">"hhh"</span>: <span class="string">"dfa"</span>, </span><br><span class="line">        <span class="attr">"location"</span>: <span class="string">"Asia"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="string">"6"</span>, </span><br><span class="line">        <span class="attr">"国家"</span>: <span class="string">"法国"</span>, </span><br><span class="line">        <span class="attr">"capital"</span>: <span class="string">"柏林"</span>, </span><br><span class="line">        <span class="attr">"hhh"</span>: <span class="string">"dfa"</span>, </span><br><span class="line">        <span class="attr">"location"</span>: <span class="string">"Europe"</span></span><br><span class="line">    &#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure><p>HTML</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"../../../ICPAS/Wnmp/WWW/css/bootstrap.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12 col-sm-12 col-xs-12"</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- winbatchadd Modal --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"modal"</span> <span class="attr">class</span>=<span class="string">"modal fade"</span> <span class="attr">tabindex</span>=<span class="string">"-1"</span> <span class="attr">role</span>=<span class="string">"dialog"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-dialog"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-content"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-header"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">"modal-title"</span> &gt;</span>编辑<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-body"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>  <span class="attr">id</span>=<span class="string">"modal_content"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-footer"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group btn-group-justified"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btnAdd"</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-success"</span>&gt;</span>确定<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.modal-content --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.modal --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- winbatchadd Modal --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../../../ICPAS/Wnmp/WWW/js/jquery-1.11.3.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../../../ICPAS/Wnmp/WWW/js/bootstrap.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"3.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>  <span class="attr">src</span>=<span class="string">"4.json?callback=getdata"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JavaScript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript Document</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> bgColor;</span><br><span class="line"><span class="keyword">var</span> list = [];</span><br><span class="line"></span><br><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;list.length;i++)&#123;</span><br><span class="line">list[i].toolbar = <span class="string">'&lt;button class="btn btn-link btn-block" onclick="edit1('</span> + i + <span class="string">')"&gt;编辑&lt;/button&gt;'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> content = <span class="built_in">window</span>.document.getElementById(<span class="string">"content"</span>);</span><br><span class="line"><span class="comment">//创建表格</span></span><br><span class="line"><span class="keyword">var</span> table = <span class="built_in">window</span>.document.createElement(<span class="string">"table"</span>);</span><br><span class="line">table.border = <span class="number">1</span>;</span><br><span class="line">table.setAttribute(<span class="string">'class'</span>,<span class="string">'table table-responsive table-bordered'</span>);</span><br><span class="line">content.appendChild(table);</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建标题行</span></span><br><span class="line"><span class="keyword">var</span> thead = <span class="built_in">window</span>.document.createElement(<span class="string">"thead"</span>);</span><br><span class="line"><span class="keyword">var</span> itemHead = list[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> index <span class="keyword">in</span> itemHead) &#123;</span><br><span class="line"><span class="comment">//创建标题单元格添加到thead</span></span><br><span class="line"><span class="keyword">var</span> th = <span class="built_in">window</span>.document.createElement(<span class="string">"th"</span>);</span><br><span class="line">th.style.textAlign = <span class="string">"center"</span>;</span><br><span class="line">th.innerHTML = index;</span><br><span class="line">thead.appendChild(th);</span><br><span class="line">&#125;</span><br><span class="line">table.appendChild(thead);</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历对象，创建行和单元格</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; list.length; i++) &#123;</span><br><span class="line"><span class="keyword">var</span> item = list[i];</span><br><span class="line"><span class="comment">//创建行</span></span><br><span class="line"><span class="keyword">var</span> tr = <span class="built_in">window</span>.document.createElement(<span class="string">"tr"</span>);</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">tr.style.backgroundColor = <span class="string">"white"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">tr.style.backgroundColor = <span class="string">"whitesmoke"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//注册指向行的事件</span></span><br><span class="line">   tr.onmouseover = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">bgColor = <span class="keyword">this</span>.style.backgroundColor;</span><br><span class="line"><span class="keyword">this</span>.style.backgroundColor = <span class="string">"lightgray"</span>;</span><br><span class="line">&#125;</span><br><span class="line">tr.onmouseout = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.style.backgroundColor = bgColor;</span><br><span class="line">&#125;</span><br><span class="line">table.appendChild(tr);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> item) &#123;</span><br><span class="line"><span class="comment">//创建单元格</span></span><br><span class="line"><span class="keyword">var</span> td = <span class="built_in">window</span>.document.createElement(<span class="string">"td"</span>);</span><br><span class="line">td.innerHTML = item[key];</span><br><span class="line">td.style.textAlign = <span class="string">"center"</span>;</span><br><span class="line">tr.appendChild(td);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$(<span class="string">'#btnAdd'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> label = $(<span class="string">'#modal_content'</span>).find(<span class="string">'label'</span>);</span><br><span class="line"><span class="keyword">var</span> input = $(<span class="string">'#modal_content'</span>).find(<span class="string">'input'</span>);</span><br><span class="line"><span class="keyword">var</span> object = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i&lt;label.length;i++)&#123;</span><br><span class="line">object[label[i].innerText] = input[i].value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(object);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">edit1</span>(<span class="params">index</span>)</span>&#123;</span><br><span class="line">$(<span class="string">'#modal_content'</span>).empty();</span><br><span class="line"><span class="keyword">var</span> modal_content = <span class="built_in">document</span>.getElementById(<span class="string">'modal_content'</span>);</span><br><span class="line"><span class="keyword">var</span> data = list[index]</span><br><span class="line"><span class="comment">//console.log(data);</span></span><br><span class="line"><span class="keyword">delete</span> data.toolbar;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> index <span class="keyword">in</span> data)&#123;</span><br><span class="line"><span class="comment">//console.log(modal_content);</span></span><br><span class="line"><span class="keyword">var</span> form_group = <span class="built_in">window</span>.document.createElement(<span class="string">"div"</span>);</span><br><span class="line">form_group.setAttribute(<span class="string">'class'</span>,<span class="string">'form-group col-md-6 col-sm-6 col-xs-6'</span>);</span><br><span class="line">modal_content.appendChild(form_group);</span><br><span class="line"><span class="keyword">var</span> label = <span class="built_in">window</span>.document.createElement(<span class="string">"label"</span>);</span><br><span class="line">label.innerHTML = index;</span><br><span class="line">label.setAttribute(<span class="string">'class'</span>,<span class="string">'control-label'</span>);</span><br><span class="line">form_group.appendChild(label);</span><br><span class="line"><span class="keyword">var</span> input = <span class="built_in">window</span>.document.createElement(<span class="string">"input"</span>);</span><br><span class="line">input.value = data[index];</span><br><span class="line">input.setAttribute(<span class="string">'class'</span>,<span class="string">'form-control'</span>);</span><br><span class="line">form_group.appendChild(input);</span><br><span class="line">&#125;</span><br><span class="line">$(<span class="string">'#modal'</span>).modal(<span class="string">'show'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getdata</span>(<span class="params">result</span>)</span>&#123;</span><br><span class="line">list = result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> JSON </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式合集</title>
      <link href="/2020/01/15/2020-1-15-reg-pack/"/>
      <url>/2020/01/15/2020-1-15-reg-pack/</url>
      
        <content type="html"><![CDATA[<h2 id="一、校验数字的表达式"><a href="#一、校验数字的表达式" class="headerlink" title="一、校验数字的表达式"></a>一、校验数字的表达式</h2><pre><code>- 数字：^[0-9]*$- n位的数字：^d{n}$- 至少n位的数字：^d{n,}$- m-n位的数字：^d{m,n}$- 零和非零开头的数字：^(0|[1-9][0-9]*)$- 非零开头的最多带两位小数的数字：^([1-9][0-9]*)+(.[0-9]{1,2})?$- 带1-2位小数的正数或负数：^(-)?d+(.d{1,2})?$- 正数、负数、和小数：^(-|+)?d+(.d+)?$- 有两位小数的正实数：^[0-9]+(.[0-9]{2})?$- 有1~3位小数的正实数：^[0-9]+(.[0-9]{1,3})?$- 非零的正整数：^[1-9]d*$ 或 ^([1-9][0-9]*){1,3}$ 或 ^+?[1-9][0-9]*$- 非零的负整数：^-[1-9][]0-9&quot;*$ 或 ^-[1-9]d*$- 非负整数：^d+$ 或 ^[1-9]d*|0$- 非正整数：^-[1-9]d*|0$ 或 ^((-d+)|(0+))$- 非负浮点数：^d+(.d+)?$ 或 ^[1-9]d*.d*|0.d*[1-9]d*|0?.0+|0$- 非正浮点数：^((-d+(.d+)?)|(0+(.0+)?))$ 或 ^(-([1-9]d*.d*|0.d*[1-9]d*))|0?.0+|0$- 正浮点数：^[1-9]d*.d*|0.d*[1-9]d*$ 或 ^(([0-9]+.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*.[0-9]+)|([0-9]*[1-9][0-9]*))$- 负浮点数：^-([1-9]d*.d*|0.d*[1-9]d*)$ 或 ^(-(([0-9]+.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*.[0-9]+)|([0-9]*[1-9][0-9]*)))$- 浮点数：^(-?d+)(.d+)?$ 或 ^-?([1-9]d*.d*|0.d*[1-9]d*|0?.0+|0)$</code></pre><h2 id="二、校验字符的表达式"><a href="#二、校验字符的表达式" class="headerlink" title="二、校验字符的表达式"></a>二、校验字符的表达式</h2><pre><code>- 汉字：^[一-龥]{0,}$- 英文和数字：^[A-Za-z0-9]+$ 或 ^[A-Za-z0-9]{4,40}$- 长度为3-20的所有字符：^.{3,20}$- 由26个英文字母组成的字符串：^[A-Za-z]+$- 由26个大写英文字母组成的字符串：^[A-Z]+$- 由26个小写英文字母组成的字符串：^[a-z]+$- 由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$- 由数字、26个英文字母或者下划线组成的字符串：^w+$ 或 ^w{3,20}$- 中文、英文、数字包括下划线：^[一-龥A-Za-z0-9_]+$- 中文、英文、数字但不包括下划线等符号：^[一-龥A-Za-z0-9]+$ 或 ^[一-龥A-Za-z0-9]{2,20}$- 可以输入含有^%&amp;&apos;,;=?$&quot;等字符：[^%&amp;&apos;,;=?$&quot;]+ 12 禁止输入含有~的字符：[^~&quot;]+</code></pre><h2 id="三、特殊需求表达式"><a href="#三、特殊需求表达式" class="headerlink" title="三、特殊需求表达式"></a>三、特殊需求表达式</h2><pre><code>- Email地址：^w+([-+.]w+)*@w+([-.]w+)*.w+([-.]w+)*$- 域名：[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.?- InternetURL：[a-zA-z]+://[^s]* 或 ^http://([w-]+.)+[w-]+(/[w-./?%&amp;=]*)?$- 手机号码：^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])d{8}$- 电话号码(“XXX-XXXXXXX”、”XXXX-XXXXXXXX”、”XXX-XXXXXXX”、”XXX-XXXXXXXX”、”XXXXXXX”和”XXXXXXXX)：^((d{3,4}-)|d{3.4}-)?d{7,8}$- 国内电话号码(0511-4405222、021-87888822)：d{3}-d{8}|d{4}-d{7}- 身份证号(15位、18位数字)：^d{15}|d{18}$- 短身份证号码(数字、字母x结尾)：^([0-9]){7,18}(x|X)?$ 或 ^d{8,18}|[0-9x]{8,18}|[0-9X]{8,18}?$- 帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$- 密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：^[a-zA-Z]w{5,17}$- 强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：^(?=.*d)(?=.*[a-z])(?=.*[A-Z]).{8,10}$- 日期格式：^d{4}-d{1,2}-d{1,2}- 一年的12个月(01～09和1～12)：^(0?[1-9]|1[0-2])$- 一个月的31天(01～09和1～31)：^((0?[1-9])|((1|2)[0-9])|30|31)$</code></pre><h2 id="四、钱的输入格式"><a href="#四、钱的输入格式" class="headerlink" title="四、钱的输入格式"></a>四、钱的输入格式</h2><pre><code>1.有四种钱的表示形式我们可以接受:”10000.00” 和 “10,000.00”, 和没有 “分” 的 “10000” 和 “10,000”：^[1-9][0-9]*$2.这表示任意一个不以0开头的数字,但是,这也意味着一个字符”0”不通过,所以我们采用下面的形式：^(0|[1-9][0-9]*)$3.一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：^(0|-?[1-9][0-9]*)$4.这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉,因为钱总不能是负的吧.下面我们要加的是说明可能的小数部分：^[0-9]+(.[0-9]+)?$5.必须说明的是,小数点后面至少应该有1位数,所以”10.”是不通过的,但是 “10” 和 “10.2” 是通过的：^[0-9]+(.[0-9]{2})?$6.这样我们规定小数点后面必须有两位,如果你认为太苛刻了,可以这样：^[0-9]+(.[0-9]{1,2})?$7.这样就允许用户只写一位小数.下面我们该考虑数字中的逗号了,我们可以这样：^[0-9]{1,3}(,[0-9]{3})*(.[0-9]{1,2})?$8.1到3个数字,后面跟着任意个 逗号+3个数字,逗号成为可选,而不是必须：^([0-9]+|[0-9]{1,3}(,[0-9]{3})*)(.[0-9]{1,2})?$</code></pre><p>==备注：这就是最终结果了,别忘了”+”可以用”*”替代如果你觉得空字符串也可以接受的话(奇怪,为什么?)最后,别忘了在用函数时去掉去掉那个反斜杠,一般的错误都在这里==</p><h2 id="五、其他"><a href="#五、其他" class="headerlink" title="五、其他"></a>五、其他</h2><pre><code>- xml文件：^([a-zA-Z]+-?)+[a-zA-Z0-9]+\.[x|X][m|M][l|L]$- 中文字符的正则表达式：[一-龥]- 双字节字符：[^-ÿ] (包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))- 空白行的正则表达式：s* (可以用来删除空白行)- HTML标记的正则表达式：&lt;(S*?)[^&gt;]*&gt;.*?&lt;/&gt;|&lt;.*? /&gt; (网上流传的版本太糟糕，上面这个也仅仅能部分，对于复杂的嵌套标记依旧无能为力)- 首尾空白字符的正则表达式：^s*|s*$或(^s*)|(s*$) (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)- 腾讯QQ号：[1-9][0-9]{4,} (腾讯QQ号从10000开始)- 中国邮政编码：[1-9]d{5}(?!d) (中国邮政编码为6位数字)- IP地址：d+.d+.d+.d+ (提取IP地址时有用)- IP地址：((?:(?:25[0-5]|2[0-4]\d|[01]?\d?\d)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d?\d))</code></pre>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RegExp </tag>
            
            <tag> 正则 </tag>
            
            <tag> 基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>百度云TTS文字转语音</title>
      <link href="/2020/01/14/2020-1-14-Baidu-TTS/"/>
      <url>/2020/01/14/2020-1-14-Baidu-TTS/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>百度地图将文字转化为语音并播放<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 这里调用的是百度文字转语音开放API --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"ttsText"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"tts_btn"</span> <span class="attr">onclick</span>=<span class="string">"doTTS()"</span> <span class="attr">value</span>=<span class="string">"播放"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">doTTS</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> ttsText = <span class="built_in">document</span>.getElementById(<span class="string">'ttsText'</span>).value;</span></span><br><span class="line">                </span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> ttsAudio = <span class="keyword">new</span> Audio();</span></span><br><span class="line"><span class="actionscript">                ttsAudio.src = <span class="string">'http://tts.baidu.com/text2audio?lan=zh&amp;ie=UTF-8&amp;per=3&amp;spd=5&amp;text='</span> + ttsText</span></span><br><span class="line">                ttsAudio.play();</span><br><span class="line">            &#125;</span><br><span class="line">            /*</span><br><span class="line">            代码中改变传参可更改配置：</span><br><span class="line">            </span><br><span class="line">            lan=zh（语言zh:中文；en:英文；fr:法文；）</span><br><span class="line">            </span><br><span class="line">            ie=UTF-8（字符集）</span><br><span class="line">            </span><br><span class="line">            per=3（每3个字符停顿）</span><br><span class="line">            </span><br><span class="line">            spd=5（语音播放速度，数字越大越快0-15）</span><br><span class="line">            </span><br><span class="line">            text=“”（需要转换的文字）</span><br><span class="line">            */</span><br><span class="line">            <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> 百度 </tag>
            
            <tag> TTS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>纯CSS仿iOS开关</title>
      <link href="/2020/01/13/2020-1-13-ios-swicth-button-css/"/>
      <url>/2020/01/13/2020-1-13-ios-swicth-button-css/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,chrome=1"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1,maximum-scale=1, user-scalable=no"</span> <span class="attr">name</span>=<span class="string">"viewport"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css">            <span class="selector-class">.Switch</span> &#123;</span></span><br><span class="line">                margin-top: auto;</span><br><span class="line">                margin-right: auto;</span><br><span class="line">                margin-left: auto;</span><br><span class="line">                margin-bottom: auto;</span><br><span class="line">                padding: 0;</span><br><span class="line">                width: 800px;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.Switch</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">                clear: both;</span><br><span class="line">                line-height: 44px;</span><br><span class="line"><span class="css">                <span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#CCC</span>;</span></span><br><span class="line">                list-style: none;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.Switch</span> <span class="selector-tag">input</span> &#123;</span></span><br><span class="line">                display: none</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.Switch</span> <span class="selector-tag">label</span> &#123;</span></span><br><span class="line">                width: 52px;</span><br><span class="line"><span class="css">                <span class="selector-tag">background</span>: <span class="selector-id">#CCC</span>;</span></span><br><span class="line">                height: 28px;</span><br><span class="line">                border-radius: 14px;</span><br><span class="line">                float: right;</span><br><span class="line">                margin: 8px 10px 0 0;</span><br><span class="line"><span class="css">                <span class="selector-tag">box-shadow</span>: 0 1<span class="selector-tag">px</span> 2<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0,0,0,<span class="selector-class">.1</span>) <span class="selector-tag">inset</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.Switch</span> <span class="selector-tag">label</span> <span class="selector-tag">em</span> &#123;</span></span><br><span class="line">                width: 26px;</span><br><span class="line">                height: 26px;</span><br><span class="line">                float: left;</span><br><span class="line">                margin: 1px;</span><br><span class="line">                border-radius: 13px;</span><br><span class="line"><span class="css">                <span class="selector-tag">box-shadow</span>: 2<span class="selector-tag">px</span> 3<span class="selector-tag">px</span> 8<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0,0,0,<span class="selector-class">.1</span>);</span></span><br><span class="line"><span class="css">                <span class="selector-tag">background</span>: <span class="selector-id">#FFF</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.Switch</span> <span class="selector-tag">input</span><span class="selector-pseudo">:checked</span> + <span class="selector-tag">label</span> &#123;</span></span><br><span class="line"><span class="css">                <span class="selector-tag">background</span>: <span class="selector-id">#a4d714</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.Switch</span> <span class="selector-tag">input</span><span class="selector-pseudo">:checked</span> + <span class="selector-tag">label</span> <span class="selector-tag">em</span> &#123;</span></span><br><span class="line">                float: right;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.Switch</span> <span class="selector-tag">input</span><span class="selector-pseudo">:disabled</span> + <span class="selector-tag">label</span> &#123;</span></span><br><span class="line"><span class="css">                <span class="selector-tag">opacity</span>: 0<span class="selector-class">.5</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>开关测试2<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"Switch"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"Storage"</span> <span class="attr">id</span>=<span class="string">"date"</span> /&gt;</span></span><br><span class="line">                    流量不足提醒</span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"date"</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"Storage2"</span> <span class="attr">id</span>=<span class="string">"blance"</span> <span class="attr">checked</span> /&gt;</span></span><br><span class="line">                    余额不足提醒</span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"blance"</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"Storage2"</span> <span class="attr">id</span>=<span class="string">"integral"</span> <span class="attr">disabled</span> /&gt;</span></span><br><span class="line">                    积分兑换提醒</span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"integral"</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取今天日期</title>
      <link href="/2020/01/12/2020-1-12-get-today/"/>
      <url>/2020/01/12/2020-1-12-get-today/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> day1 = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="number">3</span>  day1.setDate(day1.getDate() - <span class="number">1</span>);</span><br><span class="line"><span class="number">4</span>  <span class="keyword">var</span> s1 = day1.format(<span class="string">"yyyy-MM-dd"</span>);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *对Date的扩展，将 Date 转化为指定格式的String</span></span><br><span class="line"><span class="comment"> *月(M)、日(d)、小时(h)、分(m)、秒(s)、季度(q) 可以用 1-2 个占位符，</span></span><br><span class="line"><span class="comment"> *年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字)</span></span><br><span class="line"><span class="comment"> *例子：</span></span><br><span class="line"><span class="comment"> *(new Date()).Format("yyyy-MM-dd hh:mm:ss.S") ==&gt; 2006-07-02 08:09:04.423</span></span><br><span class="line"><span class="comment"> *(new Date()).Format("yyyy-M-d h:m:s.S")      ==&gt; 2006-7-2 8:9:4.18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">Date</span>.prototype.format = <span class="function"><span class="keyword">function</span> (<span class="params">fmt</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> o = &#123;</span><br><span class="line">        <span class="string">"M+"</span>: <span class="keyword">this</span>.getMonth() + <span class="number">1</span>, <span class="comment">//月份</span></span><br><span class="line">        <span class="string">"d+"</span>: <span class="keyword">this</span>.getDate(), <span class="comment">//日</span></span><br><span class="line">        <span class="string">"h+"</span>: <span class="keyword">this</span>.getHours(), <span class="comment">//小时</span></span><br><span class="line">        <span class="string">"m+"</span>: <span class="keyword">this</span>.getMinutes(), <span class="comment">//分</span></span><br><span class="line">        <span class="string">"s+"</span>: <span class="keyword">this</span>.getSeconds(), <span class="comment">//秒</span></span><br><span class="line">        <span class="string">"q+"</span>: <span class="built_in">Math</span>.floor((<span class="keyword">this</span>.getMonth() + <span class="number">3</span>) / <span class="number">3</span>), <span class="comment">//季度</span></span><br><span class="line">        <span class="string">"S"</span>: <span class="keyword">this</span>.getMilliseconds() <span class="comment">//毫秒</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/(y+)/</span>.test(fmt)) fmt = fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="keyword">this</span>.getFullYear() + <span class="string">""</span>).substr(<span class="number">4</span> - <span class="built_in">RegExp</span>.$<span class="number">1.</span>length));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> o)</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"("</span> + k + <span class="string">")"</span>).test(fmt)) fmt = fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="built_in">RegExp</span>.$<span class="number">1.</span>length == <span class="number">1</span>) ? (o[k]) : ((<span class="string">"00"</span> + o[k]).substr((<span class="string">""</span> + o[k]).length)));</span><br><span class="line">    <span class="keyword">return</span> fmt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Date </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>防止恶意解析(禁止通过IP直接访问网站)</title>
      <link href="/2020/01/11/2020-1-11-forbid-IP-connection/"/>
      <url>/2020/01/11/2020-1-11-forbid-IP-connection/</url>
      
        <content type="html"><![CDATA[<h1 id="防止恶意解析"><a href="#防止恶意解析" class="headerlink" title="防止恶意解析"></a>防止恶意解析</h1><h2 id="禁止通过-IP-直接访问网站"><a href="#禁止通过-IP-直接访问网站" class="headerlink" title="禁止通过 IP 直接访问网站"></a>禁止通过 IP 直接访问网站</h2><ol><li>什么是恶意解析</li></ol><p>一般情况下，要使域名能访问到网站需要两步，第一步，将域名解析到网站所在的主机，第二步，在 web 服务器中将域名与相应的网站绑定。但是，如果通过主机 IP 能直接访问某网站，那么把域名解析到这个 IP 也将能访问到该网站，而无需在主机上绑定，也就是说任何人将任何域名解析到这个 IP 就能访问到这个网站。可能您并不介意通过别人的域名访问到您的网站，但是如果这个域名是未备案域名呢？一旦被查出，封 IP、拔线甚至罚款的后果都是需要您来承担的。某些别有用心的人，通过将未备案域名解析到别人的主机上，使其遭受损失，这是一种新兴的攻击手段。</p><ol start="2"><li>Apache 服务</li></ol><p>在用 apache 搭建的 WEB 服务器的时候，如何想只能通过设定的域名访问，而不能直接通过服务器的 IP 地址访问呢，有以下两种方法可以实现（当然肯定还会有其他方法可以实现），都是修改 httpd.conf 文件来实现的，下面举例说明。</p><pre><code>在httpd.conf文件最后面，加入以下代码</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">NameVirtualHost *:80</span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    ServerName 221.*.*.*</span><br><span class="line">    &lt;Location &#x2F;&gt;</span><br><span class="line">        Order Allow,Deny</span><br><span class="line">        Deny from all</span><br><span class="line">    &lt;&#x2F;Location&gt;</span><br><span class="line">&lt;&#x2F;VirtualHost&gt;</span><br><span class="line">　　　　</span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    DocumentRoot &quot;&#x2F;www&#x2F;web&quot;</span><br><span class="line">    ServerName www.wzlinux.com</span><br><span class="line">&lt;&#x2F;VirtualHost&gt;</span><br></pre></td></tr></table></figure><p>说明：上部分是实现拒绝直接通过 221.<em>.</em>.<em>这个 IP 的任何访问请求，这时如果你用 221.</em>.<em>.</em>访问，会提示拒绝访问。下部分就是允许通过 <a href="http://www.wzlinux.com" target="_blank" rel="noopener">www.wzlinux.com</a> 这个域名访问，主目录指向/www/web(这里假设你的网站的根目录是/www/web)。</p><ol start="3"><li>Tomcat 服务</li></ol><p>修改 server.xml 这个配置文件。</p><p>比如服务器 IP 地址是 192.168.1.2 ，相应域名是 <a href="http://www.wzlinux.com。" target="_blank" rel="noopener">www.wzlinux.com。</a></p><p>打开 %TOMCAT_HOME%/conf/server.xml 文件，找到 Engine 节点作如下 Xml 代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;Engine name&#x3D;&quot;Catalina&quot; defaultHost&#x3D;&quot;www.piis.cn&quot;&gt;</span><br><span class="line">　　&lt;Host name&#x3D;&quot;www.piis.cn&quot; appBase&#x3D;&quot;webapps&quot;</span><br><span class="line">　　      unpackWARs&#x3D;&quot;true&quot; autoDeploy&#x3D;&quot;true&quot;</span><br><span class="line">　　      xmlValidation&#x3D;&quot;false&quot; xmlNamespaceAware&#x3D;&quot;false&quot;&#x2F;&gt;</span><br><span class="line">　　&lt;Host name&#x3D;&quot;192.168.1.2&quot; appBase&#x3D;&quot;ipapps&quot;</span><br><span class="line">　　      unpackWARs&#x3D;&quot;true&quot; autoDeploy&#x3D;&quot;true&quot;</span><br><span class="line">　　      xmlValidation&#x3D;&quot;false&quot; xmlNamespaceAware&#x3D;&quot;false&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;Engine&gt;</span><br></pre></td></tr></table></figure><p>注意事项：</p><ol><li><p>Engine 节点配置的 defaultHost 表明缺省访问的 Host。defaultHost 对应的名称必须存在于 Engine 节点下配置的 host 节点中。</p></li><li><p>当一台机器有多个 IP，而按照规定只允许通过一个指定的域名访问时很有用。此时，把 defaultHost 指定为非域名对应的 host，这样不通过域名访问时就都定位到指定的非域名 HOST 了。</p></li><li><p>Host 节点 name 对应 IP 地址，以及域名。一个 Host 只有指定一个 IP 或域名。</p></li><li><p>Host 节点的 appBase ，对应的是存放 web 应用的目录。这里输入的目录相对于 %TOMCAT_HOME%，如上面的 <a href="http://www.wzlinux.com" target="_blank" rel="noopener">www.wzlinux.com</a> 对应的目录是 %TOMCAT_HOME%/webapps，而 192.168.1.2 对应的目录是 %TOMCAT_HOME%/ipapps。</p></li><li><p>Nginx 服务</p></li></ol><p>定义一个默认的空主机名，禁止其访问，需要通过的域名一定要在其他 server 配置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80 default;</span><br><span class="line">    server_name  &quot;&quot;;</span><br><span class="line">    return  444;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       80 default;</span><br><span class="line">    server_name  _;</span><br><span class="line">    return  444;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Server </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 配置 </tag>
            
            <tag> Config </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>输入密码检测大写是否锁定JS实现代码</title>
      <link href="/2020/01/10/2020-1-10-detect-caps-lock/"/>
      <url>/2020/01/10/2020-1-10-detect-caps-lock/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"passwd"</span> <span class="attr">id</span>=<span class="string">"loginPasswd"</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">style</span>=<span class="string">"*display:block;"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"color:#F90;padding:2px; position:absolute; display:none;"</span> <span class="attr">id</span>=<span class="string">"capital"</span>&gt;</span>大写锁定已开启</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        (<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> inputPWD = <span class="built_in">document</span>.getElementById(<span class="string">'loginPasswd'</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> capital = <span class="literal">false</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> capitalTip = &#123;</span></span><br><span class="line"><span class="javascript">                elem:<span class="built_in">document</span>.getElementById(<span class="string">'capital'</span>),</span></span><br><span class="line"><span class="actionscript">                toggle:<span class="function"><span class="keyword">function</span><span class="params">(s)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> sy = <span class="keyword">this</span>.elem.style;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> d = sy.display;</span></span><br><span class="line">                    if(s)&#123;</span><br><span class="line">                        sy.display = s;</span><br><span class="line"><span class="actionscript">                    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">                        sy.display = d ==<span class="string">'none'</span> ? <span class="string">''</span> : <span class="string">'none'</span>;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> detectCapsLock = <span class="function"><span class="keyword">function</span><span class="params">(event)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span>(capital)&#123;<span class="keyword">return</span>&#125;;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> e = event||<span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> keyCode = e.keyCode||e.which; <span class="comment">// 按键的keyCode</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> isShift = e.shiftKey ||(keyCode == <span class="number">16</span> ) || <span class="literal">false</span> ; <span class="comment">// shift键是否按住</span></span></span><br><span class="line">                if (</span><br><span class="line"><span class="actionscript">                    ((keyCode &gt;= <span class="number">65</span> &amp;&amp; keyCode &lt;= <span class="number">90</span> ) &amp;&amp; !isShift) <span class="comment">// Caps Lock 打开，且没有按住shift键</span></span></span><br><span class="line"><span class="actionscript">                    || ((keyCode &gt;= <span class="number">97</span> &amp;&amp; keyCode &lt;= <span class="number">122</span> ) &amp;&amp; isShift)<span class="comment">// Caps Lock 打开，且按住shift键</span></span></span><br><span class="line">                )&#123;</span><br><span class="line"><span class="actionscript">                    capitalTip.toggle(<span class="string">'block'</span>);</span></span><br><span class="line"><span class="actionscript">                    capital=<span class="literal">true</span>;</span></span><br><span class="line"><span class="actionscript">                &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">                    capitalTip.toggle(<span class="string">'none'</span>);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            inputPWD.onkeypress = detectCapsLock;</span><br><span class="line"><span class="actionscript">            inputPWD.onkeyup=<span class="function"><span class="keyword">function</span><span class="params">(event)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> e = event||<span class="built_in">window</span>.event;</span></span><br><span class="line">                if(e.keyCode == 20 &amp;&amp; capital)&#123;</span><br><span class="line">                    capitalTip.toggle();</span><br><span class="line"><span class="actionscript">                    <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)();</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/08/31/hello-world/"/>
      <url>/2018/08/31/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Other </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
